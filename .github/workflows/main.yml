name: ci

on:
  push:
    branches: [ master, newbuild ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      WITH_SHELL: nix-shell "$(git rev-parse --show-toplevel)"/etc/env/nix/shell.nix --argstr compiler ${{matrix.compiler}} --arg cuda ${{matrix.cuda}} --run
      NJ: 4

    strategy:
      matrix:
        compiler:
          - gcc11
          - gcc10
          - gcc9
          - gcc8
          - gcc7
          - gcc6
          - clang13
          - clang12
          - clang11
          - clang10
          - clang9
          - clang8
          - clang7
          - clang6
          - clang5
        cuda:
          - false

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Install Nix
      uses: cachix/install-nix-action@v15
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Install nix dependencies
      run: $WITH_SHELL 'env'

    - name: Bootstraping
      run: $WITH_SHELL './bootstrap.sh'

    - name: Configure
      run: |
        mkdir -p build/${{matrix.compiler}}
        cd build/${{matrix.compiler}}
        $WITH_SHELL '../../configure'

    - name: CTF
      run: |
        mkdir -p build/${{matrix.compiler}}
        cd build/${{matrix.compiler}}
        $WITH_SHELL 'make -j$NJ -C extern/ctf'

    - name: LIBINT
      run: |
        mkdir -p build/${{matrix.compiler}}
        cd build/${{matrix.compiler}}
        $WITH_SHELL 'make -j$NJ -C extern/libint'

    - name: EIGEN
      run: |
        mkdir -p build/${{matrix.compiler}}
        cd build/${{matrix.compiler}}
        $WITH_SHELL 'make -j$NJ -C extern/eigen'

    - name: YAMLCPP
      run: |
        mkdir -p build/${{matrix.compiler}}
        cd build/${{matrix.compiler}}
        $WITH_SHELL 'make -j$NJ -C extern/yaml-cpp'

    - name: Extern
      run: |
        mkdir -p build/${{matrix.compiler}}
        cd build/${{matrix.compiler}}
        $WITH_SHELL 'make -j$NJ extern'

    - name: sisi4s
      run: |
        mkdir -p build/${{matrix.compiler}}
        cd build/${{matrix.compiler}}
        $WITH_SHELL 'make -j$NJ sisi4s'

    - name: Run integration tests
      run: |
        mkdir -p build/${{matrix.compiler}}
        cd build/${{matrix.compiler}}
        $WITH_SHELL 'make -C integration-tests/ pyyaml run'
