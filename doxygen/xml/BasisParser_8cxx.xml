<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="BasisParser_8cxx" kind="file" language="C++">
    <compoundname>BasisParser.cxx</compoundname>
    <includes refid="BasisParser_8hpp" local="no">nwchem/BasisParser.hpp</includes>
    <includes refid="AngularMomentum_8hpp" local="no">util/AngularMomentum.hpp</includes>
    <includes refid="BasisSet_8hpp" local="no">util/BasisSet.hpp</includes>
    <includes local="no">numeric</includes>
    <incdepgraph>
      <node id="1">
        <label>BasisParser.cxx</label>
        <link refid="BasisParser_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nwchem/BasisParser.hpp</label>
        <link refid="BasisParser_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>util/AngularMomentum.hpp</label>
        <link refid="AngularMomentum_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>util/BasisSet.hpp</label>
        <link refid="BasisSet_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>util/Parsing.hpp</label>
        <link refid="Parsing_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="6">
        <label>fstream</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="12">
        <label>numeric</label>
      </node>
      <node id="9">
        <label>regex</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="BasisParser_8cxx_1ad397cdd98857b76e5afd2193986f5a11" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpars_1_1Regex" kindref="compound">Regex</ref></type>
        <definition>const Regex spherical</definition>
        <argsstring></argsstring>
        <name>spherical</name>
        <initializer>= oneOf({&quot;SPHERICAL&quot;, &quot;spherical&quot;})</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" line="10" column="13" bodyfile="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="BasisParser_8cxx_1a1049798b7b6e5d559b5a967cf0de11f5" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpars_1_1Regex" kindref="compound">Regex</ref></type>
        <definition>const Regex no_line</definition>
        <argsstring></argsstring>
        <name>no_line</name>
        <initializer>= bof + blank + anyOf + eof</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" line="11" column="13" bodyfile="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" bodystart="11" bodyend="-1"/>
        <referencedby refid="structnwchem_1_1BasisSetParser_1a191753ecb9daab8db5bc1a01a2624218" compoundref="BasisParser_8cxx" startline="65" endline="87">nwchem::BasisSetParser::parseFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="BasisParser_8cxx_1aaa89c7043faa998d89436713fc8350cb" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpars_1_1Regex" kindref="compound">Regex</ref></type>
        <definition>const Regex comment</definition>
        <argsstring></argsstring>
        <name>comment</name>
        <initializer>= bof + &quot;#&quot; + print + anyOf</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" line="12" column="13" bodyfile="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" bodystart="12" bodyend="-1"/>
        <referencedby refid="structnwchem_1_1BasisSetParser_1a191753ecb9daab8db5bc1a01a2624218" compoundref="BasisParser_8cxx" startline="65" endline="87">nwchem::BasisSetParser::parseFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="BasisParser_8cxx_1a156ca0deea9c63546408e182a101a2ac" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpars_1_1Regex" kindref="compound">Regex</ref></type>
        <definition>const Regex atom</definition>
        <argsstring></argsstring>
        <name>atom</name>
        <initializer>= upper + lower + optional</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" line="13" column="13" bodyfile="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" bodystart="13" bodyend="-1"/>
        <referencedby refid="HartreeFockFromGaussian_8cxx_1a6e3e58f018a24c4713011a2ea8ed72b6" compoundref="HartreeFockFromGaussian_8cxx" startline="95" endline="142">getOneBodyIntegrals_</referencedby>
        <referencedby refid="structnwchem_1_1BasisSetParser_1abdc326c61770f5a0554e09c676496cab" compoundref="BasisParser_8cxx" startline="25" endline="58">nwchem::BasisSetParser::parseBasis</referencedby>
        <referencedby refid="classsisi4s_1_1HartreeFockFromGaussian_1a78840a71ffbe05fbccb0a8ef6ec569af" compoundref="HartreeFockFromGaussian_8cxx" startline="211" endline="459">sisi4s::HartreeFockFromGaussian::run</referencedby>
      </memberdef>
      <memberdef kind="variable" id="BasisParser_8cxx_1a4734d9b1ccef308c95a49557a14fd702" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpars_1_1Regex" kindref="compound">Regex</ref></type>
        <definition>const Regex sep</definition>
        <argsstring></argsstring>
        <name>sep</name>
        <initializer>= blank + oneOrMore</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" line="13" column="19" bodyfile="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" bodystart="13" bodyend="-1"/>
        <referencedby refid="namespaceCLI_1_1detail_1a53b46b96102830769cc02952392e782f" compoundref="CLI11_8hpp" startline="366" endline="369">CLI::detail::is_separator</referencedby>
        <referencedby refid="classCLI_1_1ConfigBase_1ae85481923679eaee1eb065253633d795" compoundref="CLI11_8hpp" startline="2646" endline="2649">CLI::ConfigBase::parentSeparator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="BasisParser_8cxx_1aaaed59d768d5b46e43bef040235bd873" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpars_1_1Regex" kindref="compound">Regex</ref></type>
        <definition>const Regex shell_symbol</definition>
        <argsstring></argsstring>
        <name>shell_symbol</name>
        <initializer>= oneOf({&quot;S&quot;, &quot;P&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;K&quot;})</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" line="14" column="13" bodyfile="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="BasisParser_8cxx_1a1c02838e49034aa87346b4b4d9a3f770" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpars_1_1Regex" kindref="compound">Regex</ref></type>
        <definition>const Regex shell_header</definition>
        <argsstring></argsstring>
        <name>shell_header</name>
        <initializer>= bof + capture(atom.s) + sep.s
                         + capture(shell_symbol.s) + blank + anyOf</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" line="15" column="13" bodyfile="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" bodystart="15" bodyend="-1"/>
        <referencedby refid="structnwchem_1_1BasisSetParser_1abdc326c61770f5a0554e09c676496cab" compoundref="BasisParser_8cxx" startline="25" endline="58">nwchem::BasisSetParser::parseBasis</referencedby>
      </memberdef>
      <memberdef kind="variable" id="BasisParser_8cxx_1aae3bb147b0ca5e918a953b1e1475134d" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpars_1_1Regex" kindref="compound">Regex</ref></type>
        <definition>const Regex shell_content</definition>
        <argsstring></argsstring>
        <name>shell_content</name>
        <initializer>= bof + blank + anyOf + capture(realNumber) + sep.s
                          + capture(realNumber)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" line="17" column="13" bodyfile="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" bodystart="17" bodyend="-1"/>
        <referencedby refid="structnwchem_1_1BasisSetParser_1abdc326c61770f5a0554e09c676496cab" compoundref="BasisParser_8cxx" startline="25" endline="58">nwchem::BasisSetParser::parseBasis</referencedby>
      </memberdef>
      <memberdef kind="variable" id="BasisParser_8cxx_1a79a63f817601a88348e4e6a1a9bf7886" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpars_1_1Regex" kindref="compound">Regex</ref></type>
        <definition>const Regex basis_token</definition>
        <argsstring></argsstring>
        <name>basis_token</name>
        <initializer>= oneOf({&quot;basis&quot;, &quot;BASIS&quot;})</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" line="19" column="13" bodyfile="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="BasisParser_8cxx_1a949920ca7dbc05b531b4dad69d7b4318" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpars_1_1Regex" kindref="compound">Regex</ref></type>
        <definition>const Regex basis_name</definition>
        <argsstring></argsstring>
        <name>basis_name</name>
        <initializer>= &quot;\&quot;&quot; + capture(print + oneOrMore) + &quot;\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" line="20" column="13" bodyfile="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="BasisParser_8cxx_1a0c3fb5f0d169dea12886e9608370234d" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpars_1_1Regex" kindref="compound">Regex</ref></type>
        <definition>const Regex basis_header</definition>
        <argsstring></argsstring>
        <name>basis_header</name>
        <initializer>= group(basis_token.s) + sep.s + basis_name.s + sep.s
                         + group(spherical.s) + blank + anyOf</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" line="21" column="13" bodyfile="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" bodystart="21" bodyend="-1"/>
        <referencedby refid="structnwchem_1_1BasisSetParser_1a191753ecb9daab8db5bc1a01a2624218" compoundref="BasisParser_8cxx" startline="65" endline="87">nwchem::BasisSetParser::parseFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="BasisParser_8cxx_1a3a10a95689662bca17ffae75d2d89e4d" prot="public" static="no" mutable="no">
        <type>const <ref refid="structpars_1_1Regex" kindref="compound">Regex</ref></type>
        <definition>const Regex basis_end</definition>
        <argsstring></argsstring>
        <name>basis_end</name>
        <initializer>= bof + group(oneOf({&quot;end&quot;, &quot;END&quot;}))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" line="23" column="13" bodyfile="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx" bodystart="23" bodyend="-1"/>
        <referencedby refid="structnwchem_1_1BasisSetParser_1abdc326c61770f5a0554e09c676496cab" compoundref="BasisParser_8cxx" startline="25" endline="58">nwchem::BasisSetParser::parseBasis</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="BasisParser_8hpp" kindref="compound">nwchem/BasisParser.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AngularMomentum_8hpp" kindref="compound">util/AngularMomentum.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="BasisSet_8hpp" kindref="compound">util/BasisSet.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepars" kindref="compound">pars</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenwchem" kindref="compound">nwchem</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceam" kindref="compound">am</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="BasisParser_8cxx_1ad397cdd98857b76e5afd2193986f5a11" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpars_1_1Regex" kindref="compound">Regex</ref><sp/><ref refid="BasisParser_8cxx_1ad397cdd98857b76e5afd2193986f5a11" kindref="member">spherical</ref><sp/>=<sp/><ref refid="namespacepars_1abf63d88b9d2972448bb8e2e8f3e86300" kindref="member">oneOf</ref>({</highlight><highlight class="stringliteral">&quot;SPHERICAL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;spherical&quot;</highlight><highlight class="normal">}),</highlight></codeline>
<codeline lineno="11" refid="BasisParser_8cxx_1a1049798b7b6e5d559b5a967cf0de11f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BasisParser_8cxx_1a1049798b7b6e5d559b5a967cf0de11f5" kindref="member">no_line</ref><sp/>=<sp/><ref refid="namespacepars_1a07f6fdb3a7f7f358ee1330f866f144db" kindref="member">bof</ref><sp/>+<sp/><ref refid="namespacepars_1a1cce466723c30e92152dd3a9ede48df0" kindref="member">blank</ref><sp/>+<sp/><ref refid="namespacepars_1a6dd95daa3e3817a64dd5b6d4fff8d417" kindref="member">anyOf</ref><sp/>+<sp/><ref refid="namespacepars_1a2fea7aec0ef4f24e5b90e588d96f4cc2" kindref="member">eof</ref>,</highlight></codeline>
<codeline lineno="12" refid="BasisParser_8cxx_1aaa89c7043faa998d89436713fc8350cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BasisParser_8cxx_1aaa89c7043faa998d89436713fc8350cb" kindref="member">comment</ref><sp/>=<sp/><ref refid="namespacepars_1a07f6fdb3a7f7f358ee1330f866f144db" kindref="member">bof</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacepars_1ae984e547a97d4f7ad42367cc43206cf1" kindref="member">print</ref><sp/>+<sp/><ref refid="namespacepars_1a6dd95daa3e3817a64dd5b6d4fff8d417" kindref="member">anyOf</ref>,</highlight></codeline>
<codeline lineno="13" refid="BasisParser_8cxx_1a156ca0deea9c63546408e182a101a2ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BasisParser_8cxx_1a156ca0deea9c63546408e182a101a2ac" kindref="member">atom</ref><sp/>=<sp/><ref refid="namespacepars_1a8e4122733980cf5623d19f2ba68ccf12" kindref="member">upper</ref><sp/>+<sp/><ref refid="namespacepars_1a020cf386310223423b06c230ee658c13" kindref="member">lower</ref><sp/>+<sp/><ref refid="namespacepars_1a832dec230b6f898fda8c99bf54323d18" kindref="member">optional</ref>,<sp/><ref refid="BasisParser_8cxx_1a4734d9b1ccef308c95a49557a14fd702" kindref="member">sep</ref><sp/>=<sp/><ref refid="namespacepars_1a1cce466723c30e92152dd3a9ede48df0" kindref="member">blank</ref><sp/>+<sp/><ref refid="namespacepars_1a71161c67c796117fe14c18beb97b4de2" kindref="member">oneOrMore</ref>,</highlight></codeline>
<codeline lineno="14" refid="BasisParser_8cxx_1aaaed59d768d5b46e43bef040235bd873" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BasisParser_8cxx_1aaaed59d768d5b46e43bef040235bd873" kindref="member">shell_symbol</ref><sp/>=<sp/><ref refid="namespacepars_1abf63d88b9d2972448bb8e2e8f3e86300" kindref="member">oneOf</ref>({</highlight><highlight class="stringliteral">&quot;S&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;P&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;H&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">}),</highlight></codeline>
<codeline lineno="15" refid="BasisParser_8cxx_1a1c02838e49034aa87346b4b4d9a3f770" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BasisParser_8cxx_1a1c02838e49034aa87346b4b4d9a3f770" kindref="member">shell_header</ref><sp/>=<sp/><ref refid="namespacepars_1a07f6fdb3a7f7f358ee1330f866f144db" kindref="member">bof</ref><sp/>+<sp/><ref refid="namespacepars_1a9253594a7f8dfb9207a05eb210460d8d" kindref="member">capture</ref>(<ref refid="BasisParser_8cxx_1a156ca0deea9c63546408e182a101a2ac" kindref="member">atom</ref>.<ref refid="structpars_1_1Regex_1abf07e459897fa63a5e8a60b114d9db31" kindref="member">s</ref>)<sp/>+<sp/><ref refid="BasisParser_8cxx_1a4734d9b1ccef308c95a49557a14fd702" kindref="member">sep</ref>.<ref refid="structpars_1_1Regex_1abf07e459897fa63a5e8a60b114d9db31" kindref="member">s</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespacepars_1a9253594a7f8dfb9207a05eb210460d8d" kindref="member">capture</ref>(<ref refid="BasisParser_8cxx_1aaaed59d768d5b46e43bef040235bd873" kindref="member">shell_symbol</ref>.<ref refid="structpars_1_1Regex_1abf07e459897fa63a5e8a60b114d9db31" kindref="member">s</ref>)<sp/>+<sp/><ref refid="namespacepars_1a1cce466723c30e92152dd3a9ede48df0" kindref="member">blank</ref><sp/>+<sp/><ref refid="namespacepars_1a6dd95daa3e3817a64dd5b6d4fff8d417" kindref="member">anyOf</ref>,</highlight></codeline>
<codeline lineno="17" refid="BasisParser_8cxx_1aae3bb147b0ca5e918a953b1e1475134d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BasisParser_8cxx_1aae3bb147b0ca5e918a953b1e1475134d" kindref="member">shell_content</ref><sp/>=<sp/><ref refid="namespacepars_1a07f6fdb3a7f7f358ee1330f866f144db" kindref="member">bof</ref><sp/>+<sp/><ref refid="namespacepars_1a1cce466723c30e92152dd3a9ede48df0" kindref="member">blank</ref><sp/>+<sp/><ref refid="namespacepars_1a6dd95daa3e3817a64dd5b6d4fff8d417" kindref="member">anyOf</ref><sp/>+<sp/><ref refid="namespacepars_1a9253594a7f8dfb9207a05eb210460d8d" kindref="member">capture</ref>(<ref refid="namespacepars_1abd0d3ec23684cfcbfd53a65509861855" kindref="member">realNumber</ref>)<sp/>+<sp/><ref refid="BasisParser_8cxx_1a4734d9b1ccef308c95a49557a14fd702" kindref="member">sep</ref>.<ref refid="structpars_1_1Regex_1abf07e459897fa63a5e8a60b114d9db31" kindref="member">s</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespacepars_1a9253594a7f8dfb9207a05eb210460d8d" kindref="member">capture</ref>(<ref refid="namespacepars_1abd0d3ec23684cfcbfd53a65509861855" kindref="member">realNumber</ref>),</highlight></codeline>
<codeline lineno="19" refid="BasisParser_8cxx_1a79a63f817601a88348e4e6a1a9bf7886" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BasisParser_8cxx_1a79a63f817601a88348e4e6a1a9bf7886" kindref="member">basis_token</ref><sp/>=<sp/><ref refid="namespacepars_1abf63d88b9d2972448bb8e2e8f3e86300" kindref="member">oneOf</ref>({</highlight><highlight class="stringliteral">&quot;basis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BASIS&quot;</highlight><highlight class="normal">}),</highlight></codeline>
<codeline lineno="20" refid="BasisParser_8cxx_1a949920ca7dbc05b531b4dad69d7b4318" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BasisParser_8cxx_1a949920ca7dbc05b531b4dad69d7b4318" kindref="member">basis_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacepars_1a9253594a7f8dfb9207a05eb210460d8d" kindref="member">capture</ref>(<ref refid="namespacepars_1ae984e547a97d4f7ad42367cc43206cf1" kindref="member">print</ref><sp/>+<sp/><ref refid="namespacepars_1a71161c67c796117fe14c18beb97b4de2" kindref="member">oneOrMore</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="21" refid="BasisParser_8cxx_1a0c3fb5f0d169dea12886e9608370234d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BasisParser_8cxx_1a0c3fb5f0d169dea12886e9608370234d" kindref="member">basis_header</ref><sp/>=<sp/><ref refid="namespacepars_1a56722e3642335e4646823756ceb888ca" kindref="member">group</ref>(<ref refid="BasisParser_8cxx_1a79a63f817601a88348e4e6a1a9bf7886" kindref="member">basis_token</ref>.<ref refid="structpars_1_1Regex_1abf07e459897fa63a5e8a60b114d9db31" kindref="member">s</ref>)<sp/>+<sp/><ref refid="BasisParser_8cxx_1a4734d9b1ccef308c95a49557a14fd702" kindref="member">sep</ref>.<ref refid="structpars_1_1Regex_1abf07e459897fa63a5e8a60b114d9db31" kindref="member">s</ref><sp/>+<sp/><ref refid="BasisParser_8cxx_1a949920ca7dbc05b531b4dad69d7b4318" kindref="member">basis_name</ref>.<ref refid="structpars_1_1Regex_1abf07e459897fa63a5e8a60b114d9db31" kindref="member">s</ref><sp/>+<sp/><ref refid="BasisParser_8cxx_1a4734d9b1ccef308c95a49557a14fd702" kindref="member">sep</ref>.<ref refid="structpars_1_1Regex_1abf07e459897fa63a5e8a60b114d9db31" kindref="member">s</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespacepars_1a56722e3642335e4646823756ceb888ca" kindref="member">group</ref>(<ref refid="BasisParser_8cxx_1ad397cdd98857b76e5afd2193986f5a11" kindref="member">spherical</ref>.<ref refid="structpars_1_1Regex_1abf07e459897fa63a5e8a60b114d9db31" kindref="member">s</ref>)<sp/>+<sp/><ref refid="namespacepars_1a1cce466723c30e92152dd3a9ede48df0" kindref="member">blank</ref><sp/>+<sp/><ref refid="namespacepars_1a6dd95daa3e3817a64dd5b6d4fff8d417" kindref="member">anyOf</ref>,</highlight></codeline>
<codeline lineno="23" refid="BasisParser_8cxx_1a3a10a95689662bca17ffae75d2d89e4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BasisParser_8cxx_1a3a10a95689662bca17ffae75d2d89e4d" kindref="member">basis_end</ref><sp/>=<sp/><ref refid="namespacepars_1a07f6fdb3a7f7f358ee1330f866f144db" kindref="member">bof</ref><sp/>+<sp/><ref refid="namespacepars_1a56722e3642335e4646823756ceb888ca" kindref="member">group</ref>(<ref refid="namespacepars_1abf63d88b9d2972448bb8e2e8f3e86300" kindref="member">oneOf</ref>({</highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;END&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structnwchem_1_1BasisSetParser_1abdc326c61770f5a0554e09c676496cab" refkind="member"><highlight class="normal"><ref refid="structBasis" kindref="compound">Basis</ref><sp/><ref refid="structnwchem_1_1BasisSetParser_1abdc326c61770f5a0554e09c676496cab" kindref="member">BasisSetParser::parseBasis</ref>(std::fstream<sp/>&amp;f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>std::vector&lt;Shell&gt;<sp/>shells;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>coe,<sp/>exp;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="BasisParser_8cxx_1a156ca0deea9c63546408e182a101a2ac" kindref="member">atom</ref>,<sp/>shSymbol;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>addShellToBasis<sp/>=<sp/>[&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>shells.push_back({<ref refid="BasisParser_8cxx_1a156ca0deea9c63546408e182a101a2ac" kindref="member">atom</ref>,<sp/><ref refid="namespaceam_1ac6b40085587bff5481ac689700436e24" kindref="member">am::fromString</ref>(shSymbol),<sp/>{coe,<sp/>exp}});</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>coe.resize(0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>exp.resize(0);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(f,<sp/>line))<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structnwchem_1_1BasisSetParser_1a897f82a03eca6f0768e6fee1da071dc5" kindref="member">matches</ref>(line,<sp/><ref refid="BasisParser_8cxx_1a1c02838e49034aa87346b4b4d9a3f770" kindref="member">shell_header</ref>))<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coe.size()<sp/>and<sp/>exp.size())<sp/>{<sp/>addShellToBasis();<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BasisParser_8cxx_1a156ca0deea9c63546408e182a101a2ac" kindref="member">atom</ref><sp/>=<sp/>std::string(<ref refid="structnwchem_1_1BasisSetParser_1a8731a13d65c8243999af4277f5f5d47d" kindref="member">match</ref>[1]);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shSymbol<sp/>=<sp/>std::string(<ref refid="structnwchem_1_1BasisSetParser_1a8731a13d65c8243999af4277f5f5d47d" kindref="member">match</ref>[2]);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structnwchem_1_1BasisSetParser_1a897f82a03eca6f0768e6fee1da071dc5" kindref="member">matches</ref>(line,<sp/><ref refid="BasisParser_8cxx_1a3a10a95689662bca17ffae75d2d89e4d" kindref="member">basis_end</ref>))<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addShellToBasis();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="BasisParser_8cxx_1a156ca0deea9c63546408e182a101a2ac" kindref="member">atom</ref>,<sp/>name,<sp/>shells};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structnwchem_1_1BasisSetParser_1a897f82a03eca6f0768e6fee1da071dc5" kindref="member">matches</ref>(line,<sp/><ref refid="BasisParser_8cxx_1aae3bb147b0ca5e918a953b1e1475134d" kindref="member">shell_content</ref>))<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;in:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>coe.push_back(std::atof(std::string(<ref refid="structnwchem_1_1BasisSetParser_1a8731a13d65c8243999af4277f5f5d47d" kindref="member">match</ref>[2]).c_str()));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>exp.push_back(std::atof(std::string(<ref refid="structnwchem_1_1BasisSetParser_1a8731a13d65c8243999af4277f5f5d47d" kindref="member">match</ref>[1]).c_str()));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>able<sp/>to<sp/>parse<sp/>basis,<sp/>fix<sp/>your<sp/>input&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structnwchem_1_1BasisSetParser_1a897f82a03eca6f0768e6fee1da071dc5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structnwchem_1_1BasisSetParser_1a897f82a03eca6f0768e6fee1da071dc5" kindref="member">BasisSetParser::matches</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpars_1_1Regex" kindref="compound">Regex</ref><sp/>&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>std::regex_match(t,<sp/><ref refid="structnwchem_1_1BasisSetParser_1a8731a13d65c8243999af4277f5f5d47d" kindref="member">match</ref>,<sp/>r.<ref refid="structpars_1_1Regex_1a79e1cba281b5ea7efe06b5de947037ff" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structnwchem_1_1BasisSetParser_1a8731a13d65c8243999af4277f5f5d47d" kindref="member">match</ref>.size()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structnwchem_1_1BasisSetParser_1a191753ecb9daab8db5bc1a01a2624218" refkind="member"><highlight class="normal"><ref refid="BasisSet_8hpp_1ad0ff2dd7a949f1830da34b68ceb30575" kindref="member">BasisSet</ref><sp/><ref refid="structnwchem_1_1BasisSetParser_1a191753ecb9daab8db5bc1a01a2624218" kindref="member">BasisSetParser::parseFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fileName)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>std::fstream<sp/>f(fileName);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="BasisSet_8hpp_1ad0ff2dd7a949f1830da34b68ceb30575" kindref="member">BasisSet</ref><sp/>bs;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f.is_open())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;File<sp/>IO<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>fileName;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(f,<sp/>line))<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>empty<sp/>or<sp/>comment<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structnwchem_1_1BasisSetParser_1a897f82a03eca6f0768e6fee1da071dc5" kindref="member">matches</ref>(line,<sp/><ref refid="BasisParser_8cxx_1a1049798b7b6e5d559b5a967cf0de11f5" kindref="member">no_line</ref>)<sp/>||<sp/><ref refid="structnwchem_1_1BasisSetParser_1a897f82a03eca6f0768e6fee1da071dc5" kindref="member">matches</ref>(line,<sp/><ref refid="BasisParser_8cxx_1aaa89c7043faa998d89436713fc8350cb" kindref="member">comment</ref>))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>basis<sp/>whenever<sp/>we<sp/>find<sp/>basis...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structnwchem_1_1BasisSetParser_1a897f82a03eca6f0768e6fee1da071dc5" kindref="member">matches</ref>(line,<sp/><ref refid="BasisParser_8cxx_1a0c3fb5f0d169dea12886e9608370234d" kindref="member">basis_header</ref>))<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>v--<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bs.push_back(<ref refid="structnwchem_1_1BasisSetParser_1abdc326c61770f5a0554e09c676496cab" kindref="member">parseBasis</ref>(f,<sp/><ref refid="structnwchem_1_1BasisSetParser_1a8731a13d65c8243999af4277f5f5d47d" kindref="member">match</ref>[1].str()));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;I<sp/>don&apos;t<sp/>understand:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>line;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bs;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/sisi4s/sisi4s/src/nwchem/BasisParser.cxx"/>
  </compounddef>
</doxygen>
