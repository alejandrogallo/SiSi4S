<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="BasisSet_8hpp" kind="file" language="C++">
    <compoundname>BasisSet.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes refid="AngularMomentum_8hpp" local="no">util/AngularMomentum.hpp</includes>
    <includes local="no">numeric</includes>
    <includedby refid="BasisParser_8cxx" local="no">BasisParser.cxx</includedby>
    <includedby refid="BasisParser_8hpp" local="no">BasisParser.hpp</includedby>
    <includedby refid="BasisSet_8cxx" local="no">BasisSet.cxx</includedby>
    <includedby refid="MoReader_8cxx" local="no">MoReader.cxx</includedby>
    <incdepgraph>
      <node id="3">
        <label>util/AngularMomentum.hpp</label>
        <link refid="AngularMomentum_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>BasisSet.hpp</label>
        <link refid="BasisSet_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>numeric</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>MoReader.cxx</label>
        <link refid="MoReader_8cxx"/>
      </node>
      <node id="2">
        <label>BasisParser.cxx</label>
        <link refid="BasisParser_8cxx"/>
      </node>
      <node id="3">
        <label>BasisParser.hpp</label>
        <link refid="BasisParser_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>BasisSet.cxx</label>
        <link refid="BasisSet_8cxx"/>
      </node>
      <node id="1">
        <label>BasisSet.hpp</label>
        <link refid="BasisSet_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structContractedGaussian" prot="public">ContractedGaussian</innerclass>
    <innerclass refid="structShell" prot="public">Shell</innerclass>
    <innerclass refid="structBasis" prot="public">Basis</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="BasisSet_8hpp_1ad0ff2dd7a949f1830da34b68ceb30575" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structBasis" kindref="compound">Basis</ref> &gt;</type>
        <definition>typedef std::vector&lt;Basis&gt; BasisSet</definition>
        <argsstring></argsstring>
        <name>BasisSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/SiSi4S/SiSi4S/src/util/BasisSet.hpp" line="35" column="21" bodyfile="/home/runner/work/SiSi4S/SiSi4S/src/util/BasisSet.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>___BASIS_SET_DEFINITIONS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>___BASIS_SET_DEFINITIONS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AngularMomentum_8hpp" kindref="compound">util/AngularMomentum.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="structContractedGaussian" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structContractedGaussian" kindref="compound">ContractedGaussian</ref><sp/>{</highlight></codeline>
<codeline lineno="9" refid="structContractedGaussian_1a604e50179488f934c5033904e1767ff8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/><ref refid="structContractedGaussian_1a604e50179488f934c5033904e1767ff8" kindref="member">coefficients</ref>,<sp/><ref refid="structContractedGaussian_1a5f3e3228154e84c4a0d7769689aff77e" kindref="member">exponents</ref>;</highlight></codeline>
<codeline lineno="10" refid="structContractedGaussian_1a0bb00325f21012cbb344454d2cec82f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structContractedGaussian_1a0bb00325f21012cbb344454d2cec82f5" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structContractedGaussian_1a604e50179488f934c5033904e1767ff8" kindref="member">coefficients</ref>.size();<sp/>}</highlight></codeline>
<codeline lineno="11"><highlight class="normal">};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="structShell" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structShell" kindref="compound">Shell</ref><sp/>{</highlight></codeline>
<codeline lineno="14" refid="structShell_1a971ebe0b3950bc65e1a220dccabe82aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structShell_1a971ebe0b3950bc65e1a220dccabe82aa" kindref="member">atom</ref>;</highlight></codeline>
<codeline lineno="15" refid="structShell_1a409a9c2b7277dd0327c8017b5f68a296" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408" kindref="member">am::AngularMomentum</ref><sp/><ref refid="structShell_1a409a9c2b7277dd0327c8017b5f68a296" kindref="member">am</ref>;</highlight></codeline>
<codeline lineno="16" refid="structShell_1a1290cfe164b11541efa50faecd0cea54" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structContractedGaussian" kindref="compound">ContractedGaussian</ref><sp/><ref refid="structShell_1a1290cfe164b11541efa50faecd0cea54" kindref="member">g</ref>;</highlight></codeline>
<codeline lineno="17" refid="structShell_1aa7a93b277d0f3a2e8538efb40eb57483" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structShell_1aa7a93b277d0f3a2e8538efb40eb57483" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structShell_1a1290cfe164b11541efa50faecd0cea54" kindref="member">g</ref>.<ref refid="structContractedGaussian_1a0bb00325f21012cbb344454d2cec82f5" kindref="member">size</ref>();<sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal">};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structBasis" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structBasis" kindref="compound">Basis</ref><sp/>{</highlight></codeline>
<codeline lineno="21" refid="structBasis_1aa9a5964c0483ac09742cfa72f2ecfda7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structBasis_1aa9a5964c0483ac09742cfa72f2ecfda7" kindref="member">atom</ref>;</highlight></codeline>
<codeline lineno="22" refid="structBasis_1aa02b05717a5c087ce01253699005e053" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structBasis_1aa02b05717a5c087ce01253699005e053" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="23" refid="structBasis_1ac27897ca1cd476498919e907c63bc5af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Shell&gt;<sp/><ref refid="structBasis_1ac27897ca1cd476498919e907c63bc5af" kindref="member">shells</ref>;</highlight></codeline>
<codeline lineno="24" refid="structBasis_1a485ca64f90f3e7eda6feb82200dc1b03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structBasis_1a485ca64f90f3e7eda6feb82200dc1b03" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structBasis_1ac27897ca1cd476498919e907c63bc5af" kindref="member">shells</ref>.size();<sp/>}</highlight></codeline>
<codeline lineno="25" refid="structBasis_1afd68c2100fac150e3b3c7dc3f45552f0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structBasis_1afd68c2100fac150e3b3c7dc3f45552f0" kindref="member">nbf</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>std::accumulate(<sp/><ref refid="structBasis_1ac27897ca1cd476498919e907c63bc5af" kindref="member">shells</ref>.begin()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="structBasis_1ac27897ca1cd476498919e907c63bc5af" kindref="member">shells</ref>.end()</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>[&amp;](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structShell" kindref="compound">Shell</ref><sp/>&amp;s){<sp/>return<sp/>i<sp/>+<sp/>s.size();<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="BasisSet_8hpp_1ad0ff2dd7a949f1830da34b68ceb30575" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;Basis&gt;<sp/><ref refid="BasisSet_8hpp_1ad0ff2dd7a949f1830da34b68ceb30575" kindref="member">BasisSet</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/SiSi4S/SiSi4S/src/util/BasisSet.hpp"/>
  </compounddef>
</doxygen>
