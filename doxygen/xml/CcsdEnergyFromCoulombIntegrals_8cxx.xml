<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="CcsdEnergyFromCoulombIntegrals_8cxx" kind="file" language="C++">
    <compoundname>CcsdEnergyFromCoulombIntegrals.cxx</compoundname>
    <includes refid="CcsdEnergyFromCoulombIntegrals_8hpp" local="no">algorithms/CcsdEnergyFromCoulombIntegrals.hpp</includes>
    <includes refid="Complex_8hpp" local="no">math/Complex.hpp</includes>
    <includes refid="ComplexTensor_8hpp" local="no">math/ComplexTensor.hpp</includes>
    <includes refid="MathFunctions_8hpp" local="no">math/MathFunctions.hpp</includes>
    <includes refid="DryTensor_8hpp" local="no">DryTensor.hpp</includes>
    <includes refid="Log_8hpp" local="no">util/Log.hpp</includes>
    <includes refid="Exception_8hpp" local="no">util/Exception.hpp</includes>
    <includes refid="Sisi4s_8hpp" local="no">Sisi4s.hpp</includes>
    <includes refid="CTF_8hpp" local="no">util/CTF.hpp</includes>
    <includes local="no">array</includes>
    <incdepgraph>
      <node id="5">
        <label>Data.hpp</label>
        <link refid="Data_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>DryTensor.hpp</label>
        <link refid="DryTensor_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Options.hpp</label>
        <link refid="Options_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Sisi4s.hpp</label>
        <link refid="Sisi4s_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>algorithms/Algorithm.hpp</label>
        <link refid="Algorithm_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>CcsdEnergyFromCoulombIntegrals.cxx</label>
        <link refid="CcsdEnergyFromCoulombIntegrals_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithms/CcsdEnergyFromCoulombIntegrals.hpp</label>
        <link refid="CcsdEnergyFromCoulombIntegrals_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>algorithms/ClusterSinglesDoublesAlgorithm.hpp</label>
        <link refid="ClusterSinglesDoublesAlgorithm_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>extern/CLI11.hpp</label>
        <link refid="CLI11_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>math/Complex.hpp</label>
        <link refid="Complex_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>math/ComplexTensor.hpp</label>
        <link refid="ComplexTensor_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>math/Float.hpp</label>
        <link refid="Float_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>math/FockVector.hpp</label>
        <link refid="FockVector_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>math/MathFunctions.hpp</label>
        <link refid="MathFunctions_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>util/CTF.hpp</label>
        <link refid="CTF_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util/Exception.hpp</label>
        <link refid="Exception_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>util/Log.hpp</label>
        <link refid="Log_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>util/SharedPointer.hpp</label>
        <link refid="SharedPointer_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>util/SourceLocation.hpp</label>
        <link refid="SourceLocation_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>util/Time.hpp</label>
        <link refid="Time_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>algorithm</label>
      </node>
      <node id="51">
        <label>array</label>
      </node>
      <node id="13">
        <label>cmath</label>
      </node>
      <node id="20">
        <label>complex</label>
      </node>
      <node id="9">
        <label>cstdint</label>
      </node>
      <node id="24">
        <label>ctf.hpp</label>
      </node>
      <node id="8">
        <label>ctime</label>
      </node>
      <node id="45">
        <label>exception</label>
      </node>
      <node id="17">
        <label>fstream</label>
      </node>
      <node id="34">
        <label>functional</label>
      </node>
      <node id="50">
        <label>initializer_list</label>
      </node>
      <node id="11">
        <label>iomanip</label>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="42">
        <label>iterator</label>
      </node>
      <node id="44">
        <label>limits</label>
      </node>
      <node id="38">
        <label>locale</label>
      </node>
      <node id="21">
        <label>map</label>
      </node>
      <node id="30">
        <label>memory</label>
      </node>
      <node id="35">
        <label>numeric</label>
      </node>
      <node id="10">
        <label>ostream</label>
      </node>
      <node id="40">
        <label>set</label>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="43">
        <label>stdexcept</label>
      </node>
      <node id="16">
        <label>streambuf</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="46">
        <label>sys/stat.h</label>
      </node>
      <node id="47">
        <label>sys/types.h</label>
      </node>
      <node id="36">
        <label>tuple</label>
      </node>
      <node id="41">
        <label>type_traits</label>
      </node>
      <node id="37">
        <label>utility</label>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="CcsdEnergyFromCoulombIntegrals_8hpp" kindref="compound">algorithms/CcsdEnergyFromCoulombIntegrals.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Complex_8hpp" kindref="compound">math/Complex.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ComplexTensor_8hpp" kindref="compound">math/ComplexTensor.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="MathFunctions_8hpp" kindref="compound">math/MathFunctions.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DryTensor_8hpp" kindref="compound">DryTensor.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Log_8hpp" kindref="compound">util/Log.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Exception_8hpp" kindref="compound">util/Exception.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Sisi4s_8hpp" kindref="compound">Sisi4s.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="CTF_8hpp" kindref="compound">util/CTF.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">CTF;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s" kindref="compound">sisi4s</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="Algorithm_8hpp_1a07e9ffa67ed21886a687b27719c949e1" kindref="member">ALGORITHM_REGISTRAR_DEFINITION</ref>(<ref refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals" kindref="compound">CcsdEnergyFromCoulombIntegrals</ref>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1afd014cc1ca47637372448a1d916858fd" refkind="member"><highlight class="normal">CcsdEnergyFromCoulombIntegrals::CcsdEnergyFromCoulombIntegrals(</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>std::vector&lt;Argument&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;argumentList</highlight></codeline>
<codeline lineno="19"><highlight class="normal">):<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm" kindref="compound">ClusterSinglesDoublesAlgorithm</ref>(argumentList)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1a30470658edeb6e88f163aed1e6823de7" refkind="member"><highlight class="normal"><ref refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1a30470658edeb6e88f163aed1e6823de7" kindref="member">CcsdEnergyFromCoulombIntegrals::~CcsdEnergyFromCoulombIntegrals</ref>()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/>Hirata<sp/>iteration<sp/>routine<sp/>for<sp/>the<sp/>CCSD<sp/>amplitudes<sp/>Tabij<sp/>and<sp/>Tai<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>So<sp/>Hirata,<sp/>et.<sp/>al.<sp/>Chem.<sp/>Phys.<sp/>Letters,<sp/>345,<sp/>475<sp/>(2001)</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1a5ec0fe08374df8bf74029a3eee23942c" refkind="member"><highlight class="normal"><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(<ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;double&gt;</ref>)<sp/><ref refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1a5ec0fe08374df8bf74029a3eee23942c" kindref="member">CcsdEnergyFromCoulombIntegrals::getResiduum</ref>(</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;double&gt;</ref>)<sp/>&amp;amplitudes</highlight></codeline>
<codeline lineno="32"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>singles<sp/>and<sp/>doubles<sp/>part<sp/>of<sp/>the<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Tai(<sp/>amplitudes-&gt;<ref refid="classsisi4s_1_1FockVector_1ac37c525c89799fb6e2fa419acb4edf4a" kindref="member">get</ref>(0)<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>Tai-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Tai&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Tabij(<sp/>amplitudes-&gt;<ref refid="classsisi4s_1_1FockVector_1ac37c525c89799fb6e2fa419acb4edf4a" kindref="member">get</ref>(1)<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>Tabij-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Tabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>residuum<sp/>and<sp/>get<sp/>their<sp/>singles<sp/>and<sp/>doubles<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>residuum(<sp/><ref refid="SharedPointer_8hpp_1a106f61c342cfd013eb570c37328070ae" kindref="member">NEW</ref>(<ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;double&gt;</ref>,<sp/>*amplitudes)<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>*residuum<sp/>*=<sp/>0.0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Rai(<sp/>residuum-&gt;get(0)<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>Rai-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Rai&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Rabij(<sp/>residuum-&gt;get(1)<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>Rabij-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Rabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>part<sp/>of<sp/>Coulomb<sp/>integrals<sp/>used<sp/>whether<sp/>the<sp/>amplitudes<sp/>are<sp/>zero<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vabij(<ref refid="classsisi4s_1_1Algorithm_1a338a44c8fd4d6be3b32a6d5e71dfe180" kindref="member">getTensorArgument</ref>(</highlight><highlight class="stringliteral">&quot;PPHHCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>!<ref refid="classsisi4s_1_1Algorithm_1aec9041b31cb64a42ee1fd79d32774266" kindref="member">isArgumentGiven</ref>(</highlight><highlight class="stringliteral">&quot;initialDoublesAmplitudes&quot;</highlight><highlight class="normal">))<sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>first<sp/>iteration<sp/>compute<sp/>only<sp/>the<sp/>MP2<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>Tabij<sp/>=<sp/>0,<sp/>Vabij<sp/>is<sp/>the<sp/>only<sp/>non-zero<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MP2<sp/>T2<sp/>Amplitudes&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>=<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>rest<sp/>iterations<sp/>compute<sp/>the<sp/>CCSD<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>all<sp/>required<sp/>integrals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vaibj(<ref refid="classsisi4s_1_1Algorithm_1a338a44c8fd4d6be3b32a6d5e71dfe180" kindref="member">getTensorArgument</ref>(</highlight><highlight class="stringliteral">&quot;PHPHCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vijkl(<ref refid="classsisi4s_1_1Algorithm_1a338a44c8fd4d6be3b32a6d5e71dfe180" kindref="member">getTensorArgument</ref>(</highlight><highlight class="stringliteral">&quot;HHHHCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vijka(<ref refid="classsisi4s_1_1Algorithm_1a338a44c8fd4d6be3b32a6d5e71dfe180" kindref="member">getTensorArgument</ref>(</highlight><highlight class="stringliteral">&quot;HHHPCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>Coulomb<sp/>vertex<sp/>GammaGqr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>GammaGqr(<sp/>getTensorArgument&lt;complex&gt;(</highlight><highlight class="stringliteral">&quot;CoulombVertex&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>No,Nv,NG,Np</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>No(Vabij-&gt;lens[2]);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nv(Vabij-&gt;lens[0]);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NG(GammaGqr-&gt;lens[0]);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Np(GammaGqr-&gt;lens[1]);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>and<sp/>compute<sp/>GammaGab,GammaGai,GammaGij<sp/>from<sp/>GammaGqr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GaiStart[]<sp/>=<sp/>{0<sp/>,No,<sp/>0};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GaiEnd[]<sp/><sp/><sp/>=<sp/>{NG,Np,No};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GabStart[]<sp/>=<sp/>{0<sp/>,No,No};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GabEnd[]<sp/><sp/><sp/>=<sp/>{NG,Np,Np};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GijStart[]<sp/>=<sp/>{0<sp/>,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GijEnd[]<sp/><sp/><sp/>=<sp/>{NG,No,No};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>GammaGai(GammaGqr-&gt;slice(GaiStart,GaiEnd));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>GammaGab(GammaGqr-&gt;slice(GabStart,GabEnd));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>GammaGij(GammaGqr-&gt;slice(GijStart,GijEnd));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>GammaGab,GammaGai,GammaGia,GammaGij<sp/>into<sp/>real<sp/>and<sp/>imaginary<sp/>parts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>realGammaGai(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>GammaGai.lens,<sp/>GammaGai.sym,<sp/>*GammaGai.wrld,<sp/></highlight><highlight class="stringliteral">&quot;RealGammaGai&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>imagGammaGai(</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>GammaGai.lens,<sp/>GammaGai.sym,<sp/>*GammaGai.wrld,<sp/></highlight><highlight class="stringliteral">&quot;ImagGammaGai&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacesisi4s_1a77d868359a18a73cfe184f25fad2f59b" kindref="member">fromComplexTensor</ref>(GammaGai,<sp/>realGammaGai,<sp/>imagGammaGai);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>realGammaGab(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>GammaGab.lens,<sp/>GammaGab.sym,<sp/>*GammaGab.wrld,<sp/></highlight><highlight class="stringliteral">&quot;RealGammaGab&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>imagGammaGab(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>GammaGab.lens,<sp/>GammaGab.sym,<sp/>*GammaGab.wrld,<sp/></highlight><highlight class="stringliteral">&quot;ImagGammaGab&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacesisi4s_1a77d868359a18a73cfe184f25fad2f59b" kindref="member">fromComplexTensor</ref>(GammaGab,<sp/>realGammaGab,<sp/>imagGammaGab);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>realGammaGij(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>3,<sp/>GammaGij.lens,<sp/>GammaGij.sym,<sp/>*GammaGij.wrld,<sp/></highlight><highlight class="stringliteral">&quot;RealGammaGij&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>imagGammaGij(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>GammaGij.lens,<sp/>GammaGij.sym,<sp/>*GammaGij.wrld,<sp/></highlight><highlight class="stringliteral">&quot;ImagGammaGij&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacesisi4s_1a77d868359a18a73cfe184f25fad2f59b" kindref="member">fromComplexTensor</ref>(GammaGij,<sp/>realGammaGij,<sp/>imagGammaGij);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;int,4&gt;<sp/>syms({{<sp/>NS,<sp/>NS,<sp/>NS,<sp/>NS<sp/>}});</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;int,4&gt;<sp/>voov({{<sp/>Nv,<sp/>No,<sp/>No,<sp/>Nv<sp/>}});</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;int,2&gt;<sp/>vv({{<sp/>Nv,<sp/>Nv<sp/>}});</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;int,2&gt;<sp/>vo({{<sp/>Nv,<sp/>No<sp/>}});</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;int,2&gt;<sp/>oo({{<sp/>No,<sp/>No<sp/>}});</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distinguishable(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;distinguishable&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1a2efe02f6717cc23d469823947f75d4d3" kindref="member">DEFAULT_DISTINGUISHABLE</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//*************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//****************<sp/><sp/>T2<sp/>amplitude<sp/>equations<sp/><sp/>*******************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//*************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Solving<sp/>T2<sp/>Amplitude<sp/>Equations&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intermediates<sp/>used<sp/>both<sp/>by<sp/>T1<sp/>and<sp/>T2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Kac(2,<sp/>vv.data(),<sp/>syms.data(),<sp/>*Vabij-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Kac&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Kki(2,<sp/>oo.data(),<sp/>syms.data(),<sp/>*Vabij-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Kki&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Xabij(*Tabij);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>Xabij.set_name(</highlight><highlight class="stringliteral">&quot;Xabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>Xabij[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intermediates<sp/>used<sp/>for<sp/>T2<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Lac(2,<sp/>vv.data(),<sp/>syms.data(),<sp/>*Vabij-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Lac&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Lki(2,<sp/>oo.data(),<sp/>syms.data(),<sp/>*Vabij-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Lki&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Kac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(-2.0)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;cdkl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;adkl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;dckl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;adkl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Lac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distinguishable)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>Kac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intermediate<sp/>tensor<sp/>Yabij=T2-2*T1*T1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Yabij(*Tabij);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yabij.set_name(</highlight><highlight class="stringliteral">&quot;Yabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yabij[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(-1.0)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;cdkl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Yabij[</highlight><highlight class="stringliteral">&quot;adkl&quot;</highlight><highlight class="normal">];<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Yabij<sp/>in<sp/>DCSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>+=<sp/>(<sp/>0.5)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;dckl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Yabij[</highlight><highlight class="stringliteral">&quot;adkl&quot;</highlight><highlight class="normal">];<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Yabij<sp/>in<sp/>DCSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>realGammaGab[</highlight><highlight class="stringliteral">&quot;Gca&quot;</highlight><highlight class="normal">]<sp/>*<sp/>realGammaGai[</highlight><highlight class="stringliteral">&quot;Gdk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;dk&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>imagGammaGab[</highlight><highlight class="stringliteral">&quot;Gca&quot;</highlight><highlight class="normal">]<sp/>*<sp/>imagGammaGai[</highlight><highlight class="stringliteral">&quot;Gdk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;dk&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>realGammaGai[</highlight><highlight class="stringliteral">&quot;Gck&quot;</highlight><highlight class="normal">]<sp/>*<sp/>realGammaGab[</highlight><highlight class="stringliteral">&quot;Gda&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;dk&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>imagGammaGai[</highlight><highlight class="stringliteral">&quot;Gck&quot;</highlight><highlight class="normal">]<sp/>*<sp/>imagGammaGab[</highlight><highlight class="stringliteral">&quot;Gda&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;dk&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Kki</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;cdkl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdil&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;dckl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdil&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Lki</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distinguishable)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>1.0)<sp/>*<sp/><sp/><sp/>Kki<sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intermediate<sp/>tensor<sp/>Yabij=T2-2*T1*T1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Yabij(*Tabij);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yabij.set_name(</highlight><highlight class="stringliteral">&quot;Yabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yabij[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<sp/>1.0)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;cdkl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Yabij[</highlight><highlight class="stringliteral">&quot;cdil&quot;</highlight><highlight class="normal">];<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Yabij<sp/>in<sp/>DCSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>+=<sp/>(-0.5)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;dckl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Yabij[</highlight><highlight class="stringliteral">&quot;cdil&quot;</highlight><highlight class="normal">];<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Yabij<sp/>in<sp/>DCSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;klic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;cl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;lkic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;cl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>Lac<sp/>with<sp/>T2<sp/>Amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;cbij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>Lki<sp/>with<sp/>T2<sp/>Amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>Lki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;abkj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>Coulomb<sp/>integrals<sp/>with<sp/>T2<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>realDressedGammaGai(realGammaGai);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>imagDressedGammaGai(imagGammaGai);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>realDressedGammaGai.set_name(</highlight><highlight class="stringliteral">&quot;realDressedGammaGai&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imagDressedGammaGai.set_name(</highlight><highlight class="stringliteral">&quot;imagDressedGammaGai&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>realDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>realGammaGij[</highlight><highlight class="stringliteral">&quot;Gki&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ak&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imagDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>imagGammaGij[</highlight><highlight class="stringliteral">&quot;Gki&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ak&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>realDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>realGammaGab[</highlight><highlight class="stringliteral">&quot;Gbc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;cj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>imagDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>imagGammaGab[</highlight><highlight class="stringliteral">&quot;Gbc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;cj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;jika&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bk&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;acik&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;cj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Xakic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Xakic(4,<sp/>voov.data(),<sp/>syms.data(),<sp/>*Vabij-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Xakic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>realDressedGammaGai(realGammaGai);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>imagDressedGammaGai(imagGammaGai);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>realDressedGammaGai.set_name(</highlight><highlight class="stringliteral">&quot;realDressedGammaGai&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imagDressedGammaGai.set_name(</highlight><highlight class="stringliteral">&quot;imagDressedGammaGai&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>realDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>realGammaGij[</highlight><highlight class="stringliteral">&quot;Gil&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;al&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imagDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>imagGammaGij[</highlight><highlight class="stringliteral">&quot;Gil&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;al&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>realDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>realGammaGab[</highlight><highlight class="stringliteral">&quot;Gad&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;di&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imagDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>imagGammaGab[</highlight><highlight class="stringliteral">&quot;Gad&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;di&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>there<sp/>is<sp/>a<sp/>better<sp/>way<sp/>for<sp/>the<sp/>contractions<sp/>(see<sp/>complex<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xakic[</highlight><highlight class="stringliteral">&quot;akic&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>1.0)<sp/>*<sp/>realDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>realGammaGai[</highlight><highlight class="stringliteral">&quot;Gck&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xakic[</highlight><highlight class="stringliteral">&quot;akic&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>imagDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>imagGammaGai[</highlight><highlight class="stringliteral">&quot;Gck&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intermediate<sp/>tensor<sp/>Yabij=T2-2*T1*T1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Yabij(*Tabij);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Yabij.set_name(</highlight><highlight class="stringliteral">&quot;Yabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Yabij[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xakic[</highlight><highlight class="stringliteral">&quot;akic&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-0.5)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;dclk&quot;</highlight><highlight class="normal">]<sp/>*<sp/><sp/><sp/>Yabij<sp/>[</highlight><highlight class="stringliteral">&quot;dail&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xakic[</highlight><highlight class="stringliteral">&quot;akic&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;dclk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;adil&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distinguishable)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xakic[</highlight><highlight class="stringliteral">&quot;akic&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-0.5)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;cdlk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;adil&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>and<sp/>Xakic<sp/>intermediates<sp/>with<sp/>T2<sp/>amplitudes<sp/>Tabij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Yabij[</highlight><highlight class="stringliteral">&quot;cbkj&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;cbkj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Yabij[</highlight><highlight class="stringliteral">&quot;cbkj&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;bckj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>Xakic[</highlight><highlight class="stringliteral">&quot;akic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Yabij[</highlight><highlight class="stringliteral">&quot;cbkj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Xakci</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Xakci(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>*Vaibj);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xakci.set_name(</highlight><highlight class="stringliteral">&quot;Xakci&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>dressed<sp/>Coulomb<sp/>vertex<sp/>GammaGab<sp/>and<sp/>GammaGij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>realDressedGammaGab(realGammaGab);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>imagDressedGammaGab(imagGammaGab);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>realDressedGammaGab.set_name(</highlight><highlight class="stringliteral">&quot;realDressedGammaGab&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imagDressedGammaGab.set_name(</highlight><highlight class="stringliteral">&quot;imagDressedGammaGab&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>realDressedGammaGij(realGammaGij);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>imagDressedGammaGij(imagGammaGij);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>realDressedGammaGij.set_name(</highlight><highlight class="stringliteral">&quot;realDressedGammaGij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imagDressedGammaGij.set_name(</highlight><highlight class="stringliteral">&quot;imagDressedGammaGij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>realDressedGammaGab[</highlight><highlight class="stringliteral">&quot;Gac&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>realGammaGai[</highlight><highlight class="stringliteral">&quot;Gcl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;al&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imagDressedGammaGab[</highlight><highlight class="stringliteral">&quot;Gac&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>imagGammaGai[</highlight><highlight class="stringliteral">&quot;Gcl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;al&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>realDressedGammaGij[</highlight><highlight class="stringliteral">&quot;Gki&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>realGammaGai[</highlight><highlight class="stringliteral">&quot;Gdk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;di&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>imagDressedGammaGij[</highlight><highlight class="stringliteral">&quot;Gki&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>imagGammaGai[</highlight><highlight class="stringliteral">&quot;Gdk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;di&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Xakci<sp/>=<sp/>Vakci<sp/>-<sp/>Vlkci<sp/>*<sp/>Tal<sp/>+<sp/>Vakcd<sp/>*<sp/>Tdi<sp/>-<sp/>Vcdlk<sp/>*<sp/>Tdail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xakci[</highlight><highlight class="stringliteral">&quot;akci&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>1.0)<sp/>*<sp/>realDressedGammaGab[</highlight><highlight class="stringliteral">&quot;Gac&quot;</highlight><highlight class="normal">]<sp/>*<sp/>realDressedGammaGij[</highlight><highlight class="stringliteral">&quot;Gki&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xakci[</highlight><highlight class="stringliteral">&quot;akci&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>imagDressedGammaGab[</highlight><highlight class="stringliteral">&quot;Gac&quot;</highlight><highlight class="normal">]<sp/>*<sp/>imagDressedGammaGij[</highlight><highlight class="stringliteral">&quot;Gki&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Xakci<sp/>=<sp/>0.5<sp/>*<sp/>Vcdlk<sp/>*<sp/>Tdail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distinguishable)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xakci[</highlight><highlight class="stringliteral">&quot;akci&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-0.5)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;cdlk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;dail&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>and<sp/>Xakci<sp/>intermediates<sp/>with<sp/>T2<sp/>amplitudes<sp/>Tabij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>Xakci[</highlight><highlight class="stringliteral">&quot;akci&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;cbkj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>Xakci[</highlight><highlight class="stringliteral">&quot;bkci&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;ackj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Symmetrize<sp/>Rabij<sp/>by<sp/>applying<sp/>permutation<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;baji&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>add<sp/>all<sp/>terms<sp/>to<sp/>Rabij<sp/>that<sp/>do<sp/>not<sp/>need<sp/>to<sp/>be<sp/>symmetrized<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>permutation<sp/>operator</highlight></codeline>
<codeline lineno="279"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>Vabij<sp/>to<sp/>Rabij<sp/>(MP2<sp/>term)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Xklij<sp/>intermediate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Xklij(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>*Vijkl);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xklij.set_name(</highlight><highlight class="stringliteral">&quot;Xklij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(*Vijkl)[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;klic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;cj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;lkjc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ci&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>Xklij<sp/>with<sp/>T2+T1*T1<sp/>Amplitudes<sp/>via<sp/>Xabij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;abkl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>last<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distinguishable)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;cdkl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ci&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;cdkl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;dj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>last<sp/>term<sp/>contracted<sp/>only<sp/>with<sp/>the<sp/>doubles<sp/>if<sp/>ppl<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>singles<sp/>term<sp/>is<sp/>computed<sp/>in<sp/>the<sp/>slicing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ppl<sp/>=<sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;ppl&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(ppl<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;PPL&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>PPL&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ppl)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;abkl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;abkl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ppl<sp/>=<sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;ppl&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ppl)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>PPL&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1Algorithm_1aec9041b31cb64a42ee1fd79d32774266" kindref="member">isArgumentGiven</ref>(</highlight><highlight class="stringliteral">&quot;CoulombFactors&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>factorsSliceSize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>LambdaGR(getTensorArgument&lt;complex&gt;(</highlight><highlight class="stringliteral">&quot;CoulombFactors&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LambdaGR-&gt;set_name(</highlight><highlight class="stringliteral">&quot;LambdaGR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NR(LambdaGR-&gt;lens[1]);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>factorsSliceSize(</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;factorsSliceSize&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1a0072235dcf2b25e3b28a5b1f28e2dc6a" kindref="member">DEFAULT_SLICE_SIZE</ref>)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(factorsSliceSize<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1Algorithm_1aec9041b31cb64a42ee1fd79d32774266" kindref="member">isArgumentGiven</ref>(</highlight><highlight class="stringliteral">&quot;factorsSliceFactor&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factorsSliceFactor(<ref refid="classsisi4s_1_1Algorithm_1a36c632fbb19dae4ce2f415705fa5cbcb" kindref="member">getRealArgument</ref>(</highlight><highlight class="stringliteral">&quot;factorsSliceFactor&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factorsSliceSize<sp/>=<sp/>NR<sp/>*<sp/>factorsSliceFactor;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factorsSliceSize<sp/>=<sp/>Nv;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slice<sp/>loop<sp/>starts<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b(0);<sp/>b<sp/>&lt;<sp/>NR;<sp/>b<sp/>+=<sp/>factorsSliceSize)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a(0);<sp/>a<sp/>&lt;<sp/>NR;<sp/>a<sp/>+=<sp/>factorsSliceSize)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Evaluting<sp/>Fabij<sp/>at<sp/>R=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>S=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>b<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Fabij(</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1aa15c5a3edcb4102f112028ff53f27179" kindref="member">sliceAmplitudesFromCoupledCoulombFactors</ref>(</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amplitudes,<sp/>a,<sp/>b,<sp/>factorsSliceSize</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fabij-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Fabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*Fabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>Fabij;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>integralsSliceSize.<sp/>If<sp/>not<sp/>provided<sp/>use<sp/>No</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integralsSliceSize(<ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;integralsSliceSize&quot;</highlight><highlight class="normal">,<ref refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1a0072235dcf2b25e3b28a5b1f28e2dc6a" kindref="member">DEFAULT_SLICE_SIZE</ref>));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(integralsSliceSize<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1Algorithm_1aec9041b31cb64a42ee1fd79d32774266" kindref="member">isArgumentGiven</ref>(</highlight><highlight class="stringliteral">&quot;integralsSliceFactor&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integralsSliceFactor(<ref refid="classsisi4s_1_1Algorithm_1a36c632fbb19dae4ce2f415705fa5cbcb" kindref="member">getRealArgument</ref>(</highlight><highlight class="stringliteral">&quot;integralsSliceFactor&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integralsSliceSize<sp/>=<sp/>Nv<sp/>*<sp/>integralsSliceFactor;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integralsSliceSize<sp/>=<sp/>No;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberSlices(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(ceil(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(Nv)/integralsSliceSize)));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No.<sp/>of<sp/>slices<sp/>for<sp/>Vabcd<sp/>evaluation:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>numberSlices<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>realDressedGammaGab(realGammaGab);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>imagDressedGammaGab(imagGammaGab);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realDressedGammaGab.set_name(</highlight><highlight class="stringliteral">&quot;realDressedGammaGab&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imagDressedGammaGab.set_name(</highlight><highlight class="stringliteral">&quot;imagDressedGammaGab&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>dressed<sp/>Coulomb<sp/>vertex<sp/>GammaGab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realDressedGammaGab[</highlight><highlight class="stringliteral">&quot;Gab&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>realGammaGai[</highlight><highlight class="stringliteral">&quot;Gbk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ak&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imagDressedGammaGab[</highlight><highlight class="stringliteral">&quot;Gab&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>imagGammaGai[</highlight><highlight class="stringliteral">&quot;Gbk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ak&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(CTF::Tensor&lt;double&gt;)&gt;<sp/>realSlicedGammaGab;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(CTF::Tensor&lt;double&gt;)&gt;<sp/>imagSlicedGammaGab;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v(0);<sp/>v<sp/>&lt;<sp/>numberSlices;<sp/>v++){</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xStart<sp/>=<sp/>v*integralsSliceSize;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xEnd<sp/>=<sp/>std::min((v+1)*integralsSliceSize,Nv);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sliceStart[]<sp/>=<sp/>{<sp/>0,<sp/>xStart,<sp/>0};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sliceEnd[]<sp/><sp/><sp/>=<sp/>{<sp/>NG,<sp/>xEnd,<sp/>Nv};</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realSlicedGammaGab.push_back(</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SharedPointer_8hpp_1a106f61c342cfd013eb570c37328070ae" kindref="member">NEW</ref>(CTF::Tensor&lt;double&gt;,realDressedGammaGab.slice(sliceStart,sliceEnd))</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imagSlicedGammaGab.push_back(</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SharedPointer_8hpp_1a106f61c342cfd013eb570c37328070ae" kindref="member">NEW</ref>(CTF::Tensor&lt;double&gt;,imagDressedGammaGab.slice(sliceStart,sliceEnd))</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//slice<sp/>loop<sp/>starts<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m(0);<sp/>m<sp/>&lt;<sp/>numberSlices;<sp/>m++){</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n(m);<sp/>n<sp/>&lt;<sp/>numberSlices;<sp/>n++){</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lenscd[]<sp/>=<sp/>{(int)realSlicedGammaGab[n]-&gt;lens[1],</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)realSlicedGammaGab[m]-&gt;lens[1],</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)realSlicedGammaGab[n]-&gt;lens[2],</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)realSlicedGammaGab[m]-&gt;lens[2]};</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>syms[]<sp/>=<sp/>{NS,<sp/>NS,<sp/>NS,<sp/>NS};</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vxycd(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref>(4,<sp/>lenscd,<sp/>syms,<sp/>*realDressedGammaGab.wrld,<sp/></highlight><highlight class="stringliteral">&quot;Vxycd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*Vxycd)[</highlight><highlight class="stringliteral">&quot;xycd&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(*realSlicedGammaGab[n])[</highlight><highlight class="stringliteral">&quot;Gxc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*realSlicedGammaGab[m])[</highlight><highlight class="stringliteral">&quot;Gyd&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*Vxycd)[</highlight><highlight class="stringliteral">&quot;xycd&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*imagSlicedGammaGab[n])[</highlight><highlight class="stringliteral">&quot;Gxc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*imagSlicedGammaGab[m])[</highlight><highlight class="stringliteral">&quot;Gyd&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lensij[]<sp/>=<sp/>{(int)Vxycd-&gt;lens[0],</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)Vxycd-&gt;lens[1],</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)No,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)No};</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Rxyij(4,<sp/>lensij,<sp/>syms,<sp/>*Vxycd-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Rxyij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>sliced<sp/>Vxycd<sp/>with<sp/>T2<sp/>and<sp/>T1<sp/>Amplitudes<sp/>using<sp/>Xabij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rxyij[</highlight><highlight class="stringliteral">&quot;xyij&quot;</highlight><highlight class="normal">]<sp/>=<sp/>(*Vxycd)[</highlight><highlight class="stringliteral">&quot;xycd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a(n*integralsSliceSize);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b(m*integralsSliceSize);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1ace3ba8780a7038d91d7308183b98cc53" kindref="member">sliceIntoResiduum</ref>(Rxyij,<sp/>a,<sp/>b,<sp/>*Rabij);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>integrals<sp/>of<sp/>this<sp/>slice<sp/>are<sp/>not<sp/>needed<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>Vxycd;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//********************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//***********************<sp/><sp/>T1<sp/>amplitude<sp/>equations<sp/><sp/>*******************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//********************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Solving<sp/>T1<sp/>Amplitude<sp/>Equations&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intermediates<sp/>used<sp/>for<sp/>T1<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;&gt;</ref><sp/>Kck(2,<sp/>vo.data(),<sp/>syms.data(),<sp/>*Vabij-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Kck&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>Kac<sp/>and<sp/>Kki<sp/>with<sp/>T1<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>Kac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ci&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>Kki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ak&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Kck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kck[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;cdkl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;dl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kck[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;dckl&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;dl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>all<sp/>the<sp/>rest<sp/>terms<sp/>with<sp/>T1<sp/>and<sp/>T2<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>Kck[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;caki&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>Kck[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;caik&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ak&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Kck[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ci&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;acik&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Vaibj)[</highlight><highlight class="stringliteral">&quot;ciak&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>realGammaGab[</highlight><highlight class="stringliteral">&quot;Gca&quot;</highlight><highlight class="normal">]<sp/>*<sp/>realGammaGai[</highlight><highlight class="stringliteral">&quot;Gdk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdik&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>imagGammaGab[</highlight><highlight class="stringliteral">&quot;Gca&quot;</highlight><highlight class="normal">]<sp/>*<sp/>imagGammaGai[</highlight><highlight class="stringliteral">&quot;Gdk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdik&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>realGammaGab[</highlight><highlight class="stringliteral">&quot;Gda&quot;</highlight><highlight class="normal">]<sp/>*<sp/>realGammaGai[</highlight><highlight class="stringliteral">&quot;Gck&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdik&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>imagGammaGab[</highlight><highlight class="stringliteral">&quot;Gda&quot;</highlight><highlight class="normal">]<sp/>*<sp/>imagGammaGai[</highlight><highlight class="stringliteral">&quot;Gck&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdik&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-2.0)<sp/>*<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;klic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;ackl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;lkic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;ackl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>residuum;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(<ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;sisi4s::complex&gt;</ref>)<sp/><ref refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1a5ec0fe08374df8bf74029a3eee23942c" kindref="member">CcsdEnergyFromCoulombIntegrals::getResiduum</ref>(</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;sisi4s::complex&gt;</ref>)<sp/>&amp;amplitudes</highlight></codeline>
<codeline lineno="466"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>Vabij<sp/>integrals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vabij(getTensorArgument&lt;complex&gt;(</highlight><highlight class="stringliteral">&quot;PPHHCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>singles<sp/>and<sp/>doubles<sp/>part<sp/>of<sp/>the<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Tai(<sp/>amplitudes-&gt;<ref refid="classsisi4s_1_1FockVector_1ac37c525c89799fb6e2fa419acb4edf4a" kindref="member">get</ref>(0)<sp/>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>Tai-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Tai&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Tabij(<sp/>amplitudes-&gt;<ref refid="classsisi4s_1_1FockVector_1ac37c525c89799fb6e2fa419acb4edf4a" kindref="member">get</ref>(1)<sp/>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>Tabij-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Tabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>residuum<sp/>and<sp/>get<sp/>their<sp/>singles<sp/>and<sp/>doubles<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>residuum(<sp/><ref refid="SharedPointer_8hpp_1a106f61c342cfd013eb570c37328070ae" kindref="member">NEW</ref>(<ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;complex&gt;</ref>,<sp/>*amplitudes)<sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>*residuum<sp/>*=<sp/><ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref>(0.0);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Rai(<sp/>residuum-&gt;get(0)<sp/>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>Rai-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Rai&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Rabij(<sp/>residuum-&gt;get(1)<sp/>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>Rabij-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Rabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>!<ref refid="classsisi4s_1_1Algorithm_1aec9041b31cb64a42ee1fd79d32774266" kindref="member">isArgumentGiven</ref>(</highlight><highlight class="stringliteral">&quot;initialDoublesAmplitudes&quot;</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>first<sp/>iteration<sp/>compute<sp/>only<sp/>the<sp/>MP2<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>Tabij<sp/>=<sp/>0,<sp/>Vabij<sp/>is<sp/>the<sp/>only<sp/>non-zero<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MP2<sp/>T2<sp/>Amplitudes&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>=<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>rest<sp/>iterations<sp/>compute<sp/>the<sp/>CCSD<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>all<sp/>required<sp/>integrals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vaijb(getTensorArgument&lt;complex&gt;(</highlight><highlight class="stringliteral">&quot;PHHPCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vijab(getTensorArgument&lt;complex&gt;(</highlight><highlight class="stringliteral">&quot;HHPPCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vaibj(getTensorArgument&lt;complex&gt;(</highlight><highlight class="stringliteral">&quot;PHPHCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vijkl(getTensorArgument&lt;complex&gt;(</highlight><highlight class="stringliteral">&quot;HHHHCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vijka(getTensorArgument&lt;complex&gt;(</highlight><highlight class="stringliteral">&quot;HHHPCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vaijk(getTensorArgument&lt;complex&gt;(</highlight><highlight class="stringliteral">&quot;PHHHCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>Coulomb<sp/>vertex<sp/>GammaGqr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>GammaGqr(<sp/>getTensorArgument&lt;complex&gt;(</highlight><highlight class="stringliteral">&quot;CoulombVertex&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>No,Nv,NG,Np</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>No(Vabij-&gt;lens[2]);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nv(Vabij-&gt;lens[0]);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NG(GammaGqr-&gt;lens[0]);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Np(GammaGqr-&gt;lens[1]);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>and<sp/>compute<sp/>GammaGab,GammaGai,GammaGij<sp/>from<sp/>GammaGqr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aStart(Np-Nv),<sp/>aEnd(Np);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iStart(0),<sp/>iEnd(No);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GijStart[]<sp/>=<sp/>{0,<sp/>iStart,iStart};</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GijEnd[]<sp/><sp/><sp/>=<sp/>{NG,iEnd,<sp/><sp/>iEnd};</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GiaStart[]<sp/>=<sp/>{0,<sp/>iStart,aStart};</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GiaEnd[]<sp/><sp/><sp/>=<sp/>{NG,iEnd,<sp/><sp/>aEnd};</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GaiStart[]<sp/>=<sp/>{0,<sp/>aStart,iStart};</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GaiEnd[]<sp/><sp/><sp/>=<sp/>{NG,aEnd,<sp/><sp/>iEnd};</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GabStart[]<sp/>=<sp/>{0,<sp/>aStart,aStart};</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GabEnd[]<sp/><sp/><sp/>=<sp/>{NG,aEnd,<sp/><sp/>aEnd};</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>GammaGij(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref>(GammaGqr-&gt;slice(GijStart,<sp/>GijEnd))<sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>GammaGia(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref>(GammaGqr-&gt;slice(GiaStart,<sp/>GiaEnd))<sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>GammaGai(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref>(GammaGqr-&gt;slice(GaiStart,<sp/>GaiEnd))<sp/>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>GammaGab(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref>(GammaGqr-&gt;slice(GabStart,<sp/>GabEnd))<sp/>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>Univar_Function&lt;complex&gt;<sp/>fConj(conj&lt;complex&gt;);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>conjTransposeGammaGai(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>*GammaGai);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>conjTransposeGammaGai.sum(1.0,*GammaGia,</highlight><highlight class="stringliteral">&quot;Gia&quot;</highlight><highlight class="normal">,<sp/>0.0,</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">,<sp/>fConj);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>conjTransposeGammaGia(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>*GammaGia);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>conjTransposeGammaGia.sum(1.0,*GammaGai,</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">,<sp/>0.0,</highlight><highlight class="stringliteral">&quot;Gia&quot;</highlight><highlight class="normal">,<sp/>fConj);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>conjTransposeGammaGab(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>*GammaGab);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>conjTransposeGammaGab.sum(1.0,*GammaGab,</highlight><highlight class="stringliteral">&quot;Gba&quot;</highlight><highlight class="normal">,<sp/>0.0,</highlight><highlight class="stringliteral">&quot;Gab&quot;</highlight><highlight class="normal">,<sp/>fConj);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>conjTransposeGammaGij(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>*GammaGij);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>conjTransposeGammaGij.sum(1.0,*GammaGij,</highlight><highlight class="stringliteral">&quot;Gji&quot;</highlight><highlight class="normal">,<sp/>0.0,</highlight><highlight class="stringliteral">&quot;Gij&quot;</highlight><highlight class="normal">,<sp/>fConj);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;int,4&gt;<sp/>syms({{<sp/>NS,<sp/>NS,<sp/>NS,<sp/>NS<sp/>}});</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;int,4&gt;<sp/>voov({{<sp/>Nv,<sp/>No,<sp/>No,<sp/>Nv<sp/>}});</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;int,2&gt;<sp/>vv({{<sp/>Nv,<sp/>Nv<sp/>}});</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;int,2&gt;<sp/>vo({{<sp/>Nv,<sp/>No<sp/>}});</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;int,2&gt;<sp/>oo({{<sp/>No,<sp/>No<sp/>}});</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distinguishable(</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;distinguishable&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1a2efe02f6717cc23d469823947f75d4d3" kindref="member">DEFAULT_DISTINGUISHABLE</ref>)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//********************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//***********************<sp/><sp/>T2<sp/>amplitude<sp/>equations<sp/><sp/>*******************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//********************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Solving<sp/>T2<sp/>Amplitude<sp/>Equations&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intermediates<sp/>used<sp/>both<sp/>by<sp/>T1<sp/>and<sp/>T2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Kac(2,<sp/>vv.data(),<sp/>syms.data(),<sp/>*Vabij-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Kac&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Kki(2,<sp/>oo.data(),<sp/>syms.data(),<sp/>*Vabij-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Kki&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Xabij(*Tabij);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>Xabij.set_name(</highlight><highlight class="stringliteral">&quot;Xabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>Xabij[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intermediates<sp/>used<sp/>for<sp/>T2<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Lac(2,<sp/>vv.data(),<sp/>syms.data(),<sp/>*Vabij-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Lac&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Lki(2,<sp/>oo.data(),<sp/>syms.data(),<sp/>*Vabij-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Lki&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Kac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(-2.0)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;klcd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;adkl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;kldc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;adkl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Lac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distinguishable)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>Kac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intermediate<sp/>tensor<sp/>Yabij=T2-2*T1*T1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Yabij(*Tabij);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yabij.set_name(</highlight><highlight class="stringliteral">&quot;Yabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yabij[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(-1.0)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;klcd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Yabij[</highlight><highlight class="stringliteral">&quot;adkl&quot;</highlight><highlight class="normal">];<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Yabij<sp/>in<sp/>DCSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>+=<sp/>(<sp/>0.5)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;kldc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Yabij[</highlight><highlight class="stringliteral">&quot;adkl&quot;</highlight><highlight class="normal">];<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Yabij<sp/>in<sp/>DCSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>conjTransposeGammaGab[</highlight><highlight class="stringliteral">&quot;Gac&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*GammaGia)[</highlight><highlight class="stringliteral">&quot;Gkd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;dk&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>conjTransposeGammaGab[</highlight><highlight class="stringliteral">&quot;Gad&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*GammaGia)[</highlight><highlight class="stringliteral">&quot;Gkc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;dk&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Kki</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;klcd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdil&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;kldc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdil&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Lki</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distinguishable)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>1.0)<sp/>*<sp/><sp/><sp/>Kki<sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intermediate<sp/>tensor<sp/>Yabij=T2-2*T1*T1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Yabij(*Tabij);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yabij.set_name(</highlight><highlight class="stringliteral">&quot;Yabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yabij[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<sp/>1.0)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;klcd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Yabij[</highlight><highlight class="stringliteral">&quot;cdil&quot;</highlight><highlight class="normal">];<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Yabij<sp/>in<sp/>DCSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>+=<sp/>(-0.5)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;kldc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Yabij[</highlight><highlight class="stringliteral">&quot;cdil&quot;</highlight><highlight class="normal">];<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Yabij<sp/>in<sp/>DCSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;klic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;cl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;lkic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;cl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>Lac<sp/>with<sp/>T2<sp/>Amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>Lac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;cbij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>Lki<sp/>with<sp/>T2<sp/>Amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>Lki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;abkj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>Coulomb<sp/>integrals<sp/>with<sp/>T2<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>conjTransposeDressedGammaGai(conjTransposeGammaGai);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conjTransposeDressedGammaGai.set_name(</highlight><highlight class="stringliteral">&quot;conjTransposeDressedGammaGai&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conjTransposeDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>conjTransposeGammaGij[</highlight><highlight class="stringliteral">&quot;Gki&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ak&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>conjTransposeDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*GammaGab)[</highlight><highlight class="stringliteral">&quot;Gbc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;cj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Vaijk)[</highlight><highlight class="stringliteral">&quot;akij&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bk&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Vaijb)[</highlight><highlight class="stringliteral">&quot;akic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;cj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Xakic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Xakic(4,<sp/>voov.data(),<sp/>syms.data(),<sp/>*Vabij-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Xakic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>conjTransposeDressedGammaGai(conjTransposeGammaGai);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conjTransposeDressedGammaGai.set_name(</highlight><highlight class="stringliteral">&quot;conjTransposeDressedGammaGai&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conjTransposeDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>conjTransposeGammaGij[</highlight><highlight class="stringliteral">&quot;Gli&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;al&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conjTransposeDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>conjTransposeGammaGab[</highlight><highlight class="stringliteral">&quot;Gad&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;di&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intermediate<sp/>tensor<sp/>Yabij=T2-2*T1*T1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Yabij(*Tabij);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Yabij.set_name(</highlight><highlight class="stringliteral">&quot;Yabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Yabij[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conjTransposeDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-0.5)<sp/>*<sp/>conjTransposeGammaGia[</highlight><highlight class="stringliteral">&quot;Gld&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Yabij[</highlight><highlight class="stringliteral">&quot;dail&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xakic[</highlight><highlight class="stringliteral">&quot;akic&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>1.0)<sp/>*<sp/>conjTransposeDressedGammaGai[</highlight><highlight class="stringliteral">&quot;Gai&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*GammaGia)[</highlight><highlight class="stringliteral">&quot;Gkc&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Yabij[</highlight><highlight class="stringliteral">&quot;dclk&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>1.0)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;lkdc&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distinguishable)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yabij[</highlight><highlight class="stringliteral">&quot;dclk&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-0.5)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;lkcd&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xakic[</highlight><highlight class="stringliteral">&quot;akic&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>Yabij[</highlight><highlight class="stringliteral">&quot;dclk&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;adil&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>and<sp/>Xakic<sp/>intermediates<sp/>with<sp/>T2<sp/>amplitudes<sp/>Tabij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Yabij[</highlight><highlight class="stringliteral">&quot;cbkj&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;cbkj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Yabij[</highlight><highlight class="stringliteral">&quot;cbkj&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;bckj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>Xakic[</highlight><highlight class="stringliteral">&quot;akic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Yabij[</highlight><highlight class="stringliteral">&quot;cbkj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Xakci</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Xakci(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>*Vaibj);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xakci.set_name(</highlight><highlight class="stringliteral">&quot;Xakci&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>dressed<sp/>Coulomb<sp/>vertex<sp/>GammaGab<sp/>and<sp/>GammaGij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>conjTransposeDressedGammaGab(conjTransposeGammaGab);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conjTransposeDressedGammaGab.set_name(</highlight><highlight class="stringliteral">&quot;conjTransposeDressedGammaGab&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>DressedGammaGij(*GammaGij);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DressedGammaGij.set_name(</highlight><highlight class="stringliteral">&quot;DressedGammaGij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conjTransposeDressedGammaGab[</highlight><highlight class="stringliteral">&quot;Gac&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>conjTransposeGammaGia[</highlight><highlight class="stringliteral">&quot;Glc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;al&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DressedGammaGij[</highlight><highlight class="stringliteral">&quot;Gki&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>(*GammaGia)[</highlight><highlight class="stringliteral">&quot;Gkd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;di&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Xakci<sp/>=<sp/>Vakci<sp/>-<sp/>Vlkci<sp/>*<sp/>Tal<sp/>+<sp/>Vakcd<sp/>*<sp/>Tdi<sp/>-<sp/>Vlkcd<sp/>*<sp/>Tdail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xakci[</highlight><highlight class="stringliteral">&quot;akci&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>1.0)<sp/>*<sp/>conjTransposeDressedGammaGab[</highlight><highlight class="stringliteral">&quot;Gac&quot;</highlight><highlight class="normal">]<sp/>*<sp/>DressedGammaGij[</highlight><highlight class="stringliteral">&quot;Gki&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Xakci<sp/>=<sp/>0.5<sp/>*<sp/>Vlkcd<sp/>*<sp/>Tdail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distinguishable)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xakci[</highlight><highlight class="stringliteral">&quot;akci&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-0.5)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;lkcd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;dail&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>and<sp/>Xakci<sp/>intermediates<sp/>with<sp/>T2<sp/>amplitudes<sp/>Tabij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>Xakci[</highlight><highlight class="stringliteral">&quot;akci&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;cbkj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>Xakci[</highlight><highlight class="stringliteral">&quot;bkci&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;ackj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Symmetrize<sp/>Rabij<sp/>by<sp/>applying<sp/>permutation<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;baji&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>add<sp/>all<sp/>terms<sp/>to<sp/>Rabij<sp/>that<sp/>do<sp/>not<sp/>need<sp/>to<sp/>be<sp/>symmetrized<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>permutation<sp/>operator</highlight></codeline>
<codeline lineno="689"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>Vabij<sp/>to<sp/>Rabij<sp/>(MP2<sp/>term)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Xklij<sp/>intermediate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Xklij(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>*Vijkl);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xklij.set_name(</highlight><highlight class="stringliteral">&quot;Xklij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(*Vijkl)[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;klic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;cj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;lkjc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ci&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>Xklij<sp/>with<sp/>T2+T1*T1<sp/>Amplitudes<sp/>via<sp/>Xabij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;abkl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>last<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distinguishable)<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;klcd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ci&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;klcd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;dj&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>last<sp/>term<sp/>contracted<sp/>only<sp/>with<sp/>the<sp/>doubles<sp/>if<sp/>ppl<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>singles<sp/>term<sp/>is<sp/>computed<sp/>in<sp/>the<sp/>slicing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ppl<sp/>=<sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;ppl&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(ppl<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;PPL&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>PPL&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ppl)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;abkl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/><sp/>Xklij[</highlight><highlight class="stringliteral">&quot;klij&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;abkl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ppl<sp/>=<sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;ppl&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ppl)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>PPL&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1Algorithm_1aec9041b31cb64a42ee1fd79d32774266" kindref="member">isArgumentGiven</ref>(</highlight><highlight class="stringliteral">&quot;CoulombFactors&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>factorsSliceSize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>LambdaGR(getTensorArgument&lt;complex&gt;(</highlight><highlight class="stringliteral">&quot;CoulombFactors&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LambdaGR-&gt;set_name(</highlight><highlight class="stringliteral">&quot;LambdaGR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NR(LambdaGR-&gt;lens[1]);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>factorsSliceSize(</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;factorsSliceSize&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1a0072235dcf2b25e3b28a5b1f28e2dc6a" kindref="member">DEFAULT_SLICE_SIZE</ref>)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(factorsSliceSize<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1Algorithm_1aec9041b31cb64a42ee1fd79d32774266" kindref="member">isArgumentGiven</ref>(</highlight><highlight class="stringliteral">&quot;factorsSliceFactor&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factorsSliceFactor(<ref refid="classsisi4s_1_1Algorithm_1a36c632fbb19dae4ce2f415705fa5cbcb" kindref="member">getRealArgument</ref>(</highlight><highlight class="stringliteral">&quot;factorsSliceFactor&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factorsSliceSize<sp/>=<sp/>NR<sp/>*<sp/>factorsSliceFactor;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factorsSliceSize<sp/>=<sp/>Nv;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slice<sp/>loop<sp/>starts<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b(0);<sp/>b<sp/>&lt;<sp/>NR;<sp/>b<sp/>+=<sp/>factorsSliceSize)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a(0);<sp/>a<sp/>&lt;<sp/>NR;<sp/>a<sp/>+=<sp/>factorsSliceSize)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Evaluting<sp/>Fabij<sp/>at<sp/>R=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>S=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>b<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Fabij(</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1aa15c5a3edcb4102f112028ff53f27179" kindref="member">sliceAmplitudesFromCoupledCoulombFactors</ref>(</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amplitudes,<sp/>a,<sp/>b,<sp/>factorsSliceSize</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fabij-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Fabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(*Fabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>Fabij;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>integralsSliceSize.<sp/>If<sp/>not<sp/>provided<sp/>use<sp/>No</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integralsSliceSize(<ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;integralsSliceSize&quot;</highlight><highlight class="normal">,<ref refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1a0072235dcf2b25e3b28a5b1f28e2dc6a" kindref="member">DEFAULT_SLICE_SIZE</ref>));</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(integralsSliceSize<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1Algorithm_1aec9041b31cb64a42ee1fd79d32774266" kindref="member">isArgumentGiven</ref>(</highlight><highlight class="stringliteral">&quot;integralsSliceFactor&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integralsSliceFactor(<ref refid="classsisi4s_1_1Algorithm_1a36c632fbb19dae4ce2f415705fa5cbcb" kindref="member">getRealArgument</ref>(</highlight><highlight class="stringliteral">&quot;integralsSliceFactor&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integralsSliceSize<sp/>=<sp/>Nv<sp/>*<sp/>integralsSliceFactor;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integralsSliceSize<sp/>=<sp/>No;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slice<sp/>loop<sp/>starts<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b(0);<sp/>b<sp/>&lt;<sp/>Nv;<sp/>b<sp/>+=<sp/>integralsSliceSize)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a(b);<sp/>a<sp/>&lt;<sp/>Nv;<sp/>a<sp/>+=<sp/>integralsSliceSize)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Evaluting<sp/>Vabcd<sp/>at<sp/>a=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>b=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>b<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vxycd(</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a4cc0b4527b8b77bdde36752e3aca89cc" kindref="member">sliceCoupledCoulombIntegrals</ref>(amplitudes,<sp/>a,<sp/>b,<sp/>integralsSliceSize)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vxycd-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Vxycd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lens[]<sp/>=<sp/>{(int)Vxycd-&gt;lens[0],</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)Vxycd-&gt;lens[1],</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)No,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)No};</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>syms[]<sp/>=<sp/>{NS,<sp/>NS,<sp/>NS,<sp/>NS};</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Rxyij(4,<sp/>lens,<sp/>syms,<sp/>*Vxycd-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Rxyij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>sliced<sp/>Vxycd<sp/>with<sp/>T2<sp/>and<sp/>T1<sp/>Amplitudes<sp/>using<sp/>Xabij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rxyij[</highlight><highlight class="stringliteral">&quot;xyij&quot;</highlight><highlight class="normal">]<sp/>=<sp/>(*Vxycd)[</highlight><highlight class="stringliteral">&quot;xycd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1ace3ba8780a7038d91d7308183b98cc53" kindref="member">sliceIntoResiduum</ref>(Rxyij,<sp/>a,<sp/>b,<sp/>*Rabij);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>integrals<sp/>of<sp/>this<sp/>slice<sp/>are<sp/>not<sp/>needed<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>Vxycd;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//********************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//***********************<sp/><sp/>T1<sp/>amplitude<sp/>equations<sp/><sp/>*******************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//********************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a110026d41b3740bb8bdbad146ccfd785" kindref="member">getCapitalizedAbbreviation</ref>())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Solving<sp/>T1<sp/>Amplitude<sp/>Equations&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intermediates<sp/>used<sp/>for<sp/>T1<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>Kck(2,<sp/>vo.data(),<sp/>syms.data(),<sp/>*Vabij-&gt;wrld,<sp/></highlight><highlight class="stringliteral">&quot;Kck&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>Kac<sp/>and<sp/>Kki<sp/>with<sp/>T1<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>Kac[</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ci&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>Kki[</highlight><highlight class="stringliteral">&quot;ki&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ak&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>Kck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kck[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;klcd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;dl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Kck[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Vijab)[</highlight><highlight class="stringliteral">&quot;kldc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;dl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contract<sp/>all<sp/>the<sp/>rest<sp/>terms<sp/>with<sp/>T1<sp/>and<sp/>T2<sp/>amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>Kck[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;caki&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>Kck[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;caik&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ak&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Kck[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ci&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>(*Vaijb)[</highlight><highlight class="stringliteral">&quot;akic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>(*Vaibj)[</highlight><highlight class="stringliteral">&quot;akci&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ck&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>2.0)<sp/>*<sp/>conjTransposeGammaGab[</highlight><highlight class="stringliteral">&quot;Gac&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*GammaGia)[</highlight><highlight class="stringliteral">&quot;Gkd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdik&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-1.0)<sp/>*<sp/>conjTransposeGammaGab[</highlight><highlight class="stringliteral">&quot;Gad&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*GammaGia)[</highlight><highlight class="stringliteral">&quot;Gkc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;cdik&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(-2.0)<sp/>*<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;klic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;ackl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>1.0)<sp/>*<sp/>(*Vijka)[</highlight><highlight class="stringliteral">&quot;lkic&quot;</highlight><highlight class="normal">]<sp/>*<sp/>Xabij[</highlight><highlight class="stringliteral">&quot;ackl&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>GammaGij;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>GammaGia;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>GammaGai;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>GammaGab;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>residuum;</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/SiSi4S/SiSi4S/src/algorithms/CcsdEnergyFromCoulombIntegrals.cxx"/>
  </compounddef>
</doxygen>
