<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="ComplexTensor_8cxx" kind="file" language="C++">
    <compoundname>ComplexTensor.cxx</compoundname>
    <includes refid="ComplexTensor_8hpp" local="no">math/ComplexTensor.hpp</includes>
    <includes refid="Exception_8hpp" local="no">util/Exception.hpp</includes>
    <includes local="no">complex</includes>
    <incdepgraph>
      <node id="3">
        <label>math/Complex.hpp</label>
        <link refid="Complex_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ComplexTensor.cxx</label>
        <link refid="ComplexTensor_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>math/ComplexTensor.hpp</label>
        <link refid="ComplexTensor_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>math/Float.hpp</label>
        <link refid="Float_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>util/CTF.hpp</label>
        <link refid="CTF_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>util/Exception.hpp</label>
        <link refid="Exception_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>complex</label>
      </node>
      <node id="8">
        <label>ctf.hpp</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>ostream</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ComplexTensor_8cxx_1a6ee41e7aac8595a4a49313301607c7ca" prot="public" static="no">
        <name>AssertCompatibleTensorShapes</name>
        <param><defname>c</defname></param>
        <param><defname>r</defname></param>
        <param><defname>i</defname></param>
        <initializer>{ \
  <ref refid="Exception_8hpp_1aa6490e8f97f5dc90591264a4d94a1c09" kindref="member">Assert</ref>( \
    (c).order==(r).order &amp;&amp; (c).order==(i).order, \
    &quot;Incompatible tensor orders&quot; \
  ); \
  for (int k(0); k &lt; c.order; ++k) \
    <ref refid="Exception_8hpp_1aa6490e8f97f5dc90591264a4d94a1c09" kindref="member">Assert</ref>( \
      (c).lens[k]==(r).lens[k] &amp;&amp; (c).lens[k]==(i).lens[k], \
      &quot;Incompatible tensor shapes&quot; \
    ); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/SiSi4S/SiSi4S/src/math/ComplexTensor.cxx" line="6" column="9" bodyfile="/home/runner/work/SiSi4S/SiSi4S/src/math/ComplexTensor.cxx" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ComplexTensor_8cxx_1a4fcb60ade2ef95fce940523ea8120f3c" prot="public" static="no">
        <name>AssertCompatibleTensorShape</name>
        <param><defname>c</defname></param>
        <param><defname>r</defname></param>
        <initializer>{ \
  <ref refid="Exception_8hpp_1aa6490e8f97f5dc90591264a4d94a1c09" kindref="member">Assert</ref>( \
    (c).order==(r).order, \
    &quot;Incompatible tensor orders&quot; \
  ); \
  for (int k(0); k &lt; c.order; ++k) \
    <ref refid="Exception_8hpp_1aa6490e8f97f5dc90591264a4d94a1c09" kindref="member">Assert</ref>( \
      (c).lens[k]==(r).lens[k], \
      &quot;Incompatible tensor shapes&quot; \
    ); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/SiSi4S/SiSi4S/src/math/ComplexTensor.cxx" line="19" column="9" bodyfile="/home/runner/work/SiSi4S/SiSi4S/src/math/ComplexTensor.cxx" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" prot="public" static="no">
        <name>Indices</name>
        <param><defname>Tensor</defname></param>
        <initializer>  char indices[(<ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor</ref>).order]; \
  for (int i(0); i &lt; (<ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor</ref>).order; ++i) { indices[i] = &apos;a&apos;+i; } \
  indices[(<ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor</ref>).order] = 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/SiSi4S/SiSi4S/src/math/ComplexTensor.cxx" line="32" column="9" bodyfile="/home/runner/work/SiSi4S/SiSi4S/src/math/ComplexTensor.cxx" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ComplexTensor_8hpp" kindref="compound">math/ComplexTensor.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Exception_8hpp" kindref="compound">util/Exception.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;complex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="ComplexTensor_8cxx_1a6ee41e7aac8595a4a49313301607c7ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AssertCompatibleTensorShapes(c,r,i)<sp/>\</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"><sp/><sp/>Assert(<sp/>\</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(c).order==(r).order<sp/>&amp;&amp;<sp/>(c).order==(i).order,<sp/>\</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Incompatible<sp/>tensor<sp/>orders&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>);<sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>for<sp/>(int<sp/>k(0);<sp/>k<sp/>&lt;<sp/>c.order;<sp/>++k)<sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>Assert(<sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(c).lens[k]==(r).lens[k]<sp/>&amp;&amp;<sp/>(c).lens[k]==(i).lens[k],<sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Incompatible<sp/>tensor<sp/>shapes&quot;<sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>);<sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="ComplexTensor_8cxx_1a4fcb60ade2ef95fce940523ea8120f3c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AssertCompatibleTensorShape(c,r)<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/>Assert(<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(c).order==(r).order,<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;Incompatible<sp/>tensor<sp/>orders&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>);<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>for<sp/>(int<sp/>k(0);<sp/>k<sp/>&lt;<sp/>c.order;<sp/>++k)<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>Assert(<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(c).lens[k]==(r).lens[k],<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Incompatible<sp/>tensor<sp/>shapes&quot;<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>);<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Indices(Tensor)<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/>char<sp/>indices[(Tensor).order];<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/>for<sp/>(int<sp/>i(0);<sp/>i<sp/>&lt;<sp/>(Tensor).order;<sp/>++i)<sp/>{<sp/>indices[i]<sp/>=<sp/>&apos;a&apos;+i;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/>indices[(Tensor).order]<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespacesisi4s_1a77d868359a18a73cfe184f25fad2f59b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a77d868359a18a73cfe184f25fad2f59b" kindref="member">sisi4s::fromComplexTensor</ref>(</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;complex&gt;<sp/>&amp;C,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;double&gt;<sp/>&amp;R,<sp/>CTF::Tensor&lt;double&gt;<sp/>&amp;<ref refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ab8ed521c3bf0c49835954ac0e7655425" kindref="member">I</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1a6ee41e7aac8595a4a49313301607c7ca" kindref="member">AssertCompatibleTensorShapes</ref>(C,R,<ref refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ab8ed521c3bf0c49835954ac0e7655425" kindref="member">I</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" kindref="member">Indices</ref>(C);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="namespacesisi4s_1a77d868359a18a73cfe184f25fad2f59b" kindref="member">fromComplexTensor</ref>(C,<sp/>R);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ab8ed521c3bf0c49835954ac0e7655425" kindref="member">I</ref>[indices]<sp/>=<sp/>CTF::Function&lt;complex,<sp/>double&gt;(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(<ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref>)&gt;([](<ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref><sp/>c){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.imag();<sp/>})</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>)<sp/>(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>C[indices]</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespacesisi4s_1a21e9bbf0dda98b5d19a6eea4d8297d38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a77d868359a18a73cfe184f25fad2f59b" kindref="member">sisi4s::fromComplexTensor</ref>(</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;double&gt;<sp/>&amp;C,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;double&gt;<sp/>&amp;R,<sp/>CTF::Tensor&lt;double&gt;<sp/>&amp;<ref refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ab8ed521c3bf0c49835954ac0e7655425" kindref="member">I</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1a6ee41e7aac8595a4a49313301607c7ca" kindref="member">AssertCompatibleTensorShapes</ref>(C,R,<ref refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ab8ed521c3bf0c49835954ac0e7655425" kindref="member">I</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" kindref="member">Indices</ref>(C);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>R[indices]<sp/>=<sp/>C[indices];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ab8ed521c3bf0c49835954ac0e7655425" kindref="member">I</ref>[indices]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="namespacesisi4s_1a6dade22e010d5ee743aec8d14256cb88" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a77d868359a18a73cfe184f25fad2f59b" kindref="member">sisi4s::fromComplexTensor</ref>(</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;complex&gt;<sp/>&amp;C,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;double&gt;<sp/>&amp;R</highlight></codeline>
<codeline lineno="66"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1a4fcb60ade2ef95fce940523ea8120f3c" kindref="member">AssertCompatibleTensorShape</ref>(C,R);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" kindref="member">Indices</ref>(C);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>R[indices]<sp/>=<sp/>CTF::Function&lt;complex,<sp/>double&gt;(</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(<ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref>)&gt;([](<ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref><sp/>c){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.real();<sp/>})</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>)<sp/>(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>C[indices]</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="namespacesisi4s_1a20c6b0ad3767206173edfb7bf525e5a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a20c6b0ad3767206173edfb7bf525e5a7" kindref="member">sisi4s::toComplexTensor</ref>(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;double&gt;<sp/>&amp;R,<sp/>CTF::Tensor&lt;double&gt;<sp/>&amp;<ref refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ab8ed521c3bf0c49835954ac0e7655425" kindref="member">I</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;complex&gt;<sp/>&amp;C</highlight></codeline>
<codeline lineno="79"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1a6ee41e7aac8595a4a49313301607c7ca" kindref="member">AssertCompatibleTensorShapes</ref>(C,R,<ref refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ab8ed521c3bf0c49835954ac0e7655425" kindref="member">I</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" kindref="member">Indices</ref>(C);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="namespacesisi4s_1a20c6b0ad3767206173edfb7bf525e5a7" kindref="member">toComplexTensor</ref>(R,<sp/>C);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>CTF::Transform&lt;double,<sp/>complex&gt;(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref><sp/>&amp;)&gt;(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref><sp/>&amp;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//#ifdef<sp/>INTEL_COMPILER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.imag()<sp/>=<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.imag(i);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>)<sp/>(</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ab8ed521c3bf0c49835954ac0e7655425" kindref="member">I</ref>[indices],<sp/>C[indices]</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="namespacesisi4s_1a7e188159cd98f0d401ab23369c49d34f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a20c6b0ad3767206173edfb7bf525e5a7" kindref="member">sisi4s::toComplexTensor</ref>(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;double&gt;<sp/>&amp;R,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;complex&gt;<sp/>&amp;C</highlight></codeline>
<codeline lineno="101"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1a4fcb60ade2ef95fce940523ea8120f3c" kindref="member">AssertCompatibleTensorShape</ref>(C,R);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" kindref="member">Indices</ref>(C);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>CTF::Transform&lt;double,<sp/>complex&gt;(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref><sp/>&amp;)&gt;(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/><ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref><sp/>&amp;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//#ifdef<sp/>INTEL_COMPILER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.real()<sp/>=<sp/>r;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.real(r);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.imag(0);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>)<sp/>(</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>R[indices],<sp/>C[indices]</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="namespacesisi4s_1a5881a605777746bffe040bb39da1b048" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a20c6b0ad3767206173edfb7bf525e5a7" kindref="member">sisi4s::toComplexTensor</ref>(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;double&gt;<sp/>&amp;R,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;double&gt;<sp/>&amp;C</highlight></codeline>
<codeline lineno="123"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1a4fcb60ade2ef95fce940523ea8120f3c" kindref="member">AssertCompatibleTensorShape</ref>(C,R);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" kindref="member">Indices</ref>(C);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>C[indices]<sp/>=<sp/>R[indices];</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="namespacesisi4s_1a84ac475b5387a7bc84d0d10bedb6de49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a065b48a575e1c9dd06da30d0aed8c7c1" kindref="member">sisi4s::conjugate</ref>(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;complex&gt;<sp/>&amp;C</highlight></codeline>
<codeline lineno="131"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" kindref="member">Indices</ref>(C);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>CTF::Transform&lt;complex&gt;(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(<ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref><sp/>&amp;)&gt;<sp/>(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](<ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref><sp/>&amp;c){<sp/>c<sp/>=<sp/><ref refid="namespacesisi4s_1abc3ea35f1434b9c5021b9195449d1f9b" kindref="member">std::conj</ref>(c);<sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>)<sp/>(</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>C[indices]</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="namespacesisi4s_1a065b48a575e1c9dd06da30d0aed8c7c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a065b48a575e1c9dd06da30d0aed8c7c1" kindref="member">sisi4s::conjugate</ref>(</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>CTF::Tensor&lt;double&gt;<sp/>&amp;C</highlight></codeline>
<codeline lineno="144"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>;-)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/SiSi4S/SiSi4S/src/math/ComplexTensor.cxx"/>
  </compounddef>
</doxygen>
