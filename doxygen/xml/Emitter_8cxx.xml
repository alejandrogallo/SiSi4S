<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="Emitter_8cxx" kind="file" language="C++">
    <compoundname>Emitter.cxx</compoundname>
    <includes refid="Emitter_8hpp" local="yes">Emitter.hpp</includes>
    <includes local="no">fstream</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="1">
        <label>Emitter.cxx</label>
        <link refid="Emitter_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Emitter.hpp</label>
        <link refid="Emitter_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>util/SharedPointer.hpp</label>
        <link refid="SharedPointer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>fstream</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="6">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*Copyright<sp/>(c)<sp/>2020,<sp/>Andreas<sp/>Grueneis<sp/>and<sp/>Felix<sp/>Hummel,<sp/>all<sp/>rights<sp/>reserved.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Emitter_8hpp" kindref="compound">Emitter.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s" kindref="compound">sisi4s</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Emitter::rank(-1);</highlight></codeline>
<codeline lineno="10"><highlight class="normal">std::string<sp/>Emitter::fileName(</highlight><highlight class="stringliteral">&quot;sisi4s.yaml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(std::ofstream)<sp/>Emitter::yamlFile;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(YAML::Emitter)<sp/>Emitter::yamlEmitter;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classsisi4s_1_1Emitter_1ad9c082d5eee1ca18f0111a95b9980977" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Emitter::setRank(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rank_)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1Emitter_1ae2f2fdff5f01030037db73369e938284" kindref="member">rank</ref><sp/>=<sp/>rank_;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classsisi4s_1_1Emitter_1a7ab4299436b4b6afd51100912b975011" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1Emitter_1a7ab4299436b4b6afd51100912b975011" kindref="member">Emitter::getRank</ref>()<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1Emitter_1ae2f2fdff5f01030037db73369e938284" kindref="member">rank</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classsisi4s_1_1Emitter_1a6b88ef0ebdfcf5c0c155d7b88b8cfe64" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1Emitter_1a6b88ef0ebdfcf5c0c155d7b88b8cfe64" kindref="member">Emitter::setFileName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1Emitter_1a8965d8db4caa9faff4b3fe46a7b09e8d" kindref="member">fileName</ref><sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classsisi4s_1_1Emitter_1ace4019e3fe19aaf455d165683843255a" refkind="member"><highlight class="normal">YAML::Emitter<sp/>&amp;<ref refid="classsisi4s_1_1Emitter_1ace4019e3fe19aaf455d165683843255a" kindref="member">Emitter::getEmitter</ref>()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsisi4s_1_1Emitter_1a72025dab9601ff316503ef23ac87b24f" kindref="member">yamlFile</ref>)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1Emitter_1a72025dab9601ff316503ef23ac87b24f" kindref="member">yamlFile</ref><sp/>=<sp/><ref refid="SharedPointer_8hpp_1a106f61c342cfd013eb570c37328070ae" kindref="member">NEW</ref>(</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream,<sp/><ref refid="classsisi4s_1_1Emitter_1a8965d8db4caa9faff4b3fe46a7b09e8d" kindref="member">fileName</ref>,<sp/>std::ofstream::out<sp/>|<sp/>std::ofstream::trunc</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsisi4s_1_1Emitter_1a7dc97187d0461b905f39b5771a9fc58a" kindref="member">yamlEmitter</ref>)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1Emitter_1a7dc97187d0461b905f39b5771a9fc58a" kindref="member">yamlEmitter</ref><sp/>=<sp/><ref refid="SharedPointer_8hpp_1a106f61c342cfd013eb570c37328070ae" kindref="member">NEW</ref>(YAML::Emitter,<sp/>*<ref refid="classsisi4s_1_1Emitter_1a72025dab9601ff316503ef23ac87b24f" kindref="member">yamlFile</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classsisi4s_1_1Emitter_1a7dc97187d0461b905f39b5771a9fc58a" kindref="member">yamlEmitter</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classsisi4s_1_1Emitter_1a42b91f24787c903e96c6ddddebae6b22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1Emitter_1a42b91f24787c903e96c6ddddebae6b22" kindref="member">Emitter::flush</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>std::flush(*<ref refid="classsisi4s_1_1Emitter_1a72025dab9601ff316503ef23ac87b24f" kindref="member">yamlFile</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/SiSi4S/SiSi4S/src/util/Emitter.cxx"/>
  </compounddef>
</doxygen>
