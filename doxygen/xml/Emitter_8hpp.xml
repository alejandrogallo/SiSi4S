<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="Emitter_8hpp" kind="file" language="C++">
    <compoundname>Emitter.hpp</compoundname>
    <includes refid="SharedPointer_8hpp" local="no">util/SharedPointer.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">yaml-cpp/yaml.h</includes>
    <includedby refid="CcsdEquationOfMotionDavidson_8cxx" local="no">CcsdEquationOfMotionDavidson.cxx</includedby>
    <includedby refid="ClusterSinglesDoublesAlgorithm_8cxx" local="no">ClusterSinglesDoublesAlgorithm.cxx</includedby>
    <includedby refid="ComplexTensorReader_8cxx" local="no">ComplexTensorReader.cxx</includedby>
    <includedby refid="ComplexTensorWriter_8cxx" local="no">ComplexTensorWriter.cxx</includedby>
    <includedby refid="CoulombIntegralsFromGaussian_8cxx" local="no">CoulombIntegralsFromGaussian.cxx</includedby>
    <includedby refid="CoulombIntegralsFromRotatedCoulombIntegrals_8cxx" local="no">CoulombIntegralsFromRotatedCoulombIntegrals.cxx</includedby>
    <includedby refid="CoulombIntegralsFromVertex_8cxx" local="no">CoulombIntegralsFromVertex.cxx</includedby>
    <includedby refid="DiisMixer_8cxx" local="no">DiisMixer.cxx</includedby>
    <includedby refid="Emitter_8cxx" local="yes">Emitter.cxx</includedby>
    <includedby refid="FockMatrixFromCoulombIntegrals_8cxx" local="no">FockMatrixFromCoulombIntegrals.cxx</includedby>
    <includedby refid="HartreeFockFromGaussian_8cxx" local="no">HartreeFockFromGaussian.cxx</includedby>
    <includedby refid="LinearMixer_8cxx" local="no">LinearMixer.cxx</includedby>
    <includedby refid="MeanCorrelationHoleDepth_8cxx" local="no">MeanCorrelationHoleDepth.cxx</includedby>
    <includedby refid="MoReader_8cxx" local="no">MoReader.cxx</includedby>
    <includedby refid="NuclearRepulsionEnergy_8cxx" local="no">NuclearRepulsionEnergy.cxx</includedby>
    <includedby refid="OneBodyFromGaussian_8cxx" local="no">OneBodyFromGaussian.cxx</includedby>
    <includedby refid="OneBodyRotation_8cxx" local="no">OneBodyRotation.cxx</includedby>
    <includedby refid="Sisi4s_8cxx" local="no">Sisi4s.cxx</includedby>
    <includedby refid="TensorReader_8cxx" local="no">TensorReader.cxx</includedby>
    <includedby refid="TensorWriter_8cxx" local="no">TensorWriter.cxx</includedby>
    <incdepgraph>
      <node id="1">
        <label>Emitter.hpp</label>
        <link refid="Emitter_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>util/SharedPointer.hpp</label>
        <link refid="SharedPointer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="5">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19">
        <label>Sisi4s.cxx</label>
        <link refid="Sisi4s_8cxx"/>
      </node>
      <node id="2">
        <label>CcsdEquationOfMotionDavidson.cxx</label>
        <link refid="CcsdEquationOfMotionDavidson_8cxx"/>
      </node>
      <node id="3">
        <label>ClusterSinglesDoublesAlgorithm.cxx</label>
        <link refid="ClusterSinglesDoublesAlgorithm_8cxx"/>
      </node>
      <node id="4">
        <label>ComplexTensorReader.cxx</label>
        <link refid="ComplexTensorReader_8cxx"/>
      </node>
      <node id="5">
        <label>ComplexTensorWriter.cxx</label>
        <link refid="ComplexTensorWriter_8cxx"/>
      </node>
      <node id="6">
        <label>CoulombIntegralsFromGaussian.cxx</label>
        <link refid="CoulombIntegralsFromGaussian_8cxx"/>
      </node>
      <node id="7">
        <label>CoulombIntegralsFromRotatedCoulombIntegrals.cxx</label>
        <link refid="CoulombIntegralsFromRotatedCoulombIntegrals_8cxx"/>
      </node>
      <node id="8">
        <label>CoulombIntegralsFromVertex.cxx</label>
        <link refid="CoulombIntegralsFromVertex_8cxx"/>
      </node>
      <node id="11">
        <label>FockMatrixFromCoulombIntegrals.cxx</label>
        <link refid="FockMatrixFromCoulombIntegrals_8cxx"/>
      </node>
      <node id="12">
        <label>HartreeFockFromGaussian.cxx</label>
        <link refid="HartreeFockFromGaussian_8cxx"/>
      </node>
      <node id="14">
        <label>MeanCorrelationHoleDepth.cxx</label>
        <link refid="MeanCorrelationHoleDepth_8cxx"/>
      </node>
      <node id="15">
        <label>MoReader.cxx</label>
        <link refid="MoReader_8cxx"/>
      </node>
      <node id="16">
        <label>NuclearRepulsionEnergy.cxx</label>
        <link refid="NuclearRepulsionEnergy_8cxx"/>
      </node>
      <node id="17">
        <label>OneBodyFromGaussian.cxx</label>
        <link refid="OneBodyFromGaussian_8cxx"/>
      </node>
      <node id="18">
        <label>OneBodyRotation.cxx</label>
        <link refid="OneBodyRotation_8cxx"/>
      </node>
      <node id="20">
        <label>TensorReader.cxx</label>
        <link refid="TensorReader_8cxx"/>
      </node>
      <node id="21">
        <label>TensorWriter.cxx</label>
        <link refid="TensorWriter_8cxx"/>
      </node>
      <node id="9">
        <label>DiisMixer.cxx</label>
        <link refid="DiisMixer_8cxx"/>
      </node>
      <node id="13">
        <label>LinearMixer.cxx</label>
        <link refid="LinearMixer_8cxx"/>
      </node>
      <node id="10">
        <label>Emitter.cxx</label>
        <link refid="Emitter_8cxx"/>
      </node>
      <node id="1">
        <label>Emitter.hpp</label>
        <link refid="Emitter_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classsisi4s_1_1Emitter" prot="public">sisi4s::Emitter</innerclass>
    <innernamespace refid="namespacesisi4s">sisi4s</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="Emitter_8hpp_1aaab796d47261553f44525310f031c82a" prot="public" static="no">
        <name>EMIT</name>
        <param><defname>...</defname></param>
        <initializer>  if (<ref refid="classsisi4s_1_1Emitter_1a7ab4299436b4b6afd51100912b975011" kindref="member">sisi4s::Emitter::getRank</ref>() != 0) { \
  } else <ref refid="classsisi4s_1_1Emitter_1ace4019e3fe19aaf455d165683843255a" kindref="member">sisi4s::Emitter::getEmitter</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Emitter.hpp" line="31" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Emitter.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Emitter_8hpp_1a43e7149cbc9ac61ec307e2a03193f2ca" prot="public" static="no">
        <name>EMIT_FLUSH</name>
        <param><defname>...</defname></param>
        <initializer>  if (<ref refid="classsisi4s_1_1Emitter_1a7ab4299436b4b6afd51100912b975011" kindref="member">sisi4s::Emitter::getRank</ref>() != 0) { \
  } else <ref refid="classsisi4s_1_1Emitter_1a42b91f24787c903e96c6ddddebae6b22" kindref="member">sisi4s::Emitter::flush</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Emitter.hpp" line="34" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Emitter.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*Copyright<sp/>(c)<sp/>2020,<sp/>Andreas<sp/>Grueneis<sp/>and<sp/>Felix<sp/>Hummel,<sp/>all<sp/>rights<sp/>reserved.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EMITTER_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMITTER_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="SharedPointer_8hpp" kindref="compound">util/SharedPointer.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;yaml-cpp/yaml.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s" kindref="compound">sisi4s</ref><sp/>{</highlight></codeline>
<codeline lineno="15" refid="classsisi4s_1_1Emitter" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsisi4s_1_1Emitter" kindref="compound">Emitter</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1Emitter_1ad9c082d5eee1ca18f0111a95b9980977" kindref="member">setRank</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1Emitter_1ae2f2fdff5f01030037db73369e938284" kindref="member">rank</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1Emitter_1a7ab4299436b4b6afd51100912b975011" kindref="member">getRank</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>YAML::Emitter<sp/>&amp;<ref refid="classsisi4s_1_1Emitter_1ace4019e3fe19aaf455d165683843255a" kindref="member">getEmitter</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1Emitter_1a42b91f24787c903e96c6ddddebae6b22" kindref="member">flush</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1Emitter_1a6b88ef0ebdfcf5c0c155d7b88b8cfe64" kindref="member">setFileName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24" refid="classsisi4s_1_1Emitter_1ae2f2fdff5f01030037db73369e938284" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1Emitter_1ae2f2fdff5f01030037db73369e938284" kindref="member">rank</ref>;</highlight></codeline>
<codeline lineno="25" refid="classsisi4s_1_1Emitter_1a8965d8db4caa9faff4b3fe46a7b09e8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classsisi4s_1_1Emitter_1a8965d8db4caa9faff4b3fe46a7b09e8d" kindref="member">fileName</ref>;</highlight></codeline>
<codeline lineno="26" refid="classsisi4s_1_1Emitter_1a72025dab9601ff316503ef23ac87b24f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(std::ofstream)<sp/><ref refid="classsisi4s_1_1Emitter_1a72025dab9601ff316503ef23ac87b24f" kindref="member">yamlFile</ref>;</highlight></codeline>
<codeline lineno="27" refid="classsisi4s_1_1Emitter_1a7dc97187d0461b905f39b5771a9fc58a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(YAML::Emitter)<sp/><ref refid="classsisi4s_1_1Emitter_1a7dc97187d0461b905f39b5771a9fc58a" kindref="member">yamlEmitter</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="Emitter_8hpp_1aaab796d47261553f44525310f031c82a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMIT(...)<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/>if<sp/>(sisi4s::Emitter::getRank()<sp/>!=<sp/>0)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/>}<sp/>else<sp/>sisi4s::Emitter::getEmitter()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="Emitter_8hpp_1a43e7149cbc9ac61ec307e2a03193f2ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMIT_FLUSH(...)<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/>if<sp/>(sisi4s::Emitter::getRank()<sp/>!=<sp/>0)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/>}<sp/>else<sp/>sisi4s::Emitter::flush()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/sisi4s/sisi4s/src/util/Emitter.hpp"/>
  </compounddef>
</doxygen>
