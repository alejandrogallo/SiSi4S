<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="LapackInverse_8hpp" kind="file" language="C++">
    <compoundname>LapackInverse.hpp</compoundname>
    <includes refid="Complex_8hpp" local="no">math/Complex.hpp</includes>
    <includes refid="LapackMatrix_8hpp" local="no">util/LapackMatrix.hpp</includes>
    <includes refid="Exception_8hpp" local="no">util/Exception.hpp</includes>
    <includes refid="Lapack_8hpp" local="no">extern/Lapack.hpp</includes>
    <includes refid="Log_8hpp" local="no">util/Log.hpp</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="15">
        <label>extern/Lapack.hpp</label>
        <link refid="Lapack_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>math/Complex.hpp</label>
        <link refid="Complex_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>math/Float.hpp</label>
        <link refid="Float_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>util/CTF.hpp</label>
        <link refid="CTF_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>util/Exception.hpp</label>
        <link refid="Exception_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>LapackInverse.hpp</label>
        <link refid="LapackInverse_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>util/LapackMatrix.hpp</label>
        <link refid="LapackMatrix_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>util/Log.hpp</label>
        <link refid="Log_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>util/Tensor.hpp</label>
        <link refid="Tensor_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>util/Time.hpp</label>
        <link refid="Time_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>complex</label>
      </node>
      <node id="19">
        <label>cstdint</label>
      </node>
      <node id="11">
        <label>ctf.hpp</label>
      </node>
      <node id="18">
        <label>ctime</label>
      </node>
      <node id="23">
        <label>fstream</label>
      </node>
      <node id="20">
        <label>iomanip</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>ostream</label>
      </node>
      <node id="8">
        <label>sstream</label>
      </node>
      <node id="22">
        <label>streambuf</label>
      </node>
      <node id="13">
        <label>string</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classsisi4s_1_1LapackInverse_3_01Complex64_01_4" prot="public">sisi4s::LapackInverse&lt; Complex64 &gt;</innerclass>
    <innernamespace refid="namespacesisi4s">sisi4s</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LAPACK_INVERSE_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAPACK_INVERSE_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Complex_8hpp" kindref="compound">math/Complex.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="LapackMatrix_8hpp" kindref="compound">util/LapackMatrix.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Exception_8hpp" kindref="compound">util/Exception.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Lapack_8hpp" kindref="compound">extern/Lapack.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Log_8hpp" kindref="compound">util/Log.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s" kindref="compound">sisi4s</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>base<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F<sp/>=<sp/>real&gt;</highlight></codeline>
<codeline lineno="15" refid="classsisi4s_1_1LapackInverse" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsisi4s_1_1LapackInverse" kindref="compound">LapackInverse</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specialization<sp/>for<sp/>complex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="19" refid="classsisi4s_1_1LapackInverse_3_01Complex64_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsisi4s_1_1LapackInverse" kindref="compound">LapackInverse</ref>&lt;<ref refid="namespacesisi4s_1a4f2a35668e9f5c158a04d77cf39ac02b" kindref="member">Complex64</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21" refid="classsisi4s_1_1LapackInverse_3_01Complex64_01_4_1ac46c62694eacb361ccae04d2adcebfb7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1LapackInverse_3_01Complex64_01_4_1ac46c62694eacb361ccae04d2adcebfb7" kindref="member">LapackInverse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1LapackMatrix" kindref="compound">LapackMatrix&lt;Complex64&gt;</ref><sp/>&amp;A_)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>invA(A_)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(A_.<ref refid="classsisi4s_1_1LapackMatrix_1af17845e3e518413996316885e56e0367" kindref="member">getRows</ref>()<sp/>!=<sp/>A_.<ref refid="classsisi4s_1_1LapackMatrix_1a5b733258c657d65b923dd8831dcf65f1" kindref="member">getColumns</ref>())<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="Exception_8hpp_1aa49c727f91093a79c46ee6ecd83548bb" kindref="member">EXCEPTION</ref>(</highlight><highlight class="stringliteral">&quot;Inverse<sp/>requries<sp/>a<sp/>square<sp/>matrix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows(A_.<ref refid="classsisi4s_1_1LapackMatrix_1af17845e3e518413996316885e56e0367" kindref="member">getRows</ref>());</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Complex64&gt;<sp/>work(rows<sp/>*<sp/>rows);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>workSize(work.size());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>rowPermutation(rows);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>info;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Lapack_8hpp_1ab79f66e7f576fe063fb09995dc467c00" kindref="member">zgetrf_</ref>(&amp;rows,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;rows,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invA.getValues(),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;rows,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowPermutation.data(),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;info);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Lapack_8hpp_1a44b3584500939d1adaabb3c0fc0487f1" kindref="member">zgetri_</ref>(&amp;rows,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invA.getValues(),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;rows,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowPermutation.data(),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work.data(),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;workSize,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;info);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>-info<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>ZGETRI<sp/>is<sp/>illegal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="Exception_8hpp_1aa49c727f91093a79c46ee6ecd83548bb" kindref="member">EXCEPTION</ref>(stream.str());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info<sp/>&gt;<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="Exception_8hpp_1aa49c727f91093a79c46ee6ecd83548bb" kindref="member">EXCEPTION</ref>(</highlight><highlight class="stringliteral">&quot;Singular<sp/>matrix<sp/>cannot<sp/>be<sp/>inverted&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classsisi4s_1_1LapackInverse_3_01Complex64_01_4_1a19603d926ac3e50ea233af7edbd0c3b2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1LapackInverse_3_01Complex64_01_4_1a19603d926ac3e50ea233af7edbd0c3b2" kindref="member">~LapackInverse</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classsisi4s_1_1LapackInverse_3_01Complex64_01_4_1a74ae54ad7752ceb94ff6a4bb33f250b7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1LapackMatrix" kindref="compound">LapackMatrix&lt;Complex64&gt;</ref><sp/>&amp;<ref refid="classsisi4s_1_1LapackInverse_3_01Complex64_01_4_1a74ae54ad7752ceb94ff6a4bb33f250b7" kindref="member">get</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>invA;<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58" refid="classsisi4s_1_1LapackInverse_3_01Complex64_01_4_1a3035e07f1b71c41d7bdde8b380564cbb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1LapackMatrix" kindref="compound">LapackMatrix&lt;Complex64&gt;</ref><sp/><ref refid="classsisi4s_1_1LapackInverse_3_01Complex64_01_4_1a3035e07f1b71c41d7bdde8b380564cbb" kindref="member">invA</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sisi4s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/sisi4s/sisi4s/src/util/LapackInverse.hpp"/>
  </compounddef>
</doxygen>
