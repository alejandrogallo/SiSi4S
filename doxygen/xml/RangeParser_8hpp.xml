<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="RangeParser_8hpp" kind="file" language="C++">
    <compoundname>RangeParser.hpp</compoundname>
    <includedby refid="CcsdEquationOfMotionDavidson_8cxx" local="no">CcsdEquationOfMotionDavidson.cxx</includedby>
    <includedby refid="CcsdtEquationOfMotionDavidson_8cxx" local="no">CcsdtEquationOfMotionDavidson.cxx</includedby>
    <includedby refid="UCcsdEAEquationOfMotionDavidson_8cxx" local="no">UCcsdEAEquationOfMotionDavidson.cxx</includedby>
    <includedby refid="UCcsdIPEquationOfMotionDavidson_8cxx" local="no">UCcsdIPEquationOfMotionDavidson.cxx</includedby>
    <includedby refid="UccsdAmplitudesFromCoulombIntegrals_8cxx" local="no">UccsdAmplitudesFromCoulombIntegrals.cxx</includedby>
    <includedby refid="UccsdtAmplitudesFromCoulombIntegrals_8cxx" local="no">UccsdtAmplitudesFromCoulombIntegrals.cxx</includedby>
    <includedby refid="UccsdtqAmplitudesFromCoulombIntegrals_8cxx" local="no">UccsdtqAmplitudesFromCoulombIntegrals.cxx</includedby>
    <includedby refid="UnrestrictedEquationOfMotionSinglesFromRpa_8cxx" local="no">UnrestrictedEquationOfMotionSinglesFromRpa.cxx</includedby>
    <includedby refid="UrpaAmplitudesFromCoulombIntegrals_8cxx" local="no">UrpaAmplitudesFromCoulombIntegrals.cxx</includedby>
    <invincdepgraph>
      <node id="2">
        <label>CcsdEquationOfMotionDavidson.cxx</label>
        <link refid="CcsdEquationOfMotionDavidson_8cxx"/>
      </node>
      <node id="3">
        <label>CcsdtEquationOfMotionDavidson.cxx</label>
        <link refid="CcsdtEquationOfMotionDavidson_8cxx"/>
      </node>
      <node id="4">
        <label>UCcsdEAEquationOfMotionDavidson.cxx</label>
        <link refid="UCcsdEAEquationOfMotionDavidson_8cxx"/>
      </node>
      <node id="5">
        <label>UCcsdIPEquationOfMotionDavidson.cxx</label>
        <link refid="UCcsdIPEquationOfMotionDavidson_8cxx"/>
      </node>
      <node id="6">
        <label>UccsdAmplitudesFromCoulombIntegrals.cxx</label>
        <link refid="UccsdAmplitudesFromCoulombIntegrals_8cxx"/>
      </node>
      <node id="7">
        <label>UccsdtAmplitudesFromCoulombIntegrals.cxx</label>
        <link refid="UccsdtAmplitudesFromCoulombIntegrals_8cxx"/>
      </node>
      <node id="8">
        <label>UccsdtqAmplitudesFromCoulombIntegrals.cxx</label>
        <link refid="UccsdtqAmplitudesFromCoulombIntegrals_8cxx"/>
      </node>
      <node id="9">
        <label>UnrestrictedEquationOfMotionSinglesFromRpa.cxx</label>
        <link refid="UnrestrictedEquationOfMotionSinglesFromRpa_8cxx"/>
      </node>
      <node id="10">
        <label>UrpaAmplitudesFromCoulombIntegrals.cxx</label>
        <link refid="UrpaAmplitudesFromCoulombIntegrals_8cxx"/>
      </node>
      <node id="1">
        <label>RangeParser.hpp</label>
        <link refid="RangeParser_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classsisi4s_1_1RangeParser" prot="public">sisi4s::RangeParser</innerclass>
    <innernamespace refid="namespacesisi4s">sisi4s</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>RANGE_PARSER_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RANGE_PARSER_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s" kindref="compound">sisi4s</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classsisi4s_1_1RangeParser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsisi4s_1_1RangeParser" kindref="compound">RangeParser</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="classsisi4s_1_1RangeParser_1a2c4d07ffefaf8b61f0f591e91bcb5617" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1RangeParser_1a2c4d07ffefaf8b61f0f591e91bcb5617" kindref="member">RangeParser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;rawRange_)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classsisi4s_1_1RangeParser_1a86aff8d07cb1c2c6c1efb637395e506b" kindref="member">rawRange</ref>(rawRange_)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1RangeParser_1a54820a829847e966af461d9befaa3d1e" kindref="member">parse</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23" refid="classsisi4s_1_1RangeParser_1a0841413f2d569e23dd4f47ab9fc46889" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="classsisi4s_1_1RangeParser_1a0841413f2d569e23dd4f47ab9fc46889" kindref="member">getRange</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1RangeParser_1a89975832acb75804b34ffb5c083924df" kindref="member">parsedRange</ref>;<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classsisi4s_1_1RangeParser_1ab04f16adb51602f68154b2b015caccf4" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="classsisi4s_1_1RangeParser_1ab04f16adb51602f68154b2b015caccf4" kindref="member">atomicRangeToRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;atomicRange)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>range;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low(0),<sp/>high(0);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dash_pos(atomicRange.find(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dash_pos<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>low<sp/>=<sp/>std::stoi(atomicRange);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>high<sp/>=<sp/>low;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>low<sp/>=<sp/>std::stoi(atomicRange.substr(0,<sp/>dash_pos));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>high<sp/>=<sp/>std::stoi(atomicRange.substr(dash_pos<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atomicRange.length()<sp/>-<sp/>dash_pos<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;Parser&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Low<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>low<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;Parser&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;high<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>high<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(std::min(low,<sp/>high));<sp/>i<sp/>&lt;=<sp/>std::max(low,<sp/>high);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>range.push_back(i);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classsisi4s_1_1RangeParser_1a54820a829847e966af461d9befaa3d1e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1RangeParser_1a54820a829847e966af461d9befaa3d1e" kindref="member">parse</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>buff(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>comma<sp/>=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/>space<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/><ref refid="classsisi4s_1_1RangeParser_1a86aff8d07cb1c2c6c1efb637395e506b" kindref="member">rawRange</ref>.length();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1RangeParser_1a86aff8d07cb1c2c6c1efb637395e506b" kindref="member">rawRange</ref>[i]<sp/>==<sp/>comma)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1RangeParser_1a86aff8d07cb1c2c6c1efb637395e506b" kindref="member">rawRange</ref>[i]<sp/>==<sp/>space)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buff.append(<ref refid="classsisi4s_1_1RangeParser_1a86aff8d07cb1c2c6c1efb637395e506b" kindref="member">rawRange</ref>,<sp/>i,<sp/>1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/><ref refid="classsisi4s_1_1RangeParser_1a86aff8d07cb1c2c6c1efb637395e506b" kindref="member">rawRange</ref>.length()<sp/>-<sp/>1)<sp/>{<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>the<sp/>numbers<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempRange(<ref refid="classsisi4s_1_1RangeParser_1ab04f16adb51602f68154b2b015caccf4" kindref="member">atomicRangeToRange</ref>(buff));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsisi4s_1_1RangeParser_1a89975832acb75804b34ffb5c083924df" kindref="member">parsedRange</ref>.insert(<ref refid="classsisi4s_1_1RangeParser_1a89975832acb75804b34ffb5c083924df" kindref="member">parsedRange</ref>.end(),<sp/>tempRange.begin(),<sp/>tempRange.end());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buff.clear();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78" refid="classsisi4s_1_1RangeParser_1a86aff8d07cb1c2c6c1efb637395e506b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classsisi4s_1_1RangeParser_1a86aff8d07cb1c2c6c1efb637395e506b" kindref="member">rawRange</ref>;</highlight></codeline>
<codeline lineno="79" refid="classsisi4s_1_1RangeParser_1a89975832acb75804b34ffb5c083924df" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="classsisi4s_1_1RangeParser_1a89975832acb75804b34ffb5c083924df" kindref="member">parsedRange</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="namespacesisi4s_1aba780556b3986877ef9eed5b576fab06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="FcidumpWriter_8cxx_1a61c1198de1cc7778444ba3c329482b50" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;stream,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1RangeParser" kindref="compound">RangeParser</ref><sp/>&amp;parser)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;i<sp/>:<sp/>parser.<ref refid="classsisi4s_1_1RangeParser_1a0841413f2d569e23dd4f47ab9fc46889" kindref="member">getRange</ref>())<sp/>stream<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sisi4s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/sisi4s/sisi4s/src/util/RangeParser.hpp"/>
  </compounddef>
</doxygen>
