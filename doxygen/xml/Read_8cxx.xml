<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="Read_8cxx" kind="file" language="C++">
    <compoundname>Read.cxx</compoundname>
    <includes local="no">vector</includes>
    <includes refid="Yaml_8hpp" local="no">util/Yaml.hpp</includes>
    <includes refid="Sisi4s_8hpp" local="no">Sisi4s.hpp</includes>
    <includes refid="Read_8hpp" local="no">algorithms/Read.hpp</includes>
    <includes refid="Tensor_8hpp" local="no">util/Tensor.hpp</includes>
    <includes refid="filesystem_8hpp" local="no">vendor/filesystem.hpp</includes>
    <incdepgraph>
      <node id="39">
        <label>Data.hpp</label>
        <link refid="Data_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Options.hpp</label>
        <link refid="Options_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Sisi4s.hpp</label>
        <link refid="Sisi4s_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>algorithms/Algorithm.hpp</label>
        <link refid="Algorithm_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Read.cxx</label>
        <link refid="Read_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>algorithms/Read.hpp</label>
        <link refid="Read_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>math/Complex.hpp</label>
        <link refid="Complex_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>math/Float.hpp</label>
        <link refid="Float_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>util/CTF.hpp</label>
        <link refid="CTF_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>util/Documentation.hpp</label>
        <link refid="Documentation_8hpp"/>
      </node>
      <node id="46">
        <label>util/Exception.hpp</label>
        <link refid="Exception_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>util/Log.hpp</label>
        <link refid="Log_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>util/Tensor.hpp</label>
        <link refid="Tensor_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>util/Time.hpp</label>
        <link refid="Time_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>util/Yaml.hpp</label>
        <link refid="Yaml_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>vendor/CLI11.hpp</label>
        <link refid="CLI11_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>vendor/filesystem.hpp</label>
        <link refid="filesystem_8hpp"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>algorithm</label>
      </node>
      <node id="56">
        <label>cctype</label>
      </node>
      <node id="57">
        <label>chrono</label>
      </node>
      <node id="58">
        <label>clocale</label>
      </node>
      <node id="12">
        <label>cmath</label>
      </node>
      <node id="44">
        <label>complex</label>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="59">
        <label>cstdlib</label>
      </node>
      <node id="60">
        <label>cstring</label>
      </node>
      <node id="15">
        <label>ctf.hpp</label>
      </node>
      <node id="7">
        <label>ctime</label>
      </node>
      <node id="49">
        <label>dirent.h</label>
      </node>
      <node id="34">
        <label>exception</label>
      </node>
      <node id="50">
        <label>fcntl.h</label>
      </node>
      <node id="23">
        <label>fstream</label>
      </node>
      <node id="20">
        <label>functional</label>
      </node>
      <node id="10">
        <label>iomanip</label>
      </node>
      <node id="28">
        <label>iostream</label>
      </node>
      <node id="31">
        <label>iterator</label>
      </node>
      <node id="55">
        <label>langinfo.h</label>
      </node>
      <node id="33">
        <label>limits</label>
      </node>
      <node id="51">
        <label>limits.h</label>
      </node>
      <node id="26">
        <label>locale</label>
      </node>
      <node id="22">
        <label>map</label>
      </node>
      <node id="19">
        <label>memory</label>
      </node>
      <node id="21">
        <label>numeric</label>
      </node>
      <node id="9">
        <label>ostream</label>
      </node>
      <node id="29">
        <label>set</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="61">
        <label>stack</label>
      </node>
      <node id="32">
        <label>stdexcept</label>
      </node>
      <node id="41">
        <label>streambuf</label>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="48">
        <label>sys/param.h</label>
      </node>
      <node id="35">
        <label>sys/stat.h</label>
      </node>
      <node id="54">
        <label>sys/statvfs.h</label>
      </node>
      <node id="52">
        <label>sys/time.h</label>
      </node>
      <node id="36">
        <label>sys/types.h</label>
      </node>
      <node id="62">
        <label>system_error</label>
      </node>
      <node id="24">
        <label>tuple</label>
      </node>
      <node id="30">
        <label>type_traits</label>
      </node>
      <node id="53">
        <label>unistd.h</label>
      </node>
      <node id="25">
        <label>utility</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
      <node id="4">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structYAML_1_1convert_3_01AxisType_01_4" prot="public">YAML::convert&lt; AxisType &gt;</innerclass>
    <innerclass refid="structYAML_1_1convert_3_01ElementFileType_01_4" prot="public">YAML::convert&lt; ElementFileType &gt;</innerclass>
    <innerclass refid="structYAML_1_1convert_3_01ScalarType_01_4" prot="public">YAML::convert&lt; ScalarType &gt;</innerclass>
    <innerclass refid="structYAML_1_1convert_3_01ReadHeader_1_1Version_01_4" prot="public">YAML::convert&lt; ReadHeader::Version &gt;</innerclass>
    <innerclass refid="structYAML_1_1convert_3_01ReadableType_01_4" prot="public">YAML::convert&lt; ReadableType &gt;</innerclass>
    <innerclass refid="structYAML_1_1convert_3_01Dimension_01_4" prot="public">YAML::convert&lt; Dimension &gt;</innerclass>
    <innerclass refid="structYAML_1_1convert_3_01ReadHeader_01_4" prot="public">YAML::convert&lt; ReadHeader &gt;</innerclass>
    <innernamespace refid="namespacesisi4s">sisi4s</innernamespace>
    <innernamespace refid="namespaceYAML">YAML</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Yaml_8hpp" kindref="compound">util/Yaml.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Sisi4s_8hpp" kindref="compound">Sisi4s.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Read_8hpp" kindref="compound">algorithms/Read.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Tensor_8hpp" kindref="compound">util/Tensor.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="filesystem_8hpp" kindref="compound">vendor/filesystem.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s" kindref="compound">sisi4s</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceghc_1_1filesystem" kindref="compound">fs</ref><sp/>=<sp/><ref refid="namespaceghc_1_1filesystem" kindref="compound">ghc::filesystem</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Tensor&lt;F&gt;<sp/>*new_tensor_from_dimensions(<ref refid="namespacesisi4s_1_1cc4s_1aa171a853df886e0b81bb940dd84395e6" kindref="member">cc4s::Dimensions</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;dims)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>std::vector&lt;TensorIndex&gt;<sp/>lens(dims.size()),<sp/>syms(dims.size(),<sp/>NS);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>std::transform(dims.begin(),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dims.end(),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lens.begin(),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](cc4s::Dimension<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;d)<sp/>{<sp/>return<sp/>d.length;<sp/>});</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Tensor&lt;F&gt;(dims.size(),<sp/>syms.data(),<sp/>lens.data(),<sp/>*<ref refid="classsisi4s_1_1Sisi4s_1ace7b506b09fbfac3743da86db91d49ce" kindref="member">Sisi4s::world</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classsisi4s_1_1Read_1aef678cc6cbe967f52976cf7a79743a54" refkind="member"><highlight class="normal"><ref refid="Algorithm_8hpp_1aed7ff7232962c1cf6cb9051a47a38d44" kindref="member">IMPLEMENT_ALGORITHM</ref>(<ref refid="classsisi4s_1_1Read" kindref="compound">Read</ref>)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>fileName<sp/>=<sp/>getTextArgument(</highlight><highlight class="stringliteral">&quot;fileName&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataPath<sp/>=</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classghc_1_1filesystem_1_1path" kindref="compound">fs::path</ref>(fileName).<ref refid="classghc_1_1filesystem_1_1path_1a4104e85b25f077db4bb0c99f503b1185" kindref="member">replace_extension</ref>(<ref refid="classghc_1_1filesystem_1_1path" kindref="compound">fs::path</ref>(</highlight><highlight class="stringliteral">&quot;elements&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>=<sp/>YAML::LoadFile(fileName);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="structsisi4s_1_1cc4s_1_1ReadHeader" kindref="compound">cc4s::ReadHeader</ref><sp/>header<sp/>=<sp/>node.as&lt;<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader" kindref="compound">cc4s::ReadHeader</ref>&gt;();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Read&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;version:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>header.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1ac5fda398bef9fcd391539de73980af5d" kindref="member">version</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;d<sp/>:<sp/>header.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a5da1bd4ad16a0d18c4f21ff6030824f0" kindref="member">dimensions</ref>)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Read:Header&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#dimen<sp/>length:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>d.length<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Read:Header&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#dimen<sp/>type<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>d.type<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>std::accumulate(</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a5da1bd4ad16a0d18c4f21ff6030824f0" kindref="member">dimensions</ref>.begin(),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a5da1bd4ad16a0d18c4f21ff6030824f0" kindref="member">dimensions</ref>.end(),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1UL,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>a,<sp/><ref refid="structsisi4s_1_1cc4s_1_1Dimension" kindref="compound">cc4s::Dimension</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;b)<sp/>{<sp/>return<sp/>a<sp/>*<sp/>b.length;<sp/>});</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Read:Header&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#elems<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>count<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(header.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a45911879a5a64a593155f232bb4c4b0f" kindref="member">scalarType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1_1cc4s_1ab6b6730bdce9a048b7bbde666053661aa8cd94d4ed230d0520e283633c318b567" kindref="member">cc4s::ScalarType::Real64</ref>:<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Read&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Real64<sp/>tensor&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">F<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structsisi4s_1_1cc4s_1_1ScalarTypeTraits" kindref="compound">cc4s::ScalarTypeTraits&lt;cc4s::ScalarType::Real64&gt;::type</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>new_tensor_from_dimensions&lt;F&gt;(header.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a5da1bd4ad16a0d18c4f21ff6030824f0" kindref="member">dimensions</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(header.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a3f8d6f98fad22d55aa26dd7186af515a" kindref="member">elementsType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1_1cc4s_1a1da828b609f9ec0ad236d1f6afd82db0afcefecda941b5822f9af7488e1c5b9eb" kindref="member">cc4s::ElementFileType::TextFile</ref>:<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Read&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Text<sp/>tensor&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1Sisi4s_1ace7b506b09fbfac3743da86db91d49ce" kindref="member">Sisi4s::world</ref>-&gt;rank<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;F&gt;<sp/>values(count);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>s(dataPath.c_str());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::string<sp/>line;<sp/>std::getline(s,<sp/>line);)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[idx++]<sp/>=<sp/>std::atof(line.c_str());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>to<sp/>tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TensorIndex&gt;<sp/>indices(count);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(indices.begin(),<sp/>indices.end(),<sp/>0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;write(count,<sp/>indices.data(),<sp/>values.data());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1_1cc4s_1a1da828b609f9ec0ad236d1f6afd82db0a8d2122b7903ad5f56a9eb5c2a104ae05" kindref="member">cc4s::ElementFileType::IeeeBinaryFile</ref>:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Read&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Binary<sp/>tensor&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;read_dense_from_file(dataPath.c_str());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>allocatedTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;destination&quot;</highlight><highlight class="normal">,<sp/>t);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1_1cc4s_1ab6b6730bdce9a048b7bbde666053661aa7f460db745fe45e1227f6ffcc6bc44bf" kindref="member">cc4s::ScalarType::Complex64</ref>:<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Read&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Complex64<sp/>tensor&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">F<sp/>=</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structsisi4s_1_1cc4s_1_1ScalarTypeTraits" kindref="compound">cc4s::ScalarTypeTraits&lt;cc4s::ScalarType::Complex64&gt;::type</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>new_tensor_from_dimensions&lt;F&gt;(header.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a5da1bd4ad16a0d18c4f21ff6030824f0" kindref="member">dimensions</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;read_dense_from_file(dataPath.c_str());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>allocatedTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;destination&quot;</highlight><highlight class="normal">,<sp/>t);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classsisi4s_1_1Write_1a6a7998a790982418dc77e430e7734c22" refkind="member"><highlight class="normal"><ref refid="Algorithm_8hpp_1aed7ff7232962c1cf6cb9051a47a38d44" kindref="member">IMPLEMENT_ALGORITHM</ref>(<ref refid="classsisi4s_1_1Write" kindref="compound">Write</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>yet<sp/>implemented!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>fileName<sp/>=<sp/>getTextArgument(</highlight><highlight class="stringliteral">&quot;fileName&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination<sp/>=<sp/>getTextArgument(</highlight><highlight class="stringliteral">&quot;destination&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sisi4s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>uninteresting<sp/>YAML<sp/>details</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceYAML" kindref="compound">YAML</ref><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s_1_1cc4s" kindref="compound">sisi4s::cc4s</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="115" refid="structYAML_1_1convert_3_01AxisType_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">convert&lt;<ref refid="namespacesisi4s_1_1cc4s_1a028d5cfff531667dd55ed6706d32d9d4" kindref="member">AxisType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structYAML_1_1convert_3_01AxisType_01_4_1ae487b8b566eff28d00890f168e42f573" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Node<sp/><ref refid="structYAML_1_1convert_3_01AxisType_01_4_1ae487b8b566eff28d00890f168e42f573" kindref="member">encode</ref>(<ref refid="namespacesisi4s_1_1cc4s_1a028d5cfff531667dd55ed6706d32d9d4" kindref="member">AxisType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;i)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>Node<sp/>n;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AxisType::AuxiliaryField:<sp/>n<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AuxiliaryField&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AxisType::State:<sp/>n<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;State&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="structYAML_1_1convert_3_01AxisType_01_4_1abb812c2f81f90522f5f344ab554102b4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structYAML_1_1convert_3_01AxisType_01_4_1abb812c2f81f90522f5f344ab554102b4" kindref="member">decode</ref>(Node<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;n,<sp/><ref refid="namespacesisi4s_1_1cc4s_1a028d5cfff531667dd55ed6706d32d9d4" kindref="member">AxisType</ref><sp/>&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>_n<sp/>=<sp/>n.as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n.IsScalar())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_n<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;AuxiliaryField&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>AxisType::AuxiliaryField;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_n<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;State&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>AxisType::State;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="141" refid="structYAML_1_1convert_3_01ElementFileType_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">convert&lt;<ref refid="namespacesisi4s_1_1cc4s_1a1da828b609f9ec0ad236d1f6afd82db0" kindref="member">ElementFileType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="142" refid="structYAML_1_1convert_3_01ElementFileType_01_4_1a06ca707aefae54131e46710714691fca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s_1_1cc4s_1a1da828b609f9ec0ad236d1f6afd82db0" kindref="member">Native</ref><sp/>=<sp/><ref refid="namespacesisi4s_1_1cc4s_1a1da828b609f9ec0ad236d1f6afd82db0" kindref="member">ElementFileType</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="structYAML_1_1convert_3_01ElementFileType_01_4_1aa034ba257faa6a5c687eada95b30eb10" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Node<sp/><ref refid="structYAML_1_1convert_3_01ElementFileType_01_4_1aa034ba257faa6a5c687eada95b30eb10" kindref="member">encode</ref>(<ref refid="namespacesisi4s_1_1cc4s_1a1da828b609f9ec0ad236d1f6afd82db0" kindref="member">Native</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;i)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>Node<sp/>n;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Native::TextFile:<sp/>n<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TextFile&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Native::IeeeBinaryFile:<sp/>n<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IeeeBinaryFile&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="structYAML_1_1convert_3_01ElementFileType_01_4_1adc74ab94f27c6984844400f5507a5c6d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structYAML_1_1convert_3_01ElementFileType_01_4_1adc74ab94f27c6984844400f5507a5c6d" kindref="member">decode</ref>(Node<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;n,<sp/><ref refid="namespacesisi4s_1_1cc4s_1a1da828b609f9ec0ad236d1f6afd82db0" kindref="member">Native</ref><sp/>&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>_n<sp/>=<sp/>n.as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n.IsScalar())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_n<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;TextFile&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Native::TextFile;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_n<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;IeeeBinaryFile&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Native::IeeeBinaryFile;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="168" refid="structYAML_1_1convert_3_01ScalarType_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">convert&lt;<ref refid="namespacesisi4s_1_1cc4s_1ab6b6730bdce9a048b7bbde666053661a" kindref="member">ScalarType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="169" refid="structYAML_1_1convert_3_01ScalarType_01_4_1ada1d7a969229825f215b223ebdf47e02" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s_1_1cc4s_1ab6b6730bdce9a048b7bbde666053661a" kindref="member">Native</ref><sp/>=<sp/><ref refid="namespacesisi4s_1_1cc4s_1ab6b6730bdce9a048b7bbde666053661a" kindref="member">ScalarType</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="structYAML_1_1convert_3_01ScalarType_01_4_1a3484728410bc675d31dc5aac9c0e148f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Node<sp/><ref refid="structYAML_1_1convert_3_01ScalarType_01_4_1a3484728410bc675d31dc5aac9c0e148f" kindref="member">encode</ref>(<ref refid="namespacesisi4s_1_1cc4s_1ab6b6730bdce9a048b7bbde666053661a" kindref="member">Native</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;i)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>Node<sp/>n;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Native::Real64:<sp/>n<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Real64&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Native::Complex64:<sp/>n<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Complex64&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="structYAML_1_1convert_3_01ScalarType_01_4_1accbfd603885a3be7e391b0fcbc0f9bd9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structYAML_1_1convert_3_01ScalarType_01_4_1accbfd603885a3be7e391b0fcbc0f9bd9" kindref="member">decode</ref>(Node<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;n,<sp/><ref refid="namespacesisi4s_1_1cc4s_1ab6b6730bdce9a048b7bbde666053661a" kindref="member">Native</ref><sp/>&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>_n<sp/>=<sp/>n.as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n.IsScalar())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_n<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Real64&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Native::Real64;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_n<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Complex64&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Native::Complex64;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="195" refid="structYAML_1_1convert_3_01ReadHeader_1_1Version_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">convert&lt;<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader" kindref="compound">ReadHeader</ref>::Version&gt;<sp/>{</highlight></codeline>
<codeline lineno="196" refid="structYAML_1_1convert_3_01ReadHeader_1_1Version_01_4_1acef47fc0b44259ed09dd3df2b8b26d55" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a48a173ea59608c2b265d28807826d1a4" kindref="member">Native</ref><sp/>=<sp/><ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a48a173ea59608c2b265d28807826d1a4" kindref="member">ReadHeader::Version</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="structYAML_1_1convert_3_01ReadHeader_1_1Version_01_4_1a423ae45a6a4bea6968fc4c42a3be2880" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Node<sp/><ref refid="structYAML_1_1convert_3_01ReadHeader_1_1Version_01_4_1a423ae45a6a4bea6968fc4c42a3be2880" kindref="member">encode</ref>(<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a48a173ea59608c2b265d28807826d1a4" kindref="member">Native</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;i)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>Node<sp/>n;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Native::ONE:<sp/>n<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;100&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="structYAML_1_1convert_3_01ReadHeader_1_1Version_01_4_1a1b33ea1f82bc6f27e644505f43d6b1d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structYAML_1_1convert_3_01ReadHeader_1_1Version_01_4_1a1b33ea1f82bc6f27e644505f43d6b1d9" kindref="member">decode</ref>(Node<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;n,<sp/><ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a48a173ea59608c2b265d28807826d1a4" kindref="member">Native</ref><sp/>&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n.IsScalar())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>_n<sp/>=<sp/>n.as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_n<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;100&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Native::ONE;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="218" refid="structYAML_1_1convert_3_01ReadableType_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">convert&lt;<ref refid="namespacesisi4s_1_1cc4s_1a93c7cf841934e3cf31073a3c0b48dc25" kindref="member">ReadableType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="219" refid="structYAML_1_1convert_3_01ReadableType_01_4_1a7c7d1270fbf4b5c2d3798df9d3e3753c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s_1_1cc4s_1a93c7cf841934e3cf31073a3c0b48dc25" kindref="member">Native</ref><sp/>=<sp/><ref refid="namespacesisi4s_1_1cc4s_1a93c7cf841934e3cf31073a3c0b48dc25" kindref="member">ReadableType</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="structYAML_1_1convert_3_01ReadableType_01_4_1a8fd3c1f04b1489a8d1678b06318b0487" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Node<sp/><ref refid="structYAML_1_1convert_3_01ReadableType_01_4_1a8fd3c1f04b1489a8d1678b06318b0487" kindref="member">encode</ref>(<ref refid="namespacesisi4s_1_1cc4s_1a93c7cf841934e3cf31073a3c0b48dc25" kindref="member">Native</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;i)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>Node<sp/>n;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Native::Tensor:<sp/>n<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Tensor&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="structYAML_1_1convert_3_01ReadableType_01_4_1a9db282ccbd3748075b8bb381b5163004" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structYAML_1_1convert_3_01ReadableType_01_4_1a9db282ccbd3748075b8bb381b5163004" kindref="member">decode</ref>(Node<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;n,<sp/><ref refid="namespacesisi4s_1_1cc4s_1a93c7cf841934e3cf31073a3c0b48dc25" kindref="member">Native</ref><sp/>&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n.IsScalar())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>_n<sp/>=<sp/>n.as&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_n<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Tensor&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Native::Tensor;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="241" refid="structYAML_1_1convert_3_01Dimension_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">convert&lt;<ref refid="structsisi4s_1_1cc4s_1_1Dimension" kindref="compound">Dimension</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="242" refid="structYAML_1_1convert_3_01Dimension_01_4_1a1585ed9703448be30fe03113382b5fed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structsisi4s_1_1cc4s_1_1Dimension" kindref="compound">Native</ref><sp/>=<sp/><ref refid="structsisi4s_1_1cc4s_1_1Dimension" kindref="compound">Dimension</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="structYAML_1_1convert_3_01Dimension_01_4_1acaa8c674dc4eb97a3f0ee769b1f567da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Node<sp/><ref refid="structYAML_1_1convert_3_01Dimension_01_4_1acaa8c674dc4eb97a3f0ee769b1f567da" kindref="member">encode</ref>(<ref refid="structsisi4s_1_1cc4s_1_1Dimension" kindref="compound">Native</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;i)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>Node<sp/>n;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>n[</highlight><highlight class="stringliteral">&quot;length&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i.<ref refid="structsisi4s_1_1cc4s_1_1Dimension_1a9fb1a5b582c1832bc419a08da90b6acc" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>n[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i.<ref refid="structsisi4s_1_1cc4s_1_1Dimension_1ad20e38c97de4d7787eee2126a49ff772" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="structYAML_1_1convert_3_01Dimension_01_4_1a336578374914c51f88d9b7e130ff385e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structYAML_1_1convert_3_01Dimension_01_4_1a336578374914c51f88d9b7e130ff385e" kindref="member">decode</ref>(Node<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;n,<sp/><ref refid="structsisi4s_1_1cc4s_1_1Dimension" kindref="compound">Native</ref><sp/>&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n.IsMap())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Yaml_8hpp_1a66e1e497cc8588531a4f031cce653a72" kindref="member">YAML_ASSERT_KEY</ref>(n,<sp/></highlight><highlight class="stringliteral">&quot;length&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Yaml_8hpp_1a66e1e497cc8588531a4f031cce653a72" kindref="member">YAML_ASSERT_KEY</ref>(n,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="structsisi4s_1_1cc4s_1_1Dimension_1a9fb1a5b582c1832bc419a08da90b6acc" kindref="member">length</ref><sp/>=<sp/>n[</highlight><highlight class="stringliteral">&quot;length&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="structsisi4s_1_1cc4s_1_1Dimension_1ad20e38c97de4d7787eee2126a49ff772" kindref="member">type</ref><sp/>=<sp/>n[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">].as&lt;<ref refid="namespacesisi4s_1_1cc4s_1a028d5cfff531667dd55ed6706d32d9d4" kindref="member">AxisType</ref>&gt;();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="262" refid="structYAML_1_1convert_3_01ReadHeader_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">convert&lt;<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader" kindref="compound">ReadHeader</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="263" refid="structYAML_1_1convert_3_01ReadHeader_01_4_1a59e72acfbab34ec4631c44818c197fab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structsisi4s_1_1cc4s_1_1ReadHeader" kindref="compound">Native</ref><sp/>=<sp/><ref refid="structsisi4s_1_1cc4s_1_1ReadHeader" kindref="compound">ReadHeader</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="structYAML_1_1convert_3_01ReadHeader_01_4_1aed7e23e07a321ef15399ef1c81de605a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Node<sp/><ref refid="structYAML_1_1convert_3_01ReadHeader_01_4_1aed7e23e07a321ef15399ef1c81de605a" kindref="member">encode</ref>(<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader" kindref="compound">Native</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;i)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>Node<sp/>n;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>n[</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1ac5fda398bef9fcd391539de73980af5d" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>n[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a89ceb9968730bacd0a8f142713608c00" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>n[</highlight><highlight class="stringliteral">&quot;dimensions&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a5da1bd4ad16a0d18c4f21ff6030824f0" kindref="member">dimensions</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>n[</highlight><highlight class="stringliteral">&quot;scalarType&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a45911879a5a64a593155f232bb4c4b0f" kindref="member">scalarType</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>n[</highlight><highlight class="stringliteral">&quot;elements&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a3f8d6f98fad22d55aa26dd7186af515a" kindref="member">elementsType</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>n[</highlight><highlight class="stringliteral">&quot;unit&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a9c592ab62c966586bc8a26739c59b2a5" kindref="member">unit</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="structYAML_1_1convert_3_01ReadHeader_01_4_1a623d140f3a65d39c01dc6cf13397af31" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structYAML_1_1convert_3_01ReadHeader_01_4_1a623d140f3a65d39c01dc6cf13397af31" kindref="member">decode</ref>(Node<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;n,<sp/><ref refid="structsisi4s_1_1cc4s_1_1ReadHeader" kindref="compound">Native</ref><sp/>&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n.IsMap())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Yaml_8hpp_1a66e1e497cc8588531a4f031cce653a72" kindref="member">YAML_ASSERT_KEY</ref>(n,<sp/></highlight><highlight class="stringliteral">&quot;dimensions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Yaml_8hpp_1a66e1e497cc8588531a4f031cce653a72" kindref="member">YAML_ASSERT_KEY</ref>(n,<sp/></highlight><highlight class="stringliteral">&quot;elements&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Yaml_8hpp_1a66e1e497cc8588531a4f031cce653a72" kindref="member">YAML_ASSERT_KEY</ref>(n,<sp/></highlight><highlight class="stringliteral">&quot;scalarType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Yaml_8hpp_1a66e1e497cc8588531a4f031cce653a72" kindref="member">YAML_ASSERT_KEY</ref>(n,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Yaml_8hpp_1a66e1e497cc8588531a4f031cce653a72" kindref="member">YAML_ASSERT_KEY</ref>(n,<sp/></highlight><highlight class="stringliteral">&quot;unit&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Yaml_8hpp_1a66e1e497cc8588531a4f031cce653a72" kindref="member">YAML_ASSERT_KEY</ref>(n,<sp/></highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1ac5fda398bef9fcd391539de73980af5d" kindref="member">version</ref><sp/>=<sp/>n[</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">].as&lt;<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a48a173ea59608c2b265d28807826d1a4" kindref="member">ReadHeader::Version</ref>&gt;();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a89ceb9968730bacd0a8f142713608c00" kindref="member">type</ref><sp/>=<sp/>n[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">].as&lt;<ref refid="namespacesisi4s_1_1cc4s_1a93c7cf841934e3cf31073a3c0b48dc25" kindref="member">ReadableType</ref>&gt;();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a5da1bd4ad16a0d18c4f21ff6030824f0" kindref="member">dimensions</ref><sp/>=<sp/>n[</highlight><highlight class="stringliteral">&quot;dimensions&quot;</highlight><highlight class="normal">].as&lt;<ref refid="namespacesisi4s_1_1cc4s_1aa171a853df886e0b81bb940dd84395e6" kindref="member">Dimensions</ref>&gt;();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a45911879a5a64a593155f232bb4c4b0f" kindref="member">scalarType</ref><sp/>=<sp/>n[</highlight><highlight class="stringliteral">&quot;scalarType&quot;</highlight><highlight class="normal">].as&lt;<ref refid="namespacesisi4s_1_1cc4s_1ab6b6730bdce9a048b7bbde666053661a" kindref="member">ScalarType</ref>&gt;();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a3f8d6f98fad22d55aa26dd7186af515a" kindref="member">elementsType</ref><sp/>=<sp/>n[</highlight><highlight class="stringliteral">&quot;elements&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">].as&lt;<ref refid="namespacesisi4s_1_1cc4s_1a1da828b609f9ec0ad236d1f6afd82db0" kindref="member">ElementFileType</ref>&gt;();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="structsisi4s_1_1cc4s_1_1ReadHeader_1a9c592ab62c966586bc8a26739c59b2a5" kindref="member">unit</ref><sp/>=<sp/>n[</highlight><highlight class="stringliteral">&quot;unit&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="292"><highlight class="normal">};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>YAML</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/sisi4s/sisi4s/src/algorithms/Read.cxx"/>
  </compounddef>
</doxygen>
