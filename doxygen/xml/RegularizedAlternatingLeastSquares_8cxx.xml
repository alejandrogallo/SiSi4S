<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="RegularizedAlternatingLeastSquares_8cxx" kind="file" language="C++">
    <compoundname>RegularizedAlternatingLeastSquares.cxx</compoundname>
    <includes refid="RegularizedAlternatingLeastSquares_8hpp" local="no">math/RegularizedAlternatingLeastSquares.hpp</includes>
    <includes refid="CanonicalPolyadicDecomposition_8hpp" local="no">math/CanonicalPolyadicDecomposition.hpp</includes>
    <includes refid="MathFunctions_8hpp" local="no">math/MathFunctions.hpp</includes>
    <includes refid="PseudoInverseSvd_8hpp" local="no">math/PseudoInverseSvd.hpp</includes>
    <includes refid="DryTensor_8hpp" local="no">DryTensor.hpp</includes>
    <includes refid="Exception_8hpp" local="no">util/Exception.hpp</includes>
    <includes refid="Log_8hpp" local="no">util/Log.hpp</includes>
    <incdepgraph>
      <node id="7">
        <label>DryTensor.hpp</label>
        <link refid="DryTensor_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>math/CanonicalPolyadicDecomposition.hpp</label>
        <link refid="CanonicalPolyadicDecomposition_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>math/Complex.hpp</label>
        <link refid="Complex_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>math/Float.hpp</label>
        <link refid="Float_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>math/MathFunctions.hpp</label>
        <link refid="MathFunctions_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>math/PseudoInverseSvd.hpp</label>
        <link refid="PseudoInverseSvd_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>RegularizedAlternatingLeastSquares.cxx</label>
        <link refid="RegularizedAlternatingLeastSquares_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>math/RegularizedAlternatingLeastSquares.hpp</label>
        <link refid="RegularizedAlternatingLeastSquares_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>util/CTF.hpp</label>
        <link refid="CTF_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>util/Exception.hpp</label>
        <link refid="Exception_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>util/Log.hpp</label>
        <link refid="Log_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>util/SourceLocation.hpp</label>
        <link refid="SourceLocation_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>util/Time.hpp</label>
        <link refid="Time_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>complex</label>
      </node>
      <node id="14">
        <label>cstdint</label>
      </node>
      <node id="22">
        <label>ctf.hpp</label>
      </node>
      <node id="13">
        <label>ctime</label>
      </node>
      <node id="19">
        <label>fstream</label>
      </node>
      <node id="15">
        <label>iomanip</label>
      </node>
      <node id="17">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>ostream</label>
      </node>
      <node id="26">
        <label>random</label>
      </node>
      <node id="10">
        <label>sstream</label>
      </node>
      <node id="18">
        <label>streambuf</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="20">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*Copyright<sp/>(c)<sp/>2015,<sp/>Andreas<sp/>Grueneis<sp/>and<sp/>Felix<sp/>Hummel,<sp/>all<sp/>rights<sp/>reserved.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="RegularizedAlternatingLeastSquares_8hpp" kindref="compound">math/RegularizedAlternatingLeastSquares.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="CanonicalPolyadicDecomposition_8hpp" kindref="compound">math/CanonicalPolyadicDecomposition.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="MathFunctions_8hpp" kindref="compound">math/MathFunctions.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="PseudoInverseSvd_8hpp" kindref="compound">math/PseudoInverseSvd.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="DryTensor_8hpp" kindref="compound">DryTensor.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Exception_8hpp" kindref="compound">util/Exception.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Log_8hpp" kindref="compound">util/Log.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">CTF;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s" kindref="compound">sisi4s</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1ac2bf3b584b1380ce33fc334c17610fed" kindref="member">sisi4s::fitAlternatingLeastSquaresFactor</ref>(</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>&amp;T,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*indicesT,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>&amp;B,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxB,<sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>&amp;C,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxC,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>&amp;A,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxA</highlight></codeline>
<codeline lineno="19"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>conjB(B);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>conjC(C);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>Univar_Function&lt;F&gt;<sp/>fConj(&amp;conj&lt;F&gt;);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>conjB.sum(1.0,<sp/>B,</highlight><highlight class="stringliteral">&quot;jR&quot;</highlight><highlight class="normal">,<sp/>0.0,</highlight><highlight class="stringliteral">&quot;jR&quot;</highlight><highlight class="normal">,<sp/>fConj);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>conjC.sum(1.0,<sp/>C,</highlight><highlight class="stringliteral">&quot;kR&quot;</highlight><highlight class="normal">,<sp/>0.0,</highlight><highlight class="stringliteral">&quot;kR&quot;</highlight><highlight class="normal">,<sp/>fConj);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>Matrix&lt;F&gt;<sp/>BB(B.lens[1],<sp/>B.lens[1],<sp/>NS,<sp/>*T.wrld,<sp/></highlight><highlight class="stringliteral">&quot;BBRS&quot;</highlight><highlight class="normal">,<sp/>T.profile);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>Matrix&lt;F&gt;<sp/>gramian(B.lens[1],<sp/>B.lens[1],<sp/>NS,<sp/>*T.wrld,</highlight><highlight class="stringliteral">&quot;GRS&quot;</highlight><highlight class="normal">,<sp/>T.profile);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;ALS&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;building<sp/>Gramian...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>BB[</highlight><highlight class="stringliteral">&quot;SR&quot;</highlight><highlight class="normal">]<sp/>=<sp/>B[</highlight><highlight class="stringliteral">&quot;jR&quot;</highlight><highlight class="normal">]<sp/>*<sp/>conjB[</highlight><highlight class="stringliteral">&quot;jS&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>gramian[</highlight><highlight class="stringliteral">&quot;SR&quot;</highlight><highlight class="normal">]<sp/>=<sp/>C[</highlight><highlight class="stringliteral">&quot;kR&quot;</highlight><highlight class="normal">]<sp/>*<sp/>conjC[</highlight><highlight class="stringliteral">&quot;kS&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>gramian[</highlight><highlight class="stringliteral">&quot;SR&quot;</highlight><highlight class="normal">]<sp/>*=<sp/>BB[</highlight><highlight class="stringliteral">&quot;SR&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;ALS&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;inverting<sp/>Gramian...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1PseudoInverseSvd" kindref="compound">PseudoInverseSvd&lt;F&gt;</ref><sp/>gramianInverse(gramian);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="namespacesisi4s_1a21fb3aa5ddffa42109990b275c1508c4" kindref="member">contractWithCanonicalPolyadicDecompositionTensors</ref>(</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>T,<sp/>indicesT,<sp/>conjB,<sp/>idxB,<sp/>conjC,<sp/>idxC,<sp/>A,<sp/>idxA</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;ALS&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;applying<sp/>inverse<sp/>of<sp/>Gramian...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Tensor&lt;F&gt;<sp/>conjInvGramian(gramianInverse.get());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>conjInvGramian.sum(1.0,<sp/>conjInvGramian,&quot;SR&quot;,<sp/>0.0,&quot;SR&quot;,<sp/>fConj);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>A[&quot;iR&quot;]<sp/>=<sp/>A[&quot;iS&quot;]<sp/>*<sp/>conjInvGramian[&quot;SR&quot;];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>A[</highlight><highlight class="stringliteral">&quot;iR&quot;</highlight><highlight class="normal">]<sp/>=<sp/>A[</highlight><highlight class="stringliteral">&quot;iS&quot;</highlight><highlight class="normal">]<sp/>*<sp/>gramianInverse.get()[</highlight><highlight class="stringliteral">&quot;RS&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instantiate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1ac2bf3b584b1380ce33fc334c17610fed" kindref="member">sisi4s::fitAlternatingLeastSquaresFactor</ref>(</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;double&gt;</ref><sp/>&amp;T,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*indicesT,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;double&gt;</ref><sp/>&amp;B,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxB,<sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;double&gt;</ref><sp/>&amp;C,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxC,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;double&gt;</ref><sp/>&amp;A,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxA</highlight></codeline>
<codeline lineno="51"><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1ac2bf3b584b1380ce33fc334c17610fed" kindref="member">sisi4s::fitAlternatingLeastSquaresFactor</ref>(</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>&amp;T,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*indicesT,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>&amp;B,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxB,<sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>&amp;C,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxC,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>&amp;A,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxA</highlight></codeline>
<codeline lineno="57"><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1abf3c4be1dfed55e71db97d40eff3ce87" kindref="member">sisi4s::fitRegularizedAlternatingLeastSquaresFactor</ref>(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>&amp;T,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*indicesT,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>&amp;B,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxB,<sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>&amp;C,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxC,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>&amp;A,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxA,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1AlternatingLeastSquaresRegularizationEstimator" kindref="compound">AlternatingLeastSquaresRegularizationEstimator</ref><sp/>*regularizationEstimatorA</highlight></codeline>
<codeline lineno="66"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda(regularizationEstimatorA-&gt;<ref refid="classsisi4s_1_1AlternatingLeastSquaresRegularizationEstimator_1a4de4c9986a0c2c2fa70c8a0f43f1c81d" kindref="member">getLambda</ref>());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>conjB(B);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>conjC(C);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>Univar_Function&lt;F&gt;<sp/>fConj(&amp;conj&lt;F&gt;);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>conjB.sum(1.0,<sp/>B,</highlight><highlight class="stringliteral">&quot;jR&quot;</highlight><highlight class="normal">,<sp/>0.0,</highlight><highlight class="stringliteral">&quot;jR&quot;</highlight><highlight class="normal">,<sp/>fConj);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>conjC.sum(1.0,<sp/>C,</highlight><highlight class="stringliteral">&quot;kR&quot;</highlight><highlight class="normal">,<sp/>0.0,</highlight><highlight class="stringliteral">&quot;kR&quot;</highlight><highlight class="normal">,<sp/>fConj);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>Matrix&lt;F&gt;<sp/>BB(B.lens[1],<sp/>B.lens[1],<sp/>NS,<sp/>*T.wrld,<sp/></highlight><highlight class="stringliteral">&quot;BBRS&quot;</highlight><highlight class="normal">,<sp/>T.profile);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>Matrix&lt;F&gt;<sp/>gramian(B.lens[1],<sp/>B.lens[1],<sp/>NS,<sp/>*T.wrld,</highlight><highlight class="stringliteral">&quot;GRS&quot;</highlight><highlight class="normal">,<sp/>T.profile);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;RALS&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;building<sp/>Gramian...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>BB[</highlight><highlight class="stringliteral">&quot;SR&quot;</highlight><highlight class="normal">]<sp/>=<sp/>B[</highlight><highlight class="stringliteral">&quot;jR&quot;</highlight><highlight class="normal">]<sp/>*<sp/>conjB[</highlight><highlight class="stringliteral">&quot;jS&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>gramian[</highlight><highlight class="stringliteral">&quot;SR&quot;</highlight><highlight class="normal">]<sp/>=<sp/>C[</highlight><highlight class="stringliteral">&quot;kR&quot;</highlight><highlight class="normal">]<sp/>*<sp/>conjC[</highlight><highlight class="stringliteral">&quot;kS&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>gramian[</highlight><highlight class="stringliteral">&quot;SR&quot;</highlight><highlight class="normal">]<sp/>*=<sp/>BB[</highlight><highlight class="stringliteral">&quot;SR&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>gramian[</highlight><highlight class="stringliteral">&quot;RR&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>lambda;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;RALS&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;inverting<sp/>Gramian...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1PseudoInverseSvd" kindref="compound">PseudoInverseSvd&lt;F&gt;</ref><sp/>gramianInverse(gramian);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;F&gt;</ref><sp/>previousA(A);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="namespacesisi4s_1a21fb3aa5ddffa42109990b275c1508c4" kindref="member">contractWithCanonicalPolyadicDecompositionTensors</ref>(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>T,<sp/>indicesT,<sp/>conjB,<sp/>idxB,<sp/>conjC,<sp/>idxC,<sp/>A,<sp/>idxA</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>A[</highlight><highlight class="stringliteral">&quot;iR&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>lambda<sp/>*<sp/>previousA[</highlight><highlight class="stringliteral">&quot;iR&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;RALS&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;applying<sp/>inverse<sp/>of<sp/>Gramian...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Tensor&lt;F&gt;<sp/>conjInvGramian(gramianInverse.get());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>conjInvGramian.sum(1.0,<sp/>conjInvGramian,&quot;SR&quot;,<sp/>0.0,&quot;SR&quot;,<sp/>fConj);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>A[&quot;iR&quot;]<sp/>=<sp/>A[&quot;iS&quot;]<sp/>*<sp/>conjInvGramian[&quot;SR&quot;];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>A[</highlight><highlight class="stringliteral">&quot;iR&quot;</highlight><highlight class="normal">]<sp/>=<sp/>A[</highlight><highlight class="stringliteral">&quot;iS&quot;</highlight><highlight class="normal">]<sp/>*<sp/>gramianInverse.get()[</highlight><highlight class="stringliteral">&quot;RS&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>previousA[</highlight><highlight class="stringliteral">&quot;iR&quot;</highlight><highlight class="normal">]<sp/>-=<sp/>A[</highlight><highlight class="stringliteral">&quot;iR&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normDifference(<ref refid="namespacesisi4s_1a072b9097a4466552d4ee05cea48af554" kindref="member">frobeniusNorm</ref>(previousA));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm(<ref refid="namespacesisi4s_1a072b9097a4466552d4ee05cea48af554" kindref="member">frobeniusNorm</ref>(A));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>swampingFactor(</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>normDifference<sp/>/<sp/>norm<sp/>/<sp/>regularizationEstimatorA-&gt;<ref refid="classsisi4s_1_1AlternatingLeastSquaresRegularizationEstimator_1ae14a008ede1f4ed000518ed1035550ce" kindref="member">getSwampingThreshold</ref>()</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;RALS&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;lambda=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lambda<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s/s_0=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>swampingFactor</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>regularizationEstimatorA-&gt;<ref refid="classsisi4s_1_1AlternatingLeastSquaresRegularizationEstimator_1a503f0a701b0bdef3377c47bb5dae6456" kindref="member">update</ref>(swampingFactor);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instantiate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1abf3c4be1dfed55e71db97d40eff3ce87" kindref="member">sisi4s::fitRegularizedAlternatingLeastSquaresFactor</ref>(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;double&gt;</ref><sp/>&amp;T,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*indicesT,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;double&gt;</ref><sp/>&amp;B,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxB,<sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;double&gt;</ref><sp/>&amp;C,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxC,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;double&gt;</ref><sp/>&amp;A,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxA,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1AlternatingLeastSquaresRegularizationEstimator" kindref="compound">AlternatingLeastSquaresRegularizationEstimator</ref><sp/>*regularizationEstimatorA</highlight></codeline>
<codeline lineno="112"><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1abf3c4be1dfed55e71db97d40eff3ce87" kindref="member">sisi4s::fitRegularizedAlternatingLeastSquaresFactor</ref>(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>&amp;T,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*indicesT,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>&amp;B,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxB,<sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>&amp;C,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxC,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="TensorReader_8cxx_1ae0ef01a698fe007ed1bf52d22e8e483f" kindref="member">Tensor&lt;complex&gt;</ref><sp/>&amp;A,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxA,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1AlternatingLeastSquaresRegularizationEstimator" kindref="compound">AlternatingLeastSquaresRegularizationEstimator</ref><sp/>*regularizationEstimatorA</highlight></codeline>
<codeline lineno="119"><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="123" refid="namespacesisi4s_1a7e043fcaaf8e99a86eb9920cf43cc228" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a7e043fcaaf8e99a86eb9920cf43cc228" kindref="member">sisi4s::dryFitRegularizedAlternatingLeastSquaresFactor</ref>(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;F&gt;</ref><sp/>&amp;T,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*indicesT,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;F&gt;</ref><sp/>&amp;B,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxB,<sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;F&gt;</ref><sp/>&amp;C,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxC,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;F&gt;</ref><sp/>&amp;A,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxA</highlight></codeline>
<codeline lineno="127"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;F&gt;</ref><sp/>conjB(B);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;F&gt;</ref><sp/>conjC(C);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryMatrix" kindref="compound">DryMatrix&lt;F&gt;</ref><sp/>BB(B.<ref refid="classsisi4s_1_1DryTensor_1a6f3b537c168473549d60e5af723a4751" kindref="member">lens</ref>[1],<sp/>B.<ref refid="classsisi4s_1_1DryTensor_1a6f3b537c168473549d60e5af723a4751" kindref="member">lens</ref>[1],<sp/>NS);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryMatrix" kindref="compound">DryMatrix&lt;F&gt;</ref><sp/>gramian(B.<ref refid="classsisi4s_1_1DryTensor_1a6f3b537c168473549d60e5af723a4751" kindref="member">lens</ref>[1],<sp/>B.<ref refid="classsisi4s_1_1DryTensor_1a6f3b537c168473549d60e5af723a4751" kindref="member">lens</ref>[1],<sp/>NS);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;RALS&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;building<sp/>Gramian...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;RALS&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;inverting<sp/>Gramian...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryPseudoInverseSvd" kindref="compound">DryPseudoInverseSvd&lt;F&gt;</ref><sp/>gramianInverse(gramian);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;F&gt;</ref><sp/>previousA(A);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="namespacesisi4s_1a3c57f2c3b6b413ec8c8cbac80a1bbaca" kindref="member">dryContractWithCanonicalPolyadicDecompositionTensors</ref>(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>T,<sp/>indicesT,<sp/>conjB,<sp/>idxB,<sp/>conjC,<sp/>idxC,<sp/>A,<sp/>idxA</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;RALS&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;applying<sp/>inverse<sp/>of<sp/>Gramian...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;F&gt;</ref><sp/>conjInvGramian(gramianInverse.<ref refid="classsisi4s_1_1DryPseudoInverseSvd_1afe11a03ae59bab6dc745c070a6cc9569" kindref="member">get</ref>());</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instantiate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a7e043fcaaf8e99a86eb9920cf43cc228" kindref="member">sisi4s::dryFitRegularizedAlternatingLeastSquaresFactor</ref>(</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;double&gt;</ref><sp/>&amp;T,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*indicesT,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;double&gt;</ref><sp/>&amp;B,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxB,<sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;double&gt;</ref><sp/>&amp;C,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxC,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;double&gt;</ref><sp/>&amp;A,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxA</highlight></codeline>
<codeline lineno="151"><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a7e043fcaaf8e99a86eb9920cf43cc228" kindref="member">sisi4s::dryFitRegularizedAlternatingLeastSquaresFactor</ref>(</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;complex&gt;</ref><sp/>&amp;T,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*indicesT,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;complex&gt;</ref><sp/>&amp;B,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxB,<sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;complex&gt;</ref><sp/>&amp;C,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxC,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor&lt;complex&gt;</ref><sp/>&amp;A,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idxA</highlight></codeline>
<codeline lineno="157"><highlight class="normal">);</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/SiSi4S/SiSi4S/src/math/RegularizedAlternatingLeastSquares.cxx"/>
  </compounddef>
</doxygen>
