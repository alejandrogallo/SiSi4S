<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="UccsdAmplitudesFromCoulombIntegrals_8cxx" kind="file" language="C++">
    <compoundname>UccsdAmplitudesFromCoulombIntegrals.cxx</compoundname>
    <includes refid="UccsdAmplitudesFromCoulombIntegrals_8hpp" local="no">algorithms/UccsdAmplitudesFromCoulombIntegrals.hpp</includes>
    <includes refid="SimilarityTransformedHamiltonian_8hpp" local="no">algorithms/SimilarityTransformedHamiltonian.hpp</includes>
    <includes local="no">unistd.h</includes>
    <includes refid="MathFunctions_8hpp" local="no">math/MathFunctions.hpp</includes>
    <includes refid="ComplexTensor_8hpp" local="no">math/ComplexTensor.hpp</includes>
    <includes refid="RandomTensor_8hpp" local="no">math/RandomTensor.hpp</includes>
    <includes refid="Log_8hpp" local="no">util/Log.hpp</includes>
    <includes refid="Exception_8hpp" local="no">util/Exception.hpp</includes>
    <includes refid="RangeParser_8hpp" local="no">util/RangeParser.hpp</includes>
    <includes refid="Tensor_8hpp" local="no">util/Tensor.hpp</includes>
    <includes refid="Sisi4s_8hpp" local="no">Sisi4s.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>Data.hpp</label>
        <link refid="Data_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>DryTensor.hpp</label>
        <link refid="DryTensor_8hpp"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>Options.hpp</label>
        <link refid="Options_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Sisi4s.hpp</label>
        <link refid="Sisi4s_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>algorithms/Algorithm.hpp</label>
        <link refid="Algorithm_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>algorithms/ClusterSinglesDoublesAlgorithm.hpp</label>
        <link refid="ClusterSinglesDoublesAlgorithm_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>algorithms/SimilarityTransformedHamiltonian.hpp</label>
        <link refid="SimilarityTransformedHamiltonian_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>algorithms/StantonIntermediatesUCCSD.hpp</label>
        <link refid="StantonIntermediatesUCCSD_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>UccsdAmplitudesFromCoulombIntegrals.cxx</label>
        <link refid="UccsdAmplitudesFromCoulombIntegrals_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithms/UccsdAmplitudesFromCoulombIntegrals.hpp</label>
        <link refid="UccsdAmplitudesFromCoulombIntegrals_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>extern/CLI11.hpp</label>
        <link refid="CLI11_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>math/Complex.hpp</label>
        <link refid="Complex_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>math/ComplexTensor.hpp</label>
        <link refid="ComplexTensor_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>math/Float.hpp</label>
        <link refid="Float_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>math/FockVector.hpp</label>
        <link refid="FockVector_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>math/MathFunctions.hpp</label>
        <link refid="MathFunctions_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>math/RandomTensor.hpp</label>
        <link refid="RandomTensor_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>util/CTF.hpp</label>
        <link refid="CTF_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>util/Documentation.hpp</label>
        <link refid="Documentation_8hpp"/>
      </node>
      <node id="26">
        <label>util/Exception.hpp</label>
        <link refid="Exception_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>util/Log.hpp</label>
        <link refid="Log_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>util/RangeParser.hpp</label>
        <link refid="RangeParser_8hpp"/>
      </node>
      <node id="30">
        <label>util/SharedPointer.hpp</label>
        <link refid="SharedPointer_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>util/SourceLocation.hpp</label>
        <link refid="SourceLocation_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>util/Tensor.hpp</label>
        <link refid="Tensor_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>util/Time.hpp</label>
        <link refid="Time_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>algorithm</label>
      </node>
      <node id="13">
        <label>cmath</label>
      </node>
      <node id="20">
        <label>complex</label>
      </node>
      <node id="9">
        <label>cstdint</label>
      </node>
      <node id="25">
        <label>ctf.hpp</label>
      </node>
      <node id="8">
        <label>ctime</label>
      </node>
      <node id="47">
        <label>exception</label>
      </node>
      <node id="17">
        <label>fstream</label>
      </node>
      <node id="36">
        <label>functional</label>
      </node>
      <node id="11">
        <label>iomanip</label>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="44">
        <label>iterator</label>
      </node>
      <node id="46">
        <label>limits</label>
      </node>
      <node id="40">
        <label>locale</label>
      </node>
      <node id="21">
        <label>map</label>
      </node>
      <node id="31">
        <label>memory</label>
      </node>
      <node id="37">
        <label>numeric</label>
      </node>
      <node id="10">
        <label>ostream</label>
      </node>
      <node id="56">
        <label>random</label>
      </node>
      <node id="42">
        <label>set</label>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="45">
        <label>stdexcept</label>
      </node>
      <node id="16">
        <label>streambuf</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="48">
        <label>sys/stat.h</label>
      </node>
      <node id="49">
        <label>sys/types.h</label>
      </node>
      <node id="38">
        <label>tuple</label>
      </node>
      <node id="43">
        <label>type_traits</label>
      </node>
      <node id="54">
        <label>unistd.h</label>
      </node>
      <node id="39">
        <label>utility</label>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="UccsdAmplitudesFromCoulombIntegrals_8hpp" kindref="compound">algorithms/UccsdAmplitudesFromCoulombIntegrals.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="SimilarityTransformedHamiltonian_8hpp" kindref="compound">algorithms/SimilarityTransformedHamiltonian.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="MathFunctions_8hpp" kindref="compound">math/MathFunctions.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ComplexTensor_8hpp" kindref="compound">math/ComplexTensor.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="RandomTensor_8hpp" kindref="compound">math/RandomTensor.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Log_8hpp" kindref="compound">util/Log.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Exception_8hpp" kindref="compound">util/Exception.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="RangeParser_8hpp" kindref="compound">util/RangeParser.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Tensor_8hpp" kindref="compound">util/Tensor.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Sisi4s_8hpp" kindref="compound">Sisi4s.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s" kindref="compound">sisi4s</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="Algorithm_8hpp_1a07e9ffa67ed21886a687b27719c949e1" kindref="member">ALGORITHM_REGISTRAR_DEFINITION</ref>(<ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals" kindref="compound">UccsdAmplitudesFromCoulombIntegrals</ref>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1a9e15dee0de9aec5e1f26e378900da207" refkind="member"><highlight class="normal"><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1a9e15dee0de9aec5e1f26e378900da207" kindref="member">UccsdAmplitudesFromCoulombIntegrals::UccsdAmplitudesFromCoulombIntegrals</ref>(</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>std::vector&lt;Argument&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;argumentList</highlight></codeline>
<codeline lineno="19"><highlight class="normal">):<sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm" kindref="compound">ClusterSinglesDoublesAlgorithm</ref>(argumentList)<sp/>{}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1ae84b94b2f0e72c0d3adc5bd74b3ccd82" refkind="member"><highlight class="normal"><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1ae84b94b2f0e72c0d3adc5bd74b3ccd82" kindref="member">UccsdAmplitudesFromCoulombIntegrals::~UccsdAmplitudesFromCoulombIntegrals</ref>()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1a1668977da91bbd8d13f2ac92e6149b11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1a1668977da91bbd8d13f2ac92e6149b11" kindref="member">UccsdAmplitudesFromCoulombIntegrals::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>this<sp/>for<sp/>cluster<sp/>singles<sp/>doubles<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1Algorithm_1ae7d025ea18b3f0b91db42447c0617540" kindref="member">setIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;antisymmetrize&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1Algorithm_1ae7d025ea18b3f0b91db42447c0617540" kindref="member">setIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;unrestricted&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1Algorithm_1a89f4af1584daed17ef628784e7e9c443" kindref="member">checkArgumentsOrDie</ref>(</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;intermediates&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>stanton<sp/>intermediates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;antisymmetrize&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unrestricted&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;mp2WithSingles&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Solver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;mixer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;maxIterations&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;amplitudesConvergence&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;energyConvergence&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;mixingRatio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;maxResidua&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fock<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;HPFockMatrix&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;PPFockMatrix&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;HHFockMatrix&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;HoleEigenEnergies&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;ParticleEigenEnergies&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>integrals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;HHHHCoulombIntegrals&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;PPPPCoulombIntegrals&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;HHHPCoulombIntegrals&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;HHPPCoulombIntegrals&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;HPHHCoulombIntegrals&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;HPHPCoulombIntegrals&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;HPPPCoulombIntegrals&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;PPHHCoulombIntegrals&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;PPHPCoulombIntegrals&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;HPPHCoulombIntegrals&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;PHPPCoulombIntegrals&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;HHPHCoulombIntegrals&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;PPPHCoulombIntegrals&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;PHPHCoulombIntegrals&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;PHHPCoulombIntegrals&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;UccsdDoublesAmplitudes&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;UccsdSinglesAmplitudes&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;UccsdEnergy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;onlyPPL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;initialDoublesAmplitudes&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;initialSinglesAmplitudes&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;PairEnergy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1a5f54ddc5f43c0cc716a44ad2c595936d" kindref="member">usingIntermediates</ref><sp/>=<sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;intermediates&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1a42922f6e000853e2815cbd2c8fa5c82a" kindref="member">onlyPpl</ref><sp/>=<sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;onlyPPL&quot;</highlight><highlight class="normal">,<sp/>0)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1a5f54ddc5f43c0cc716a44ad2c595936d" kindref="member">usingIntermediates</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(0,<sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1ae3921eb9f91c5eb8ef4d9b10a140ae05" kindref="member">getAbbreviation</ref>())</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>using<sp/>Stanton<sp/>et<sp/>al.<sp/>intermediates,<sp/>the<sp/>code<sp/>will<sp/>be<sp/>much<sp/>slower.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(0,<sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1ae3921eb9f91c5eb8ef4d9b10a140ae05" kindref="member">getAbbreviation</ref>())</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;stanton<sp/>intermediates:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1a5f54ddc5f43c0cc716a44ad2c595936d" kindref="member">usingIntermediates</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a4a874bc6491b38c023de6936e298d2f0" kindref="member">ClusterSinglesDoublesAlgorithm::run</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1ab05d29d143fa01c77c655e0d0e878251" refkind="member"><highlight class="normal"><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(<ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;sisi4s::complex&gt;</ref>)<sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1ac69efb64d37389e3ebe7212bd9516d7b" kindref="member">UccsdAmplitudesFromCoulombIntegrals::getResiduum</ref>(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationStep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;complex&gt;</ref>)<sp/>&amp;amplitudes</highlight></codeline>
<codeline lineno="68"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iterationStep<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1ae3921eb9f91c5eb8ef4d9b10a140ae05" kindref="member">getAbbreviation</ref>())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>Using<sp/>complex<sp/>version<sp/>of<sp/>Uccsd&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1ae3921eb9f91c5eb8ef4d9b10a140ae05" kindref="member">getAbbreviation</ref>())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>Complex<sp/>version<sp/>is<sp/>not<sp/>tested.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getResiduumTemplate&lt;complex&gt;(iterationStep,<sp/>amplitudes);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1ac69efb64d37389e3ebe7212bd9516d7b" refkind="member"><highlight class="normal"><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(<ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;double&gt;</ref>)<sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1ac69efb64d37389e3ebe7212bd9516d7b" kindref="member">UccsdAmplitudesFromCoulombIntegrals::getResiduum</ref>(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationStep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;double&gt;</ref>)<sp/>&amp;amplitudes</highlight></codeline>
<codeline lineno="80"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getResiduumTemplate&lt;double&gt;(iterationStep,<sp/>amplitudes);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="85" refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1a10a145b2a213255c27cadb9a1751f520" refkind="member"><highlight class="normal"><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(<ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;F&gt;</ref>)<sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1a10a145b2a213255c27cadb9a1751f520" kindref="member">UccsdAmplitudesFromCoulombIntegrals::getResiduumTemplate</ref>(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationStep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="SharedPointer_8hpp_1a741e091aff51aed5f16b309962085404" kindref="member">PTR</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;F&gt;</ref>)<sp/>&amp;amplitudes</highlight></codeline>
<codeline lineno="87"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor&lt;F&gt;</ref><sp/>*Fab,<sp/>*Fij,<sp/>*Fia;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><sp/><ref refid="classsisi4s_1_1Algorithm_1aec9041b31cb64a42ee1fd79d32774266" kindref="member">isArgumentGiven</ref>(</highlight><highlight class="stringliteral">&quot;HPFockMatrix&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="classsisi4s_1_1Algorithm_1aec9041b31cb64a42ee1fd79d32774266" kindref="member">isArgumentGiven</ref>(</highlight><highlight class="stringliteral">&quot;HHFockMatrix&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="classsisi4s_1_1Algorithm_1aec9041b31cb64a42ee1fd79d32774266" kindref="member">isArgumentGiven</ref>(</highlight><highlight class="stringliteral">&quot;PPFockMatrix&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iterationStep<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(0,<sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1ae3921eb9f91c5eb8ef4d9b10a140ae05" kindref="member">getAbbreviation</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>non-canonical<sp/>orbitals<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;since<sp/>you<sp/>provided<sp/>FockMatrices\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>Fia<sp/>=<sp/>getTensorArgument&lt;F,<sp/>Tensor&lt;F&gt;<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;HPFockMatrix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>Fab<sp/>=<sp/>getTensorArgument&lt;F,<sp/>Tensor&lt;F&gt;<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;PPFockMatrix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>Fij<sp/>=<sp/>getTensorArgument&lt;F,<sp/>Tensor&lt;F&gt;<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;HHFockMatrix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>epsi<sp/>=<sp/>getTensorArgument&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;HoleEigenEnergies&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>epsa<sp/>=<sp/>getTensorArgument&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;ParticleEigenEnergies&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>Fia<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nv(epsa-&gt;lens[0])</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>No(epsi-&gt;lens[0])</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>vv[]<sp/>=<sp/>{Nv,<sp/>Nv}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>oo[]<sp/>=<sp/>{No,<sp/>No}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>syms[]<sp/>=<sp/>{NS,<sp/>NS}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>replace<sp/>with<sp/>unique_ptr<sp/>and<sp/>give<sp/>away<sp/>the<sp/>hamiltonian<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>such<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>Fab<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor&lt;F&gt;</ref>(2,<sp/>vv,<sp/>syms,<sp/>*<ref refid="classsisi4s_1_1Sisi4s_1ace7b506b09fbfac3743da86db91d49ce" kindref="member">Sisi4s::world</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Fab&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Fij<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor&lt;F&gt;</ref>(2,<sp/>oo,<sp/>syms,<sp/>*<ref refid="classsisi4s_1_1Sisi4s_1ace7b506b09fbfac3743da86db91d49ce" kindref="member">Sisi4s::world</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Fij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>CTF::Transform&lt;double,<sp/>F&gt;([](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps,<sp/>F<sp/>&amp;f)<sp/>{<sp/>f<sp/>=<sp/>eps;<sp/>})(<sp/>(*epsi)[</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>(*Fij)[</highlight><highlight class="stringliteral">&quot;ii&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>CTF::Transform&lt;double,<sp/>F&gt;([](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps,<sp/>F<sp/>&amp;f)<sp/>{<sp/>f<sp/>=<sp/>eps;<sp/>})(<sp/>(*epsa)[</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>(*Fab)[</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vabij(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;PPHHCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>amplitudes<sp/>Tai<sp/>and<sp/>Tabij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Tai(amplitudes-&gt;<ref refid="classsisi4s_1_1FockVector_1aebf4e090f20a7bb83c434396b274c89c" kindref="member">get</ref>(0))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Tabij(amplitudes-&gt;<ref refid="classsisi4s_1_1FockVector_1aebf4e090f20a7bb83c434396b274c89c" kindref="member">get</ref>(1))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>residuum(<ref refid="SharedPointer_8hpp_1a106f61c342cfd013eb570c37328070ae" kindref="member">NEW</ref>(<ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector&lt;F&gt;</ref>,<sp/>*amplitudes));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Rai(residuum-&gt;get(0))</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Rabij(residuum-&gt;get(1))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>*residuum<sp/>*=<sp/>0.0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>Rai-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Rai&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>Rabij-&gt;set_name(</highlight><highlight class="stringliteral">&quot;Rabij&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iterationStep<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1a42922f6e000853e2815cbd2c8fa5c82a" kindref="member">onlyPpl</ref>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vabcd(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;PPPPCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;Performing<sp/>only<sp/>Ppl<sp/>contraction&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;cdij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>+<sp/>0.5<sp/><sp/>)<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;efij&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Vabcd)[</highlight><highlight class="stringliteral">&quot;cdef&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;cdij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>+<sp/>1.0<sp/><sp/>)<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;ei&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;fj&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Vabcd)[</highlight><highlight class="stringliteral">&quot;cdef&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>residuum;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" kindref="member">LOG</ref>(1,<sp/><ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1ae3921eb9f91c5eb8ef4d9b10a140ae05" kindref="member">getAbbreviation</ref>())</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>initial<sp/>Rabij<sp/>amplitudes<sp/>to<sp/>Vijab&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/>=<sp/>(*Vabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>residuum;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>couloumb<sp/>integrals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vijkl(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;HHHHCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Vabcd(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;PPPPCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Vijka(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;HHHPCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Viajk(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;HPHHCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Viajb(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;HPHPCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Viabc(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;HPPPCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Vabic(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;PPHPCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Viabj(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;HPPHCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Vaibc(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;PHPPCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Vijak(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;HHPHCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Vabci(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;PPPHCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Vaibj(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;PHPHCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>Vaijb(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;PHHPCoulombIntegrals&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Vijab(getTensorArgument&lt;F&gt;(</highlight><highlight class="stringliteral">&quot;HHPPCoulombIntegrals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1SimilarityTransformedHamiltonian" kindref="compound">SimilarityTransformedHamiltonian&lt;F&gt;</ref><sp/>H(Fij-&gt;lens[0],<sp/>Fab-&gt;lens[0]);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>H</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>fock<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>.setFij(Fij).setFab(Fab).setFia(Fia)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>coulomb<sp/>integrals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>.setVabcd(Vabcd).setViajb(Viajb).setVijab(Vijab).setVijkl(Vijkl)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>.setVijka(Vijka).setViabc(Viabc).setViajk(Viajk).setVabic(Vabic)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>.setVaibc(Vaibc).setVaibj(Vaibj).setViabj(Viabj).setVijak(Vijak)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/>.setVaijb(Vaijb).setVabci(Vabci).setVabij(Vabij)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>current<sp/>t-amplitudes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/>.setTai(Tai.get()).setTabij(Tabij.get())</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>a<sp/>general<sp/>dressing,<sp/>since<sp/>we<sp/>don&apos;t<sp/>want<sp/>any<sp/>terms<sp/>to<sp/>get<sp/>dropped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>.setDressing(<ref refid="classsisi4s_1_1SimilarityTransformedHamiltonian" kindref="compound">SimilarityTransformedHamiltonian&lt;F&gt;::Dressing::GENERAL</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>stanton<sp/>intermediates?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/>.useStantonIntermediatesUCCSD(<ref refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals_1a5f54ddc5f43c0cc716a44ad2c595936d" kindref="member">usingIntermediates</ref>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>T1<sp/>equations:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>singles<sp/>amplitude<sp/>equations<sp/>are<sp/>simply<sp/>taking<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wai<sp/>part<sp/>of<sp/>the<sp/>\bar<sp/>H<sp/>and<sp/>setting<sp/>it<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Wai<sp/>=<sp/>H.getAI();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(*Wai)[</highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>the<sp/>residum<sp/>equations,<sp/>we<sp/>have<sp/>to<sp/>substract<sp/>them<sp/>from<sp/>Wai</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>Notice<sp/>that<sp/>we&apos;re<sp/>substracting<sp/>only<sp/>the<sp/>diagonal<sp/>of<sp/>Fab<sp/>and<sp/>Fij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;bi&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>-<sp/>1.0<sp/><sp/>)<sp/>*<sp/>(*Fab)[</highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bi&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>(*Rai)[</highlight><highlight class="stringliteral">&quot;bi&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>+<sp/>1.0<sp/><sp/>)<sp/>*<sp/>(*Fij)[</highlight><highlight class="stringliteral">&quot;ii&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tai)[</highlight><highlight class="stringliteral">&quot;bi&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/>*<sp/>T2<sp/>equations:</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/>*<sp/>=============</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>doubles<sp/>amplitude<sp/>equations<sp/>are<sp/>simply<sp/>taking<sp/>the</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Wabij<sp/>part<sp/>of<sp/>the<sp/>\bar<sp/>H<sp/>and<sp/>setting<sp/>it<sp/>to<sp/>zero</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Wabij<sp/>=<sp/>H.getABIJ();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>(*Wabij)[</highlight><highlight class="stringliteral">&quot;abij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//These<sp/>are<sp/>the<sp/>residum<sp/>equations,<sp/>substract<sp/>them<sp/>from<sp/>Wabij</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;cdij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>+<sp/>1.0<sp/><sp/>)<sp/>*<sp/>(*Fij)[</highlight><highlight class="stringliteral">&quot;ii&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;cdij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;cdij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>-<sp/>1.0<sp/><sp/>)<sp/>*<sp/>(*Fij)[</highlight><highlight class="stringliteral">&quot;jj&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;cdji&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;cdij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>+<sp/>1.0<sp/><sp/>)<sp/>*<sp/>(*Fab)[</highlight><highlight class="stringliteral">&quot;dd&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;dcij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>(*Rabij)[</highlight><highlight class="stringliteral">&quot;cdij&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>(<sp/>-<sp/>1.0<sp/><sp/>)<sp/>*<sp/>(*Fab)[</highlight><highlight class="stringliteral">&quot;cc&quot;</highlight><highlight class="normal">]<sp/>*<sp/>(*Tabij)[</highlight><highlight class="stringliteral">&quot;cdij&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>residuum;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/sisi4s/sisi4s/src/algorithms/UccsdAmplitudesFromCoulombIntegrals.cxx"/>
  </compounddef>
</doxygen>
