<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="UegVertexGenerator_8cxx" kind="file" language="C++">
    <compoundname>UegVertexGenerator.cxx</compoundname>
    <includes refid="UegVertexGenerator_8hpp" local="no">algorithms/UegVertexGenerator.hpp</includes>
    <includes refid="Log_8hpp" local="no">util/Log.hpp</includes>
    <includes refid="Exception_8hpp" local="no">util/Exception.hpp</includes>
    <includes refid="Sisi4s_8hpp" local="no">Sisi4s.hpp</includes>
    <includes refid="Tensor_8hpp" local="no">util/Tensor.hpp</includes>
    <incdepgraph>
      <node id="4">
        <label>Data.hpp</label>
        <link refid="Data_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Options.hpp</label>
        <link refid="Options_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Sisi4s.hpp</label>
        <link refid="Sisi4s_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>algorithms/Algorithm.hpp</label>
        <link refid="Algorithm_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>UegVertexGenerator.cxx</label>
        <link refid="UegVertexGenerator_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithms/UegVertexGenerator.hpp</label>
        <link refid="UegVertexGenerator_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>math/Complex.hpp</label>
        <link refid="Complex_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>math/Float.hpp</label>
        <link refid="Float_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>util/CTF.hpp</label>
        <link refid="CTF_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>util/Documentation.hpp</label>
        <link refid="Documentation_8hpp"/>
      </node>
      <node id="25">
        <label>util/Exception.hpp</label>
        <link refid="Exception_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>util/Log.hpp</label>
        <link refid="Log_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>util/Tensor.hpp</label>
        <link refid="Tensor_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>util/Time.hpp</label>
        <link refid="Time_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>vendor/CLI11.hpp</label>
        <link refid="CLI11_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>algorithm</label>
      </node>
      <node id="12">
        <label>cmath</label>
      </node>
      <node id="19">
        <label>complex</label>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="24">
        <label>ctf.hpp</label>
      </node>
      <node id="7">
        <label>ctime</label>
      </node>
      <node id="42">
        <label>exception</label>
      </node>
      <node id="16">
        <label>fstream</label>
      </node>
      <node id="31">
        <label>functional</label>
      </node>
      <node id="10">
        <label>iomanip</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="39">
        <label>iterator</label>
      </node>
      <node id="41">
        <label>limits</label>
      </node>
      <node id="35">
        <label>locale</label>
      </node>
      <node id="20">
        <label>map</label>
      </node>
      <node id="30">
        <label>memory</label>
      </node>
      <node id="32">
        <label>numeric</label>
      </node>
      <node id="9">
        <label>ostream</label>
      </node>
      <node id="37">
        <label>set</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="40">
        <label>stdexcept</label>
      </node>
      <node id="15">
        <label>streambuf</label>
      </node>
      <node id="13">
        <label>string</label>
      </node>
      <node id="43">
        <label>sys/stat.h</label>
      </node>
      <node id="44">
        <label>sys/types.h</label>
      </node>
      <node id="33">
        <label>tuple</label>
      </node>
      <node id="38">
        <label>type_traits</label>
      </node>
      <node id="34">
        <label>utility</label>
      </node>
      <node id="21">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t sL</definition>
        <argsstring>(const ivec a)</argsstring>
        <name>sL</name>
        <param>
          <type>const <ref refid="namespacesisi4s_1ab2334ed125d3bc4cd352a4e77776e43c" kindref="member">ivec</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/algorithms/UegVertexGenerator.cxx" line="33" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/algorithms/UegVertexGenerator.cxx" bodystart="33" bodyend="33"/>
        <referencedby refid="classsisi4s_1_1UegVertexGenerator_1a7f2b63e4e37a5f74313403b5a41d5cbf" compoundref="UegVertexGenerator_8cxx" startline="49" endline="229">sisi4s::UegVertexGenerator::run</referencedby>
        <referencedby refid="classsisi4s_1_1UegVertexGenerator_1a21b36dddb2c4907fe10f70c4397f5643" compoundref="UegVertexGenerator_8cxx" startline="35" endline="39">sisi4s::UegVertexGenerator::Vijji</referencedby>
      </memberdef>
      <memberdef kind="function" id="UegVertexGenerator_8cxx_1abbdc1bf63531b1da540f045c8a2531b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double sL</definition>
        <argsstring>(const dvec a)</argsstring>
        <name>sL</name>
        <param>
          <type>const <ref refid="namespacesisi4s_1a7d76f1823c4e9c365c31cf2b81607482" kindref="member">dvec</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/algorithms/UegVertexGenerator.cxx" line="34" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/algorithms/UegVertexGenerator.cxx" bodystart="34" bodyend="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="UegVertexGenerator_8hpp" kindref="compound">algorithms/UegVertexGenerator.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Log_8hpp" kindref="compound">util/Log.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Exception_8hpp" kindref="compound">util/Exception.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Sisi4s_8hpp" kindref="compound">Sisi4s.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Tensor_8hpp" kindref="compound">util/Tensor.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesisi4s" kindref="compound">sisi4s</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classsisi4s_1_1UegVertexGenerator_1afa4445fb2a105da1c171a0c77df8292a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1afa4445fb2a105da1c171a0c77df8292a" kindref="member">UegVertexGenerator::evalMadelung</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kappa<sp/>=<sp/>pow(v,<sp/>-1.0<sp/>/<sp/>3.0);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>term2<sp/>=<sp/>M_PI<sp/>/<sp/>(kappa<sp/>*<sp/>kappa<sp/>*<sp/>v);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>term4<sp/>=<sp/>2<sp/>*<sp/>kappa<sp/>/<sp/><ref refid="namespacesisi4s_1a40947d88c4989cacff153a78af67f686" kindref="member">sqrt</ref>(M_PI);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>boxLength<sp/>=<sp/>1.0<sp/>/<sp/>kappa;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recipsum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>realsum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1<sp/>=<sp/>-6;<sp/>l1<sp/>&lt;=<sp/>6;<sp/>++l1)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l2<sp/>=<sp/>-6;<sp/>l2<sp/>&lt;=<sp/>6;<sp/>++l2)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l3<sp/>=<sp/>-6;<sp/>l3<sp/>&lt;=<sp/>6;<sp/>++l3)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2<sp/>=<sp/>l1<sp/>*<sp/>l1<sp/>+<sp/>l2<sp/>*<sp/>l2<sp/>+<sp/>l3<sp/>*<sp/>l3;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>modr<sp/>=<sp/>boxLength<sp/>*<sp/><ref refid="namespacesisi4s_1a40947d88c4989cacff153a78af67f686" kindref="member">sqrt</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)n2);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k2<sp/>=<sp/>kappa<sp/>*<sp/>kappa<sp/>*<sp/>n2;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n2<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recipsum<sp/>-=</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>/<sp/>(M_PI<sp/>*<sp/>k2)<sp/>*<sp/>exp(-M_PI<sp/>*<sp/>M_PI<sp/>*<sp/>k2<sp/>/<sp/>kappa<sp/>/<sp/>kappa)<sp/>/<sp/>v;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realsum<sp/>-=<sp/>erfc(kappa<sp/>*<sp/>modr)<sp/>/<sp/>modr;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>realsum<sp/>+<sp/>term2<sp/>+<sp/>term4<sp/>+<sp/>recipsum;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>two<sp/>functions<sp/>which<sp/>give<sp/>the<sp/>squared<sp/>length<sp/>of<sp/>the<sp/>grid-points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1ab2334ed125d3bc4cd352a4e77776e43c" kindref="member">ivec</ref><sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a[0]<sp/>*<sp/>a[0]<sp/>+<sp/>a[1]<sp/>*<sp/>a[1]<sp/>+<sp/>a[2]<sp/>*<sp/>a[2];<sp/>}</highlight></codeline>
<codeline lineno="34" refid="UegVertexGenerator_8cxx_1abbdc1bf63531b1da540f045c8a2531b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a7d76f1823c4e9c365c31cf2b81607482" kindref="member">dvec</ref><sp/>a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a[0]<sp/>*<sp/>a[0]<sp/>+<sp/>a[1]<sp/>*<sp/>a[1]<sp/>+<sp/>a[2]<sp/>*<sp/>a[2];<sp/>}</highlight></codeline>
<codeline lineno="35" refid="classsisi4s_1_1UegVertexGenerator_1a21b36dddb2c4907fe10f70c4397f5643" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a21b36dddb2c4907fe10f70c4397f5643" kindref="member">UegVertexGenerator::Vijji</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a7d76f1823c4e9c365c31cf2b81607482" kindref="member">dvec</ref><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a7d76f1823c4e9c365c31cf2b81607482" kindref="member">dvec</ref><sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="namespacesisi4s_1a7d76f1823c4e9c365c31cf2b81607482" kindref="member">dvec</ref><sp/>q({a[0]<sp/>-<sp/>b[0],<sp/>a[1]<sp/>-<sp/>b[1],<sp/>a[2]<sp/>-<sp/>b[2]});</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(q)<sp/>&lt;<sp/>1e-8)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1ac59899e4887b604ee29a9abf399dd414" kindref="member">madelung</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4.0<sp/>*<sp/>M_PI<sp/>/<sp/>v<sp/>/<sp/><ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(q);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="Algorithm_8hpp_1a07e9ffa67ed21886a687b27719c949e1" kindref="member">ALGORITHM_REGISTRAR_DEFINITION</ref>(<ref refid="classsisi4s_1_1UegVertexGenerator" kindref="compound">UegVertexGenerator</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classsisi4s_1_1UegVertexGenerator_1a344db97bd7238b6e181213ef1eba71e7" refkind="member"><highlight class="normal"><ref refid="classsisi4s_1_1UegVertexGenerator_1a344db97bd7238b6e181213ef1eba71e7" kindref="member">UegVertexGenerator::UegVertexGenerator</ref>(</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Argument&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;argumentList)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classsisi4s_1_1Algorithm" kindref="compound">Algorithm</ref>(argumentList)<sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classsisi4s_1_1UegVertexGenerator_1ab9e610164465ae6a281f86561a66fa1c" refkind="member"><highlight class="normal"><ref refid="classsisi4s_1_1UegVertexGenerator_1ab9e610164465ae6a281f86561a66fa1c" kindref="member">UegVertexGenerator::~UegVertexGenerator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classsisi4s_1_1UegVertexGenerator_1a7f2b63e4e37a5f74313403b5a41d5cbf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a7f2b63e4e37a5f74313403b5a41d5cbf" kindref="member">UegVertexGenerator::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>the<sp/>HF<sp/>reference<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lhfref(<ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;hartreeFock&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lclosed(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref><sp/>=<sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a3eb87f38bc0c2f1a91870c9069b44827" kindref="member">Nv</ref><sp/>=<sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;Nv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1affe5c2b7453b157add4aaf1f0be32edc" kindref="member">rs</ref><sp/>=<sp/><ref refid="classsisi4s_1_1Algorithm_1a36c632fbb19dae4ce2f415705fa5cbcb" kindref="member">getRealArgument</ref>(</highlight><highlight class="stringliteral">&quot;rs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1af1a4d9c11987e59aaad07622a9a4ceb6" kindref="member">NF</ref><sp/>=<sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;NF&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1ab39165b0efe8d67260bb218b95c5ff35" kindref="member">halfGrid</ref><sp/>=<sp/><ref refid="classsisi4s_1_1Algorithm_1a5db14be3b0d33bf80218a37223e27667" kindref="member">getIntegerArgument</ref>(</highlight><highlight class="stringliteral">&quot;halfGrid&quot;</highlight><highlight class="normal">,<sp/>0)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1ac59899e4887b604ee29a9abf399dd414" kindref="member">madelung</ref><sp/>=<sp/><ref refid="classsisi4s_1_1Algorithm_1a36c632fbb19dae4ce2f415705fa5cbcb" kindref="member">getRealArgument</ref>(</highlight><highlight class="stringliteral">&quot;madelung&quot;</highlight><highlight class="normal">,<sp/>-1.0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Np(<ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref><sp/>+<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a3eb87f38bc0c2f1a91870c9069b44827" kindref="member">Nv</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;No<sp/>larger<sp/>zero<sp/>please&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1UegVertexGenerator_1affe5c2b7453b157add4aaf1f0be32edc" kindref="member">rs</ref><sp/>&lt;=<sp/>0.0)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>rs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>the<sp/>integer<sp/>Grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>1)<sp/>gather<sp/>more<sp/>than<sp/>enough<sp/>candidates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>2.)<sp/>sort<sp/>by<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>3.)<sp/>split<sp/>and<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxG<sp/>=<sp/>pow(5.0<sp/>*<sp/>Np,<sp/>1.0<sp/>/<sp/>3.0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>std::vector&lt;ivec&gt;<sp/>iGrid;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g1(-maxG);<sp/>g1<sp/>&lt;=<sp/>maxG;<sp/>g1++)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g2(-maxG);<sp/>g2<sp/>&lt;=<sp/>maxG;<sp/>g2++)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g3(-maxG);<sp/>g3<sp/>&lt;=<sp/>maxG;<sp/>g3++)<sp/>iGrid.push_back({g1,<sp/>g2,<sp/>g3});</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>sort(iGrid.begin(),<sp/>iGrid.end(),<sp/>[](<ref refid="namespacesisi4s_1ab2334ed125d3bc4cd352a4e77776e43c" kindref="member">ivec</ref><sp/>a,<sp/><ref refid="namespacesisi4s_1ab2334ed125d3bc4cd352a4e77776e43c" kindref="member">ivec</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>sL(a)<sp/>&lt;<sp/>sL(b);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iGrid.size()<sp/>&lt;<sp/>Np)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;BUG<sp/>related<sp/>to<sp/>Np<sp/>&amp;<sp/>maxG\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(iGrid[<ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref>])<sp/>==<sp/><ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(iGrid[<ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref><sp/>-<sp/>1]))<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a8839cdf651ee7aca0c558a57fbcca7a1" kindref="member">OUT</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>occupied<sp/>orbitals<sp/>form<sp/>not<sp/>a<sp/>closed<sp/>shell\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lhfref)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Zero<sp/>gap<sp/>system!<sp/>Either<sp/>change<sp/>No<sp/>or<sp/>use<sp/>Hartree-Fock!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>lclosed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(iGrid[Np])<sp/>==<sp/><ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(iGrid[Np<sp/>-<sp/>1]))</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a8839cdf651ee7aca0c558a57fbcca7a1" kindref="member">OUT</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>virtual<sp/>orbitals<sp/>form<sp/>not<sp/>a<sp/>closed<sp/>shell\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>iGrid.resize(Np);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>define<sp/>volume,<sp/>lattice<sp/>Constant,<sp/>and<sp/>reciprocal<sp/>lattice<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v(<ref refid="classsisi4s_1_1UegVertexGenerator_1affe5c2b7453b157add4aaf1f0be32edc" kindref="member">rs</ref><sp/>*<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1affe5c2b7453b157add4aaf1f0be32edc" kindref="member">rs</ref><sp/>*<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1affe5c2b7453b157add4aaf1f0be32edc" kindref="member">rs</ref><sp/>/<sp/>3.0<sp/>*<sp/>4.0<sp/>*<sp/>M_PI<sp/>*<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a(pow(v,<sp/>1.<sp/>/<sp/>3.));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b(2.0<sp/>*<sp/>M_PI<sp/>/<sp/>a);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1UegVertexGenerator_1ac59899e4887b604ee29a9abf399dd414" kindref="member">madelung</ref><sp/>&lt;<sp/>0.0)<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1ac59899e4887b604ee29a9abf399dd414" kindref="member">madelung</ref><sp/>=<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1afa4445fb2a105da1c171a0c77df8292a" kindref="member">evalMadelung</ref>(v);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>std::vector&lt;dvec&gt;<sp/>dGrid;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>we<sp/>can<sp/>introduce<sp/>a<sp/>possible<sp/>shift<sp/>of<sp/>the<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>iGrid)<sp/>dGrid.push_back({b<sp/>*<sp/>i[0],<sp/>b<sp/>*<sp/>i[1],<sp/>b<sp/>*<sp/>i[2],<sp/>0.0});</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>can<sp/>write<sp/>the<sp/>hartree<sp/>fock<sp/>energy<sp/>in<sp/>the<sp/>4th<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;d<sp/>:<sp/>dGrid)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>d[3]<sp/>=<sp/>0.5<sp/>*<sp/><ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(d);<sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>kinetic<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exchE(0.0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>o(0);<sp/>o<sp/>&lt;<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref>;<sp/>o++)<sp/>exchE<sp/>+=<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a21b36dddb2c4907fe10f70c4397f5643" kindref="member">Vijji</ref>(d,<sp/>dGrid[o],<sp/>v);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lhfref)<sp/>d[3]<sp/>-=<sp/>exchE;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>refE(0.0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>o(0);<sp/>o<sp/>&lt;<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref>;<sp/>o++)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>refE<sp/>+=<sp/>dGrid[o][3];</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lhfref)<sp/>refE<sp/>+=<sp/>0.5<sp/>*<sp/><ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(dGrid[o]);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>energies(dGrid.size());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>d(0);<sp/>d<sp/>&lt;<sp/>dGrid.size();<sp/>d++)<sp/>energies[d]<sp/>=<sp/>dGrid[d][3];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fermiEnergy((energies[<ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref>]<sp/>+<sp/>energies[<ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref><sp/>-<sp/>1])<sp/>/<sp/>2.0);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>the<sp/>momentum<sp/>transition<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1.)<sp/>get<sp/>the<sp/>largest<sp/>momentum<sp/>vector<sp/>between<sp/>two<sp/>states<sp/>p<sp/>-<sp/>q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2.)<sp/>construct<sp/>a<sp/>full<sp/>grid<sp/>with<sp/>a<sp/>largest<sp/>grid<sp/>vec.<sp/>of<sp/>this<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="namespacesisi4s_1ab2334ed125d3bc4cd352a4e77776e43c" kindref="member">ivec</ref><sp/>maxMom({0,<sp/>0,<sp/>0});</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>p(0);<sp/>p<sp/>&lt;<sp/>Np;<sp/>p++)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>q(0);<sp/>q<sp/>&lt;<sp/>Np;<sp/>q++)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesisi4s_1ab2334ed125d3bc4cd352a4e77776e43c" kindref="member">ivec</ref><sp/>d<sp/>=<sp/>{iGrid[p][0]<sp/>-<sp/>iGrid[q][0],</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iGrid[p][1]<sp/>-<sp/>iGrid[q][1],</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iGrid[p][2]<sp/>-<sp/>iGrid[q][2]};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxMom<sp/>=<sp/>max(maxMom,<sp/>d,<sp/>[](<ref refid="namespacesisi4s_1ab2334ed125d3bc4cd352a4e77776e43c" kindref="member">ivec</ref><sp/>a,<sp/><ref refid="namespacesisi4s_1ab2334ed125d3bc4cd352a4e77776e43c" kindref="member">ivec</ref><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(a)<sp/>&lt;<sp/><ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(b);<sp/>});</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxR<sp/>=<sp/><ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(maxMom);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>maxG<sp/>=<sp/>max({maxMom[0],<sp/>maxMom[1],<sp/>maxMom[2]},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::abs(a)<sp/>&lt;<sp/>std::abs(b);<sp/>});</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>maxG<sp/>=<sp/>std::abs(maxG);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>std::map&lt;ivec,<sp/>size_t&gt;<sp/>momMap;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index(0);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g1(-maxG);<sp/>g1<sp/>&lt;=<sp/>maxG;<sp/>g1++)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g2(-maxG);<sp/>g2<sp/>&lt;=<sp/>maxG;<sp/>g2++)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g3(-maxG);<sp/>g3<sp/>&lt;=<sp/>maxG;<sp/>g3++)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesisi4s_1ab2334ed125d3bc4cd352a4e77776e43c" kindref="member">ivec</ref><sp/>t({g1,<sp/>g2,<sp/>g3});</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(t)<sp/>&gt;<sp/>maxR)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>momMap[t]<sp/>=<sp/>index++;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1UegVertexGenerator_1af1a4d9c11987e59aaad07622a9a4ceb6" kindref="member">NF</ref><sp/>==<sp/>0)<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1af1a4d9c11987e59aaad07622a9a4ceb6" kindref="member">NF</ref><sp/>=<sp/>momMap.size();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsisi4s_1_1UegVertexGenerator_1af1a4d9c11987e59aaad07622a9a4ceb6" kindref="member">NF</ref><sp/>!=<sp/>momMap.size()<sp/>||<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1ab39165b0efe8d67260bb218b95c5ff35" kindref="member">halfGrid</ref><sp/>||<sp/>!lclosed)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Log_8hpp_1a8839cdf651ee7aca0c558a57fbcca7a1" kindref="member">OUT</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>the<sp/>Vertex<sp/>will<sp/>not<sp/>be<sp/>correct!<sp/>Just<sp/>for<sp/>profiling!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fac(4.0<sp/>*<sp/>M_PI<sp/>/<sp/>v);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>syms[]<sp/>=<sp/>{NS,<sp/>NS,<sp/>NS,<sp/>NS};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coulombVertexLens[]<sp/>=<sp/>{(int)<ref refid="classsisi4s_1_1UegVertexGenerator_1af1a4d9c11987e59aaad07622a9a4ceb6" kindref="member">NF</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)Np,<sp/>(int)Np};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>coulombVertex<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor&lt;complex&gt;</ref>(3,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coulombVertexLens,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syms,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classsisi4s_1_1Sisi4s_1ace7b506b09fbfac3743da86db91d49ce" kindref="member">Sisi4s::world</ref>,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CoulombVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a8839cdf651ee7aca0c558a57fbcca7a1" kindref="member">OUT</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;System<sp/>Information:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a8839cdf651ee7aca0c558a57fbcca7a1" kindref="member">OUT</ref>()<sp/>&lt;&lt;<sp/>std::setprecision(3)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>rs<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1affe5c2b7453b157add4aaf1f0be32edc" kindref="member">rs</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>No<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Nv<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a3eb87f38bc0c2f1a91870c9069b44827" kindref="member">Nv</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a8839cdf651ee7aca0c558a57fbcca7a1" kindref="member">OUT</ref>()<sp/>&lt;&lt;<sp/>std::setprecision(10)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Volume<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>v<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>madelung<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1ac59899e4887b604ee29a9abf399dd414" kindref="member">madelung</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a8839cdf651ee7aca0c558a57fbcca7a1" kindref="member">OUT</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>HOMO<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>energies[<ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref><sp/>-<sp/>1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>LUMO<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>energies[<ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref>]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="Log_8hpp_1a8839cdf651ee7aca0c558a57fbcca7a1" kindref="member">OUT</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Reference<sp/>Energy<sp/>per<sp/>Electron/total<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>refE<sp/>/<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref><sp/>/<sp/>2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>refE<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>eigenEnergies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o[]<sp/>=<sp/>{(int)<ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref>},<sp/>_v[]<sp/>=<sp/>{(int)<ref refid="classsisi4s_1_1UegVertexGenerator_1a3eb87f38bc0c2f1a91870c9069b44827" kindref="member">Nv</ref>};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>epsi<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor&lt;double&gt;</ref>(1,<sp/>o,<sp/>syms,<sp/>*<ref refid="classsisi4s_1_1Sisi4s_1ace7b506b09fbfac3743da86db91d49ce" kindref="member">Sisi4s::world</ref>,<sp/></highlight><highlight class="stringliteral">&quot;epsi&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epsa<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor&lt;double&gt;</ref>(1,<sp/>_v,<sp/>syms,<sp/>*<ref refid="classsisi4s_1_1Sisi4s_1ace7b506b09fbfac3743da86db91d49ce" kindref="member">Sisi4s::world</ref>,<sp/></highlight><highlight class="stringliteral">&quot;epsa&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>allocatedTensorArgument&lt;sisi4s::complex&gt;(</highlight><highlight class="stringliteral">&quot;CoulombVertex&quot;</highlight><highlight class="normal">,<sp/>coulombVertex);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>allocatedTensorArgument&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;HoleEigenEnergies&quot;</highlight><highlight class="normal">,<sp/>epsi);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>allocatedTensorArgument&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;ParticleEigenEnergies&quot;</highlight><highlight class="normal">,<sp/>epsa);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>are<sp/>in<sp/>a<sp/>dryRun<sp/>there<sp/>is<sp/>nothing<sp/>more<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(Sisi4s::dryRun)<sp/>return<sp/>result;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>np<sp/>=<sp/><ref refid="classsisi4s_1_1Sisi4s_1ace7b506b09fbfac3743da86db91d49ce" kindref="member">Sisi4s::world</ref>-&gt;np;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/><ref refid="classsisi4s_1_1Sisi4s_1ace7b506b09fbfac3743da86db91d49ce" kindref="member">Sisi4s::world</ref>-&gt;rank;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>rank<sp/>0<sp/>writes<sp/>the<sp/>data<sp/>to<sp/>the<sp/>tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/>idx;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsisi4s_1_1Sisi4s_1ace7b506b09fbfac3743da86db91d49ce" kindref="member">Sisi4s::world</ref>-&gt;rank)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>idx.resize(energies.size());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>std::iota(idx.begin(),<sp/>idx.end(),<sp/>0);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>epsi-&gt;write(<ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref>,<sp/>(int64_t<sp/>*)idx.data(),<sp/>energies.data());</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>epsa-&gt;write(<ref refid="classsisi4s_1_1UegVertexGenerator_1a3eb87f38bc0c2f1a91870c9069b44827" kindref="member">Nv</ref>,<sp/>(int64_t<sp/>*)idx.data()<sp/>+<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1a8777f2a834063774af73ab9a6c250e32" kindref="member">No</ref>,<sp/>energies.data());</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writing<sp/>CoulombVertex<sp/>to<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>to<sp/>do<sp/>it<sp/>mpi-able...otherwise<sp/>we<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>be<sp/>able<sp/>to<sp/>write<sp/>it<sp/>to<sp/>a<sp/>ctf<sp/>tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>slice<sp/>the<sp/>number<sp/>of<sp/>states<sp/>for<sp/>all<sp/>the<sp/>mpi<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slices(Np<sp/>/<sp/>np);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/>slicePerRank(np);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r(0);<sp/>r<sp/>&lt;<sp/>np;<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>lslice(slices);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i(0);<sp/>i<sp/>&lt;<sp/>Np<sp/>-<sp/>slices<sp/>*<sp/>np;<sp/>i++)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/>i)<sp/>{<sp/>lslice++;<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>slicePerRank[r]<sp/>=<sp/>lslice;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>slices<sp/>=<sp/>slicePerRank[rank];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>only<sp/>a<sp/>buffer<sp/>of<sp/>needed<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>std::vector&lt;complex&gt;<sp/>out(<ref refid="classsisi4s_1_1UegVertexGenerator_1af1a4d9c11987e59aaad07622a9a4ceb6" kindref="member">NF</ref><sp/>*<sp/>Np<sp/>*<sp/>slices,<sp/>{0,<sp/>0});</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>begin<sp/>and<sp/>end<sp/>of<sp/>the<sp/>rank&apos;s<sp/>slices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sbegin(std::accumulate(slicePerRank.begin(),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slicePerRank.begin()<sp/>+<sp/>rank,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0UL,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::plus&lt;size_t&gt;()));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s(0);<sp/>s<sp/>&lt;<sp/>slices;<sp/>s++)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>q(0);<sp/>q<sp/>&lt;<sp/>Np;<sp/>q++)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p(s<sp/>+<sp/>sbegin);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesisi4s_1ab2334ed125d3bc4cd352a4e77776e43c" kindref="member">ivec</ref><sp/>d<sp/>=<sp/>{iGrid[q][0]<sp/>-<sp/>iGrid[p][0],</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iGrid[q][1]<sp/>-<sp/>iGrid[p][1],</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iGrid[q][2]<sp/>-<sp/>iGrid[p][2]};</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>hack!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>NF<sp/>is<sp/>chosen<sp/>by<sp/>the<sp/>user<sp/>we<sp/>will<sp/>not<sp/>have<sp/>an<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>momMap[d]<sp/>%<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1af1a4d9c11987e59aaad07622a9a4ceb6" kindref="member">NF</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(d))<sp/>?<sp/>res<sp/>=<sp/>fac<sp/>/<sp/>(b<sp/>*<sp/>b<sp/>*<sp/><ref refid="UegVertexGenerator_8cxx_1a9f5a2f20e39ff02852b5990010a45f92" kindref="member">sL</ref>(d))<sp/>:<sp/>res<sp/>=<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1afa4445fb2a105da1c171a0c77df8292a" kindref="member">evalMadelung</ref>(v);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[ii<sp/>+<sp/>q<sp/>*<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1af1a4d9c11987e59aaad07622a9a4ceb6" kindref="member">NF</ref><sp/>+<sp/>s<sp/>*<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1af1a4d9c11987e59aaad07622a9a4ceb6" kindref="member">NF</ref><sp/>*<sp/>Np]<sp/>=<sp/>{<ref refid="namespacesisi4s_1a40947d88c4989cacff153a78af67f686" kindref="member">sqrt</ref>(res),<sp/>0.0};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>idx.resize(out.size());</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>std::iota(idx.begin(),<sp/>idx.end(),<sp/>sbegin<sp/>*<sp/>Np<sp/>*<sp/><ref refid="classsisi4s_1_1UegVertexGenerator_1af1a4d9c11987e59aaad07622a9a4ceb6" kindref="member">NF</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>coulombVertex-&gt;write(idx.size(),<sp/>(int64_t<sp/>*)idx.data(),<sp/>out.data());</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/sisi4s/sisi4s/src/algorithms/UegVertexGenerator.cxx"/>
  </compounddef>
</doxygen>
