<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classCLI_1_1App" kind="class" language="C++" prot="public">
    <compoundname>CLI::App</compoundname>
    <derivedcompoundref refid="classCLI_1_1Option__group" prot="public" virt="non-virtual">CLI::Option_group</derivedcompoundref>
    <includes refid="CLI11_8hpp" local="no">CLI11.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Subcommands</header>
      <memberdef kind="enum" id="classCLI_1_1App_1a44223dc510ba0f7b680990476828e2e8" prot="protected" static="no" strong="yes">
        <type>char</type>
        <name>startup_mode</name>
        <qualifiedname>CLI::App::startup_mode</qualifiedname>
        <enumvalue id="classCLI_1_1App_1a44223dc510ba0f7b680990476828e2e8af40faf6384fc85a33d3b05a9d41c012b" prot="protected">
          <name>stable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCLI_1_1App_1a44223dc510ba0f7b680990476828e2e8aa10311459433adf322f2590a4987c423" prot="protected">
          <name>enabled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCLI_1_1App_1a44223dc510ba0f7b680990476828e2e8a075ae3d2fc31640504f814f60e5ef713" prot="protected">
          <name>disabled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5431" column="5" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5431" bodyend="5431"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a2c912598c2a49e41536ca88f2786195b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceCLI_1ad6d256a0cca01f58faf90f0b4595aca4" kindref="member">App_p</ref> &gt;</type>
        <definition>std::vector&lt;App_p&gt; CLI::App::subcommands_</definition>
        <argsstring></argsstring>
        <name>subcommands_</name>
        <qualifiedname>CLI::App::subcommands_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Storage for subcommand list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5409" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5409" bodyend="-1"/>
        <referencedby refid="classCLI_1_1App_1aade2ac30d86141da0d55d9181ac8b710" compoundref="CLI11_8hpp" startline="8091" endline="8139">_compare_subcommand_names</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ac0ded9f408801bccc14d6390b99c11b5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::ignore_case_</definition>
        <argsstring></argsstring>
        <name>ignore_case_</name>
        <qualifiedname>CLI::App::ignore_case_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
<para>If true, the program name is not case sensitive INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5412" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a632f10cfa5ee5894a67011f7a6097728" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::ignore_underscore_</definition>
        <argsstring></argsstring>
        <name>ignore_underscore_</name>
        <qualifiedname>CLI::App::ignore_underscore_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
<para>If true, the program should ignore underscores INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5415" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ad3196989217de9162ffa0a5c1e81e92c" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::fallthrough_</definition>
        <argsstring></argsstring>
        <name>fallthrough_</name>
        <qualifiedname>CLI::App::fallthrough_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
<para>Allow subcommand fallthrough, so that parent commands can collect commands after subcommand. INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5418" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1afdcf791220d111363ac12526a693227b" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::allow_windows_style_options_</definition>
        <argsstring></argsstring>
        <name>allow_windows_style_options_</name>
        <qualifiedname>CLI::App::allow_windows_style_options_</qualifiedname>
        <initializer>{



        false

    }</initializer>
        <briefdescription>
<para>Allow &apos;/&apos; for options for Windows like options. Defaults to true on Windows, false otherwise. INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5421" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a963ce3e24f0652591e5c751083a57670" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::positionals_at_end_</definition>
        <argsstring></argsstring>
        <name>positionals_at_end_</name>
        <qualifiedname>CLI::App::positionals_at_end_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
<para>specify that positional arguments come at the end of the argument sequence not inheritable </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5429" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ae55bdb283aa20595c30a0cbb83d833d3" prot="protected" static="no" mutable="no">
        <type><ref refid="classCLI_1_1App_1a44223dc510ba0f7b680990476828e2e8" kindref="member">startup_mode</ref></type>
        <definition>startup_mode CLI::App::default_startup</definition>
        <argsstring></argsstring>
        <name>default_startup</name>
        <qualifiedname>CLI::App::default_startup</qualifiedname>
        <initializer>{<ref refid="classCLI_1_1App_1a44223dc510ba0f7b680990476828e2e8af40faf6384fc85a33d3b05a9d41c012b" kindref="member">startup_mode::stable</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>specify the startup mode for the app stable=no change, enabled= startup enabled, disabled=startup disabled </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5434" column="18" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1aa2b35c6b5a5f471663634f94b7b2337e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::configurable_</definition>
        <argsstring></argsstring>
        <name>configurable_</name>
        <qualifiedname>CLI::App::configurable_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
<para>if set to true the subcommand can be triggered via configuration files INHERITABLE </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5437" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ae037cfa9b207f8ae4f17d8e0086c5380" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::validate_positionals_</definition>
        <argsstring></argsstring>
        <name>validate_positionals_</name>
        <qualifiedname>CLI::App::validate_positionals_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
<para>If set to true positional options are validated before assigning INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5440" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ac25109abadcb44d8cd3d000ca44fdf86" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::silent_</definition>
        <argsstring></argsstring>
        <name>silent_</name>
        <qualifiedname>CLI::App::silent_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>indicator that the subcommand is silent and won&apos;t show up in subcommands list This is potentially useful as a modifier subcommand </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5444" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a30ce21de99bd99baf50f790cc752f22a" prot="protected" static="no" mutable="no">
        <type>std::uint32_t</type>
        <definition>std::uint32_t CLI::App::parsed_</definition>
        <argsstring></argsstring>
        <name>parsed_</name>
        <qualifiedname>CLI::App::parsed_</qualifiedname>
        <initializer>{0U}</initializer>
        <briefdescription>
<para>Counts the number of times this command/subcommand was parsed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5447" column="19" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a6b0653a65afed143f774aabf881905a1" prot="protected" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::require_subcommand_min_</definition>
        <argsstring></argsstring>
        <name>require_subcommand_min_</name>
        <qualifiedname>CLI::App::require_subcommand_min_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Minimum required subcommands (not inheritable!) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5450" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a2c55daa71d2e35868f7e192211a801f2" prot="protected" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::require_subcommand_max_</definition>
        <argsstring></argsstring>
        <name>require_subcommand_max_</name>
        <qualifiedname>CLI::App::require_subcommand_max_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Max number of subcommands allowed (parsing stops after this number). 0 is unlimited INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5453" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a23af1dbdb22e1083c3593157cb9b1bd3" prot="protected" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::require_option_min_</definition>
        <argsstring></argsstring>
        <name>require_option_min_</name>
        <qualifiedname>CLI::App::require_option_min_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Minimum required options (not inheritable!) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5456" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1aaff272565daecbe6eaad738ef21d6ebd" prot="protected" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::require_option_max_</definition>
        <argsstring></argsstring>
        <name>require_option_max_</name>
        <qualifiedname>CLI::App::require_option_max_</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Max number of options allowed. 0 is unlimited (not inheritable) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5459" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a557239f7b3a655d0e0d6be8820f3e043" prot="protected" static="no" mutable="no">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App* CLI::App::parent_</definition>
        <argsstring></argsstring>
        <name>parent_</name>
        <qualifiedname>CLI::App::parent_</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
<para>A pointer to the parent if this is a subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5462" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5462" bodyend="-1"/>
        <referencedby refid="classCLI_1_1App_1a0e00bdc00c5bca05d52d98833f77a3b5" compoundref="CLI11_8hpp" startline="8079" endline="8088">_get_fallthrough_parent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ac31738f617c3ce7aaf9fd94c3f54fc0f" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CLI::App::group_</definition>
        <argsstring></argsstring>
        <name>group_</name>
        <qualifiedname>CLI::App::group_</qualifiedname>
        <initializer>{&quot;Subcommands&quot;}</initializer>
        <briefdescription>
<para>The group membership INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5465" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ab6069c968af1eea4a89980e6f1487464" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; CLI::App::aliases_</definition>
        <argsstring></argsstring>
        <name>aliases_</name>
        <qualifiedname>CLI::App::aliases_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Alias names for the subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5468" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5468" bodyend="-1"/>
        <referencedby refid="classCLI_1_1App_1aade2ac30d86141da0d55d9181ac8b710" compoundref="CLI11_8hpp" startline="8091" endline="8139">_compare_subcommand_names</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a8b461d2233ec4121259011b5ed24b336" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::add_subcommand</definition>
        <argsstring>(std::string subcommand_name=&quot;&quot;, std::string subcommand_description=&quot;&quot;)</argsstring>
        <name>add_subcommand</name>
        <qualifiedname>CLI::App::add_subcommand</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>subcommand_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>subcommand_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Add a subcommand. Inherits INHERITABLE and <ref refid="classCLI_1_1OptionDefaults" kindref="compound">OptionDefaults</ref>, and help flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6183" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6183" bodyend="6199"/>
        <references refid="namespaceCLI_1_1detail_1a3a05d1129df69e88135e178137b1fd89" compoundref="CLI11_8hpp" startline="337" endline="337">CLI::detail::valid_first_char</references>
        <references refid="namespaceCLI_1_1detail_1a841371d5dbb0a52f453de4cc1d00cc51" compoundref="CLI11_8hpp" startline="340" endline="345">CLI::detail::valid_later_char</references>
        <references refid="namespaceCLI_1_1detail_1a4274628d24f9e3fbc719284f1db263b8" compoundref="CLI11_8hpp" startline="348" endline="357">CLI::detail::valid_name_string</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a99e2ddf1ae27593e19162eba3aec5fcd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::add_subcommand</definition>
        <argsstring>(CLI::App_p subcom)</argsstring>
        <name>add_subcommand</name>
        <qualifiedname>CLI::App::add_subcommand</qualifiedname>
        <param>
          <type><ref refid="namespaceCLI_1ad6d256a0cca01f58faf90f0b4595aca4" kindref="member">CLI::App_p</ref></type>
          <declname>subcom</declname>
        </param>
        <briefdescription>
<para>Add a previously created app as a subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6202" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6202" bodyend="6213"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1acfd0b05943b8acba2a38c58f47140534" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::remove_subcommand</definition>
        <argsstring>(App *subcom)</argsstring>
        <name>remove_subcommand</name>
        <qualifiedname>CLI::App::remove_subcommand</qualifiedname>
        <param>
          <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
          <declname>subcom</declname>
        </param>
        <briefdescription>
<para>Removes a subcommand from the <ref refid="classCLI_1_1App" kindref="compound">App</ref>. Takes a subcommand pointer. Returns true if found and removed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6216" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6216" bodyend="6230"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ad03898df2eadbe937c81d80215169235" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::get_subcommand</definition>
        <argsstring>(const App *subcom) const</argsstring>
        <name>get_subcommand</name>
        <qualifiedname>CLI::App::get_subcommand</qualifiedname>
        <param>
          <type>const <ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
          <declname>subcom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check to see if a subcommand is part of this command (doesn&apos;t have to be in command line) returns the first subcommand if passed a nullptr </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6233" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6233" bodyend="6240"/>
        <references refid="classCLI_1_1App_1adeac41bd40859dfbff9817244c09c989" compoundref="CLI11_8hpp" startline="6966" endline="6966">get_name</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a4e9542d25bca3e8eaaa3e27e09ca4b59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::get_subcommand</definition>
        <argsstring>(std::string subcom) const</argsstring>
        <name>get_subcommand</name>
        <qualifiedname>CLI::App::get_subcommand</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>subcom</declname>
        </param>
        <briefdescription>
<para>Check to see if a subcommand is part of this command (text version) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6243" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6243" bodyend="6248"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a8bba3b53cf7f222aefd592457dd37508" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::get_subcommand</definition>
        <argsstring>(int index=0) const</argsstring>
        <name>get_subcommand</name>
        <qualifiedname>CLI::App::get_subcommand</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Get a pointer to subcommand by index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6250" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6250" bodyend="6257"/>
        <references refid="namespaceCLI_1_1detail_1a9c070858740ce15aaecb1c5f04e21a09" compoundref="CLI11_8hpp" startline="1141" endline="1145">CLI::detail::to_string</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a63c0110a3e63515e3b9b70b7b560d676" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceCLI_1ad6d256a0cca01f58faf90f0b4595aca4" kindref="member">CLI::App_p</ref></type>
        <definition>CLI::App_p CLI::App::get_subcommand_ptr</definition>
        <argsstring>(App *subcom) const</argsstring>
        <name>get_subcommand_ptr</name>
        <qualifiedname>CLI::App::get_subcommand_ptr</qualifiedname>
        <param>
          <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
          <declname>subcom</declname>
        </param>
        <briefdescription>
<para>Check to see if a subcommand is part of this command and get a shared_ptr to it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6260" column="16" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6260" bodyend="6267"/>
        <references refid="classCLI_1_1App_1adeac41bd40859dfbff9817244c09c989" compoundref="CLI11_8hpp" startline="6966" endline="6966">get_name</references>
        <referencedby refid="classCLI_1_1Option__group_1a1be93903743c2cdc64f1237ca956ff0b" compoundref="CLI11_8hpp" startline="8225" endline="8230">CLI::Option_group::add_subcommand</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a47a0d67f7d0f856613d45691b8822962" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceCLI_1ad6d256a0cca01f58faf90f0b4595aca4" kindref="member">CLI::App_p</ref></type>
        <definition>CLI::App_p CLI::App::get_subcommand_ptr</definition>
        <argsstring>(std::string subcom) const</argsstring>
        <name>get_subcommand_ptr</name>
        <qualifiedname>CLI::App::get_subcommand_ptr</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>subcom</declname>
        </param>
        <briefdescription>
<para>Check to see if a subcommand is part of this command (text version) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6270" column="16" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6270" bodyend="6275"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a4b5075daadca7c1f7aa1781bc3c9024f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceCLI_1ad6d256a0cca01f58faf90f0b4595aca4" kindref="member">CLI::App_p</ref></type>
        <definition>CLI::App_p CLI::App::get_subcommand_ptr</definition>
        <argsstring>(int index=0) const</argsstring>
        <name>get_subcommand_ptr</name>
        <qualifiedname>CLI::App::get_subcommand_ptr</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Get an owning pointer to subcommand by index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6278" column="16" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6278" bodyend="6285"/>
        <references refid="namespaceCLI_1_1detail_1a9c070858740ce15aaecb1c5f04e21a09" compoundref="CLI11_8hpp" startline="1141" endline="1145">CLI::detail::to_string</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a1a20a4e0134d40cb7c5e8ffd0d7cdf09" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::get_option_group</definition>
        <argsstring>(std::string group_name) const</argsstring>
        <name>get_option_group</name>
        <qualifiedname>CLI::App::get_option_group</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>group_name</declname>
        </param>
        <briefdescription>
<para>Check to see if an option group is part of this <ref refid="classCLI_1_1App" kindref="compound">App</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6288" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6288" bodyend="6295"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ac882ae7b667d460501d77aebfd9a5d26" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::count</definition>
        <argsstring>() const</argsstring>
        <name>count</name>
        <qualifiedname>CLI::App::count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No argument version of count counts the number of times this subcommand was passed in. The main app will return 1. Unnamed subcommands will also return 1 unless otherwise modified in a callback </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6300" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6300" bodyend="6300"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a4933a7e5603ab5eaa9705d4027e6cb12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::count_all</definition>
        <argsstring>() const</argsstring>
        <name>count_all</name>
        <qualifiedname>CLI::App::count_all</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a count of all the arguments processed in options and subcommands, this excludes arguments which were treated as extras. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6304" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6304" bodyend="6316"/>
        <references refid="classCLI_1_1Option_1a154543609c45d9c59c69991a08ca272b" compoundref="CLI11_8hpp" startline="4267" endline="4267">CLI::Option::count</references>
        <references refid="classCLI_1_1Error_1a725f16d721c2320ba75b4d6c99d2056a" compoundref="CLI11_8hpp" startline="603" endline="603">CLI::Error::get_name</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a57b9e87080e5c1d87672dcfe0edd0af5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::group</definition>
        <argsstring>(std::string group_name)</argsstring>
        <name>group</name>
        <qualifiedname>CLI::App::group</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>group_name</declname>
        </param>
        <briefdescription>
<para>Changes the group membership. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6319" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6319" bodyend="6322"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a32368fe1be23de24ed7e26378b0e31c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::require_subcommand</definition>
        <argsstring>()</argsstring>
        <name>require_subcommand</name>
        <qualifiedname>CLI::App::require_subcommand</qualifiedname>
        <briefdescription>
<para>The argumentless form of require subcommand requires 1 or more subcommands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6325" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6325" bodyend="6329"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a473f59b0d3cec845228f29ad8c445d1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::require_subcommand</definition>
        <argsstring>(int value)</argsstring>
        <name>require_subcommand</name>
        <qualifiedname>CLI::App::require_subcommand</qualifiedname>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Require a subcommand to be given (does not affect help call) The number required can be given. Negative values indicate maximum number allowed (0 for any number). Max number inheritable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6334" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6334" bodyend="6343"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1afbc506d3fe77c1bae23d206d32d1c422" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::require_subcommand</definition>
        <argsstring>(std::size_t min, std::size_t max)</argsstring>
        <name>require_subcommand</name>
        <qualifiedname>CLI::App::require_subcommand</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>min</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Explicitly control the number of subcommands required. Setting 0 for the max means unlimited number allowed. Max number inheritable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6347" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6347" bodyend="6351"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a8e5e732c43d6a569991d555b34162c28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::require_option</definition>
        <argsstring>()</argsstring>
        <name>require_option</name>
        <qualifiedname>CLI::App::require_option</qualifiedname>
        <briefdescription>
<para>The argumentless form of require option requires 1 or more options be used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6354" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6354" bodyend="6358"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a803c62c7cb37c0db06fbfde1ec845b3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::require_option</definition>
        <argsstring>(int value)</argsstring>
        <name>require_option</name>
        <qualifiedname>CLI::App::require_option</qualifiedname>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Require an option to be given (does not affect help call) The number required can be given. Negative values indicate maximum number allowed (0 for any number). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6363" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6363" bodyend="6372"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aec71eb1b37a8f33bc0602106f193caa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::require_option</definition>
        <argsstring>(std::size_t min, std::size_t max)</argsstring>
        <name>require_option</name>
        <qualifiedname>CLI::App::require_option</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>min</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Explicitly control the number of options required. Setting 0 for the max means unlimited number allowed. Max number inheritable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6376" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6376" bodyend="6380"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a2c2c53ff8166abaff0bd171fd1908fa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::fallthrough</definition>
        <argsstring>(bool value=true)</argsstring>
        <name>fallthrough</name>
        <qualifiedname>CLI::App::fallthrough</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop subcommand fallthrough, so that parent commands cannot collect commands after subcommand. Default from parent, usually set on parent. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6384" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6384" bodyend="6387"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a91720aaf4c92c867dc042c723503b74e" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CLI::App::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <qualifiedname>CLI::App::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check to see if this subcommand was parsed, true only if received on command line. This allows the subcommand to be directly checked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6391" column="14" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6391" bodyend="6391"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Parsing</header>
      <memberdef kind="typedef" id="classCLI_1_1App_1a51ebef2d1d91383bc76cb9c0f04b90a3" prot="protected" static="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573" kindref="member">detail::Classifier</ref>, std::string &gt; &gt;</type>
        <definition>using CLI::App::missing_t =  std::vector&lt;std::pair&lt;detail::Classifier, std::string&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>missing_t</name>
        <qualifiedname>CLI::App::missing_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5376" column="5" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a664a3162461b3121caf5cae7f65a95e6" prot="protected" static="no" mutable="no">
        <type><ref refid="classCLI_1_1App_1a51ebef2d1d91383bc76cb9c0f04b90a3" kindref="member">missing_t</ref></type>
        <definition>missing_t CLI::App::missing_</definition>
        <argsstring></argsstring>
        <name>missing_</name>
        <qualifiedname>CLI::App::missing_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pair of classifier, string for missing options. (extra detail is removed on returning from parse)</para>
<para>This is faster and cleaner than storing just a list of strings and reparsing. This may contain the <ndash/> separator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5381" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1add8dcf3a51639b56a50bf9e1ab983606" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> * &gt;</type>
        <definition>std::vector&lt;Option *&gt; CLI::App::parse_order_</definition>
        <argsstring></argsstring>
        <name>parse_order_</name>
        <qualifiedname>CLI::App::parse_order_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>This is a list of pointers to options with the original parse order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5384" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a61eae39a2e5238322d21f6ff31aa6f4b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCLI_1_1App" kindref="compound">App</ref> * &gt;</type>
        <definition>std::vector&lt;App *&gt; CLI::App::parsed_subcommands_</definition>
        <argsstring></argsstring>
        <name>parsed_subcommands_</name>
        <qualifiedname>CLI::App::parsed_subcommands_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>This is a list of the subcommands collected, in order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5387" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ab95644f6cb3babcf2d31b3fea8304a82" prot="protected" static="no" mutable="no">
        <type>std::set&lt; <ref refid="classCLI_1_1App" kindref="compound">App</ref> * &gt;</type>
        <definition>std::set&lt;App *&gt; CLI::App::exclude_subcommands_</definition>
        <argsstring></argsstring>
        <name>exclude_subcommands_</name>
        <qualifiedname>CLI::App::exclude_subcommands_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>this is a list of subcommands that are exclusionary to this one </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5390" column="14" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5390" bodyend="-1"/>
        <referencedby refid="classCLI_1_1App_1aa931caebf13af7d7a96badf0b06a4ace" compoundref="CLI11_8hpp" startline="6620" endline="6633">excludes</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a56990d551dba3360f0f3fb0db10ae510" prot="protected" static="no" mutable="no">
        <type>std::set&lt; <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> * &gt;</type>
        <definition>std::set&lt;Option *&gt; CLI::App::exclude_options_</definition>
        <argsstring></argsstring>
        <name>exclude_options_</name>
        <qualifiedname>CLI::App::exclude_options_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is a list of options which are exclusionary to this <ref refid="classCLI_1_1App" kindref="compound">App</ref>, if the options were used this subcommand should not be </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5394" column="14" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ad8d1f603e89a28555a09b754420054ca" prot="protected" static="no" mutable="no">
        <type>std::set&lt; <ref refid="classCLI_1_1App" kindref="compound">App</ref> * &gt;</type>
        <definition>std::set&lt;App *&gt; CLI::App::need_subcommands_</definition>
        <argsstring></argsstring>
        <name>need_subcommands_</name>
        <qualifiedname>CLI::App::need_subcommands_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>this is a list of subcommands or option groups that are required by this one, the list is not mutual, the listed subcommands do not require this one </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5398" column="14" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ad375a844780daa83420f9821434e187d" prot="protected" static="no" mutable="no">
        <type>std::set&lt; <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> * &gt;</type>
        <definition>std::set&lt;Option *&gt; CLI::App::need_options_</definition>
        <argsstring></argsstring>
        <name>need_options_</name>
        <qualifiedname>CLI::App::need_options_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is a list of options which are required by this app, the list is not mutual, listed options do not need the subcommand not be </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5402" column="14" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a6b5a085a039cab7e5906b3cd4407fdc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>CLI::App::clear</qualifiedname>
        <briefdescription>
<para>Reset the parsed data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6407" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6407" bodyend="6420"/>
        <references refid="classCLI_1_1Option_1abbd36aaff5cdca8b10346bafed51da39" compoundref="CLI11_8hpp" startline="4276" endline="4279">CLI::Option::clear</references>
        <referencedby refid="classCLI_1_1App_1a2a3aca3df859e7d772298a44d7b91fc9" compoundref="CLI11_8hpp" startline="6972" endline="6975">clear_aliases</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a5ddf139d5fe065289aca7b83d5d045d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::parse</definition>
        <argsstring>(int argc, const char *const *argv)</argsstring>
        <name>parse</name>
        <qualifiedname>CLI::App::parse</qualifiedname>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses the command line - throws errors. This must be called after the options are in but before the rest of the program. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6424" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6424" bodyend="6436"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a187f08c5326d89319802162e33faff4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::parse</definition>
        <argsstring>(std::string commandline, bool program_name_included=false)</argsstring>
        <name>parse</name>
        <qualifiedname>CLI::App::parse</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>commandline</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>program_name_included</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a single string as if it contained command line arguments. This function splits the string into arguments then calls <ref refid="classCLI_1_1App_1a878c1067ade7145aa11478d64f5173ed" kindref="member">parse(std::vector&lt;std::string&gt; &amp;)</ref> the function takes an optional boolean argument specifying if the programName is included in the string to process </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6442" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6442" bodyend="6467"/>
        <references refid="namespaceCLI_1_1detail_1ac24078bb1f5e51808a5001a47d2b40c3" compoundref="CLI11_8hpp" startline="520" endline="530">CLI::detail::escape_detect</references>
        <references refid="namespaceCLI_1_1detail_1a59fbb1952b19838d8377ab714dc33e4c" compoundref="CLI11_8hpp" startline="454" endline="460">CLI::detail::find_and_modify</references>
        <references refid="namespaceCLI_1_1detail_1a86c8be4c04334eea7717547ed6816533" compoundref="CLI11_8hpp" startline="3717" endline="3760">CLI::detail::split_program_name</references>
        <references refid="namespaceCLI_1_1detail_1a53c98c658b23ec5530f755118d632f90" compoundref="CLI11_8hpp" startline="464" endline="514">CLI::detail::split_up</references>
        <references refid="namespaceCLI_1_1detail_1a621323632158048f6168deacc432b838" compoundref="CLI11_8hpp" startline="256" endline="256">CLI::detail::trim</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a878c1067ade7145aa11478d64f5173ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::parse</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;args)</argsstring>
        <name>parse</name>
        <qualifiedname>CLI::App::parse</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The real work is done here. Expects a reversed vector. Changes the vector to the remaining options. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6471" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6471" bodyend="6488"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a8ffb155a1153ee23d442c5bfed21225c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::parse</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;&amp;args)</argsstring>
        <name>parse</name>
        <qualifiedname>CLI::App::parse</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;&amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>The real work is done here. Expects a reversed vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6491" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6491" bodyend="6508"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a9ed2e72fa9f98fc3657afe120a0f6dff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::parse_from_stream</definition>
        <argsstring>(std::istream &amp;input)</argsstring>
        <name>parse_from_stream</name>
        <qualifiedname>CLI::App::parse_from_stream</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6510" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6510" bodyend="6519"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a75d7117019ea60a2f83d91f401aa9f4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::failure_message</definition>
        <argsstring>(std::function&lt; std::string(const App *, const Error &amp;e)&gt; function)</argsstring>
        <name>failure_message</name>
        <qualifiedname>CLI::App::failure_message</qualifiedname>
        <param>
          <type>std::function&lt; std::string(const <ref refid="classCLI_1_1App" kindref="compound">App</ref> *, const <ref refid="classCLI_1_1Error" kindref="compound">Error</ref> &amp;e)&gt;</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Provide a function to print a help message. The function gets access to the <ref refid="classCLI_1_1App" kindref="compound">App</ref> pointer and error. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6521" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6521" bodyend="6523"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aac000657ef11647125ba91af38fd7d9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CLI::App::exit</definition>
        <argsstring>(const Error &amp;e, std::ostream &amp;out=std::cout, std::ostream &amp;err=std::cerr) const</argsstring>
        <name>exit</name>
        <qualifiedname>CLI::App::exit</qualifiedname>
        <param>
          <type>const <ref refid="classCLI_1_1Error" kindref="compound">Error</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
          <defval>std::cout</defval>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>err</declname>
          <defval>std::cerr</defval>
        </param>
        <briefdescription>
<para>Print a nice error message and return the exit code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Avoid printing anything if this is a <ref refid="classCLI_1_1RuntimeError" kindref="compound">CLI::RuntimeError</ref></para>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6526" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6526" bodyend="6553"/>
        <references refid="namespaceCLI_1a97e7d97131e3889f32b721570eca119cab1c94ca2fbc3e78fc30069c8d0f01680">CLI::All</references>
        <references refid="classCLI_1_1Error_1a24faca884e953e6366bdb8d84d631588" compoundref="CLI11_8hpp" startline="601" endline="601">CLI::Error::get_exit_code</references>
        <references refid="classCLI_1_1Error_1a725f16d721c2320ba75b4d6c99d2056a" compoundref="CLI11_8hpp" startline="603" endline="603">CLI::Error::get_name</references>
        <references refid="namespaceCLI_1_1FailureMessage_1aa7e418b32b7d6f28aee8c4e5ad0bbc95" compoundref="CLI11_8hpp" startline="8375" endline="8379">CLI::FailureMessage::help</references>
        <references refid="namespaceCLI_1a1d8108a219533f0b0361640a017f037ea505a83f220c02df2f85c3810cd9ceb38">CLI::Success</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Basics</header>
      <memberdef kind="variable" id="classCLI_1_1App_1a61a36f7297a3199b9e789887510fa3fa" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CLI::App::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <qualifiedname>CLI::App::name_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Subcommand name or program name (from parser if name is empty) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5297" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1aa6a2e79e0a5990b44bc5d76504437fcd" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CLI::App::description_</definition>
        <argsstring></argsstring>
        <name>description_</name>
        <qualifiedname>CLI::App::description_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Description of the current program/subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5300" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ae994679fee098b93cbc654a99b8019ee" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::allow_extras_</definition>
        <argsstring></argsstring>
        <name>allow_extras_</name>
        <qualifiedname>CLI::App::allow_extras_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
<para>If true, allow extra arguments (ie, don&apos;t throw an error). INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5303" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a4ff932cdfe4237c0f63a00216d0d86b9" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceCLI_1a474d5665894fe9a318ddbdb9ebf194d4" kindref="member">config_extras_mode</ref></type>
        <definition>config_extras_mode CLI::App::allow_config_extras_</definition>
        <argsstring></argsstring>
        <name>allow_config_extras_</name>
        <qualifiedname>CLI::App::allow_config_extras_</qualifiedname>
        <initializer>{<ref refid="namespaceCLI_1a474d5665894fe9a318ddbdb9ebf194d4a567bc1d268f135496de3d5b946b691f3" kindref="member">config_extras_mode::ignore</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If ignore, allow extra arguments in the ini file (ie, don&apos;t throw an error). INHERITABLE if error error on an extra argument, and if capture feed it to the app </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5307" column="24" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ad9ad6cc617a88525ee966a7d49c6331e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::prefix_command_</definition>
        <argsstring></argsstring>
        <name>prefix_command_</name>
        <qualifiedname>CLI::App::prefix_command_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
<para>If true, return immediately on an unrecognized option (implies allow_extras) INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5310" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a76fcdccb7d70b6104b59390195f80112" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::has_automatic_name_</definition>
        <argsstring></argsstring>
        <name>has_automatic_name_</name>
        <qualifiedname>CLI::App::has_automatic_name_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
<para>If set to true the name was automatically generated from the command line vs a user set name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5313" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a42e3309983fe836cd26df3d1aadf08d6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::required_</definition>
        <argsstring></argsstring>
        <name>required_</name>
        <qualifiedname>CLI::App::required_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
<para>If set to true the subcommand is required to be processed and used, ignored for main app. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5316" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a405d0642ba4245a6ea61b230c4854667" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::disabled_</definition>
        <argsstring></argsstring>
        <name>disabled_</name>
        <qualifiedname>CLI::App::disabled_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
<para>If set to true the subcommand is disabled and cannot be used, ignored for main app. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5319" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5319" bodyend="-1"/>
        <referencedby refid="classCLI_1_1App_1aade2ac30d86141da0d55d9181ac8b710" compoundref="CLI11_8hpp" startline="8091" endline="8139">_compare_subcommand_names</referencedby>
        <referencedby refid="classCLI_1_1App_1a4e0c00ce18bbfca1ae890a653bbd2b93" compoundref="CLI11_8hpp" startline="7339" endline="7465">_process_requirements</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ac53aba006f3aae0cba0e4e9fd4c264ea" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::pre_parse_called_</definition>
        <argsstring></argsstring>
        <name>pre_parse_called_</name>
        <qualifiedname>CLI::App::pre_parse_called_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
<para>Flag indicating that the pre_parse_callback has been triggered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5322" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a99175d2ee21f9b1983acf62db0749f56" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CLI::App::immediate_callback_</definition>
        <argsstring></argsstring>
        <name>immediate_callback_</name>
        <qualifiedname>CLI::App::immediate_callback_</qualifiedname>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag indicating that the callback for the subcommand should be executed immediately on parse completion which is before help or ini files are processed. INHERITABLE </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5326" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ac296d0ff15f240ffe0a3ff14e49fdf19" prot="protected" static="no" mutable="no">
        <type>std::function&lt; void(std::size_t)&gt;</type>
        <definition>std::function&lt;void(std::size_t)&gt; CLI::App::pre_parse_callback_</definition>
        <argsstring></argsstring>
        <name>pre_parse_callback_</name>
        <qualifiedname>CLI::App::pre_parse_callback_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>This is a function that runs prior to the start of parsing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5329" column="19" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a5cbd4b05946428eefe79041bbafb7f0a" prot="protected" static="no" mutable="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>std::function&lt;void()&gt; CLI::App::parse_complete_callback_</definition>
        <argsstring></argsstring>
        <name>parse_complete_callback_</name>
        <qualifiedname>CLI::App::parse_complete_callback_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>This is a function that runs when parsing has finished. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5332" column="19" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a8c798351bee01da305e7b9570ac7dab2" prot="protected" static="no" mutable="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>std::function&lt;void()&gt; CLI::App::final_callback_</definition>
        <argsstring></argsstring>
        <name>final_callback_</name>
        <qualifiedname>CLI::App::final_callback_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>This is a function that runs when all processing has completed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5335" column="19" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5335" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Options</header>
      <memberdef kind="variable" id="classCLI_1_1App_1a34da062f6cc255048384b72e0ec6c276" prot="protected" static="no" mutable="no">
        <type><ref refid="classCLI_1_1OptionDefaults" kindref="compound">OptionDefaults</ref></type>
        <definition>OptionDefaults CLI::App::option_defaults_</definition>
        <argsstring></argsstring>
        <name>option_defaults_</name>
        <qualifiedname>CLI::App::option_defaults_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>The default values for options, customizable and changeable INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5342" column="20" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a862e55a8c1fe3676452aadc6a222f865" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceCLI_1a64b0009243a9d2e0dee466f0a1b04d59" kindref="member">Option_p</ref> &gt;</type>
        <definition>std::vector&lt;Option_p&gt; CLI::App::options_</definition>
        <argsstring></argsstring>
        <name>options_</name>
        <qualifiedname>CLI::App::options_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>The list of options, stored locally. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5345" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5345" bodyend="-1"/>
        <referencedby refid="classCLI_1_1App_1aaabfb31d7fb10ee7465716b948b376dc" compoundref="CLI11_8hpp" startline="8159" endline="8196">_move_option</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Help</header>
      <memberdef kind="variable" id="classCLI_1_1App_1a4fbf8b55a33e24d4c5a0532568dd7302" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CLI::App::footer_</definition>
        <argsstring></argsstring>
        <name>footer_</name>
        <qualifiedname>CLI::App::footer_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>Footer to put after all options in the help output INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5352" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a585c61650d02a0169122e55811d78d89" prot="protected" static="no" mutable="no">
        <type>std::function&lt; std::string()&gt;</type>
        <definition>std::function&lt;std::string()&gt; CLI::App::footer_callback_</definition>
        <argsstring></argsstring>
        <name>footer_callback_</name>
        <qualifiedname>CLI::App::footer_callback_</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
<para>This is a function that generates a footer to put after all other options in help output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5355" column="19" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1ac7ee114dd086a41f0f144416bcdba097" prot="protected" static="no" mutable="no">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option* CLI::App::help_ptr_</definition>
        <argsstring></argsstring>
        <name>help_ptr_</name>
        <qualifiedname>CLI::App::help_ptr_</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
<para>A pointer to the help flag if there is one INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5358" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a86d617145bbba16f8575159456f4c255" prot="protected" static="no" mutable="no">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option* CLI::App::help_all_ptr_</definition>
        <argsstring></argsstring>
        <name>help_all_ptr_</name>
        <qualifiedname>CLI::App::help_all_ptr_</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
<para>A pointer to the help all flag if there is one INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5361" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a537bfe9efbc1aa2f2d9a57740f847b4b" prot="protected" static="no" mutable="no">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option* CLI::App::version_ptr_</definition>
        <argsstring></argsstring>
        <name>version_ptr_</name>
        <qualifiedname>CLI::App::version_ptr_</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
<para>A pointer to a version flag if there is one. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5364" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1af55e852ed6e916b2b0182f46d6daabfc" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classCLI_1_1FormatterBase" kindref="compound">FormatterBase</ref> &gt;</type>
        <definition>std::shared_ptr&lt;FormatterBase&gt; CLI::App::formatter_</definition>
        <argsstring></argsstring>
        <name>formatter_</name>
        <qualifiedname>CLI::App::formatter_</qualifiedname>
        <initializer>{new <ref refid="classCLI_1_1Formatter" kindref="compound">Formatter</ref>()}</initializer>
        <briefdescription>
<para>This is the formatter for help printing. Default provided. INHERITABLE (same pointer) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5367" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1a716e2e750769c9e39c96921caddb1689" prot="protected" static="no" mutable="no">
        <type>std::function&lt; std::string(const <ref refid="classCLI_1_1App" kindref="compound">App</ref> *, const <ref refid="classCLI_1_1Error" kindref="compound">Error</ref> &amp;e)&gt;</type>
        <definition>std::function&lt;std::string(const App *, const Error &amp;e)&gt; CLI::App::failure_message_</definition>
        <argsstring></argsstring>
        <name>failure_message_</name>
        <qualifiedname>CLI::App::failure_message_</qualifiedname>
        <initializer>{<ref refid="namespaceCLI_1_1FailureMessage_1ab2a36cd7fb3b91628be43f31647f3c38" kindref="member">FailureMessage::simple</ref>}</initializer>
        <briefdescription>
<para>The error message printing function INHERITABLE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5370" column="19" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a7e9ada7d9c9c9799084d590ebe31e05a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::footer</definition>
        <argsstring>(std::string footer_string)</argsstring>
        <name>footer</name>
        <qualifiedname>CLI::App::footer</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>footer_string</declname>
        </param>
        <briefdescription>
<para>Set footer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6701" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6701" bodyend="6704"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ac8f976989332f945f16e6a1412ff0abd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::footer</definition>
        <argsstring>(std::function&lt; std::string()&gt; footer_function)</argsstring>
        <name>footer</name>
        <qualifiedname>CLI::App::footer</qualifiedname>
        <param>
          <type>std::function&lt; std::string()&gt;</type>
          <declname>footer_function</declname>
        </param>
        <briefdescription>
<para>Set footer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6706" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6706" bodyend="6709"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aca552f0b8af9eec4d079538e9efe0f06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CLI::App::config_to_str</definition>
        <argsstring>(bool default_also=false, bool write_description=false) const</argsstring>
        <name>config_to_str</name>
        <qualifiedname>CLI::App::config_to_str</qualifiedname>
        <param>
          <type>bool</type>
          <declname>default_also</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>write_description</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Produce a string that could be read in as a config of the current values of the <ref refid="classCLI_1_1App" kindref="compound">App</ref>. Set default_also to include default arguments. write_descriptions will print a description for the <ref refid="classCLI_1_1App" kindref="compound">App</ref> and for each option. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6712" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6712" bodyend="6714"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a2d6847ad9eec079214a61d834f29e35f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CLI::App::help</definition>
        <argsstring>(std::string prev=&quot;&quot;, AppFormatMode mode=AppFormatMode::Normal) const</argsstring>
        <name>help</name>
        <qualifiedname>CLI::App::help</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>prev</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type><ref refid="namespaceCLI_1a97e7d97131e3889f32b721570eca119c" kindref="member">AppFormatMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="namespaceCLI_1a97e7d97131e3889f32b721570eca119ca960b44c579bc2f6818d2daaf9e4c16f0" kindref="member">AppFormatMode::Normal</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes a help message, using the currently configured formatter Will only do one subcommand at a time </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6718" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6718" bodyend="6730"/>
        <references refid="classCLI_1_1Error_1a725f16d721c2320ba75b4d6c99d2056a" compoundref="CLI11_8hpp" startline="603" endline="603">CLI::Error::get_name</references>
        <referencedby refid="namespaceCLI_1_1FailureMessage_1aa7e418b32b7d6f28aee8c4e5ad0bbc95" compoundref="CLI11_8hpp" startline="8375" endline="8379">CLI::FailureMessage::help</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1acada3cd8a963944cfce74d1d90946433" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CLI::App::version</definition>
        <argsstring>() const</argsstring>
        <name>version</name>
        <qualifiedname>CLI::App::version</qualifiedname>
        <briefdescription>
<para>Displays a version string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6733" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6733" bodyend="6748"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Config</header>
      <memberdef kind="variable" id="classCLI_1_1App_1a16180e7605e07c7a3f8e6b458569bc02" prot="protected" static="no" mutable="no">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option* CLI::App::config_ptr_</definition>
        <argsstring></argsstring>
        <name>config_ptr_</name>
        <qualifiedname>CLI::App::config_ptr_</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
<para>Pointer to the config option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5475" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCLI_1_1App_1afec4182982dfca15a835ee7b3abf8660" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classCLI_1_1Config" kindref="compound">Config</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Config&gt; CLI::App::config_formatter_</definition>
        <argsstring></argsstring>
        <name>config_formatter_</name>
        <qualifiedname>CLI::App::config_formatter_</qualifiedname>
        <initializer>{new <ref refid="namespaceCLI_1a352933bfbcba692b1e860cfe0b580319" kindref="member">ConfigTOML</ref>()}</initializer>
        <briefdescription>
<para>This is the formatter for help printing. Default provided. INHERITABLE (same pointer) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5478" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5478" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Basic</header>
      <memberdef kind="function" id="classCLI_1_1App_1a61fe9472ef81b1503159511bb8e76430" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CLI::App::App</definition>
        <argsstring>(std::string app_description=&quot;&quot;, std::string app_name=&quot;&quot;)</argsstring>
        <name>App</name>
        <qualifiedname>CLI::App::App</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>app_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>app_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Create a new program. Pass in the same arguments as <ref refid="Sisi4s_8cxx_1a599af1d1867ff8a4fa0cf7be6fe311c8" kindref="member">main()</ref>, along with a help string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5521" column="14" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5521" bodyend="5524"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a5a64699da9234ec6e3b260f212602d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CLI::App::App</definition>
        <argsstring>(const App &amp;)=delete</argsstring>
        <name>App</name>
        <qualifiedname>CLI::App::App</qualifiedname>
        <param>
          <type>const <ref refid="classCLI_1_1App" kindref="compound">App</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5526" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aeb44de6d3b3216c28ef99ea04ab86f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> &amp;</type>
        <definition>App &amp; CLI::App::operator=</definition>
        <argsstring>(const App &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>CLI::App::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classCLI_1_1App" kindref="compound">App</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5527" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a8180d86b6a163d270f69ce6dd1c12e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual CLI::App::~App</definition>
        <argsstring>()=default</argsstring>
        <name>~App</name>
        <qualifiedname>CLI::App::~App</qualifiedname>
        <briefdescription>
<para>virtual destructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5530" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1af51ab8b76ecf5404a4ff442cec071d55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::callback</definition>
        <argsstring>(std::function&lt; void()&gt; app_callback)</argsstring>
        <name>callback</name>
        <qualifiedname>CLI::App::callback</qualifiedname>
        <param>
          <type>std::function&lt; void()&gt;</type>
          <declname>app_callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a callback for execution when all parsing and processing has completed</para>
<para>Due to a bug in c++11, it is not possible to overload on std::function (fixed in c++14 and backported to c++11 on newer compilers). Use capture by reference to get a pointer to <ref refid="classCLI_1_1App" kindref="compound">App</ref> if needed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5538" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5538" bodyend="5545"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ac2db60eae7dc5f2b2210907fe671c00d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::final_callback</definition>
        <argsstring>(std::function&lt; void()&gt; app_callback)</argsstring>
        <name>final_callback</name>
        <qualifiedname>CLI::App::final_callback</qualifiedname>
        <param>
          <type>std::function&lt; void()&gt;</type>
          <declname>app_callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a callback for execution when all parsing and processing has completed aliased as callback </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5549" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5549" bodyend="5552"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aa10431ed3422e954193e60ce7c2ddc9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::parse_complete_callback</definition>
        <argsstring>(std::function&lt; void()&gt; pc_callback)</argsstring>
        <name>parse_complete_callback</name>
        <qualifiedname>CLI::App::parse_complete_callback</qualifiedname>
        <param>
          <type>std::function&lt; void()&gt;</type>
          <declname>pc_callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a callback to execute when parsing has completed for the app </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5556" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5556" bodyend="5559"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a94045b9a983dd80d8fa1b477422c7849" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::preparse_callback</definition>
        <argsstring>(std::function&lt; void(std::size_t)&gt; pp_callback)</argsstring>
        <name>preparse_callback</name>
        <qualifiedname>CLI::App::preparse_callback</qualifiedname>
        <param>
          <type>std::function&lt; void(std::size_t)&gt;</type>
          <declname>pp_callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a callback to execute prior to parsing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5563" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5563" bodyend="5566"/>
        <referencedby refid="namespaceCLI_1ae611995dabf1e7d4a2480f1952ef6ba7" compoundref="CLI11_8hpp" startline="8254" endline="8258">CLI::TriggerOff</referencedby>
        <referencedby refid="namespaceCLI_1a495f418aefacfdfbe91642a18f60d77c" compoundref="CLI11_8hpp" startline="8233" endline="8237">CLI::TriggerOn</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a76d7d45b60647632df392dd5e696877a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::name</definition>
        <argsstring>(std::string app_name=&quot;&quot;)</argsstring>
        <name>name</name>
        <qualifiedname>CLI::App::name</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>app_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Set a name for the app (empty will use parser to set the name) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5569" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5569" bodyend="5584"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ad5d02ee857879c6abd007c8293a1151a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::alias</definition>
        <argsstring>(std::string app_name)</argsstring>
        <name>alias</name>
        <qualifiedname>CLI::App::alias</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>app_name</declname>
        </param>
        <briefdescription>
<para>Set an alias for the app. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5587" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5587" bodyend="5603"/>
        <references refid="namespaceCLI_1_1detail_1ac75f9ea4aa9649b9b3890bdcbc64b75a" compoundref="CLI11_8hpp" startline="360" endline="363">CLI::detail::valid_alias_name_string</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a2b96da449b181995ea3b5a7f59c6f9e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::allow_extras</definition>
        <argsstring>(bool allow=true)</argsstring>
        <name>allow_extras</name>
        <qualifiedname>CLI::App::allow_extras</qualifiedname>
        <param>
          <type>bool</type>
          <declname>allow</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Remove the error when extras are left over on the command line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5606" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5606" bodyend="5609"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a524f69f8f19262e1c9c0eb354d75178e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::required</definition>
        <argsstring>(bool require=true)</argsstring>
        <name>required</name>
        <qualifiedname>CLI::App::required</qualifiedname>
        <param>
          <type>bool</type>
          <declname>require</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Remove the error when extras are left over on the command line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5612" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5612" bodyend="5615"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1af5104a0ae06292a8cef25e428ce533c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::disabled</definition>
        <argsstring>(bool disable=true)</argsstring>
        <name>disabled</name>
        <qualifiedname>CLI::App::disabled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>disable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Disable the subcommand or option group. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5618" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5618" bodyend="5621"/>
        <referencedby refid="namespaceCLI_1ae611995dabf1e7d4a2480f1952ef6ba7" compoundref="CLI11_8hpp" startline="8254" endline="8258">CLI::TriggerOff</referencedby>
        <referencedby refid="namespaceCLI_1a495f418aefacfdfbe91642a18f60d77c" compoundref="CLI11_8hpp" startline="8233" endline="8237">CLI::TriggerOn</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a2902a7d858f3e43f19ede103d68454d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::silent</definition>
        <argsstring>(bool silence=true)</argsstring>
        <name>silent</name>
        <qualifiedname>CLI::App::silent</qualifiedname>
        <param>
          <type>bool</type>
          <declname>silence</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>silence the subcommand from showing up in the processed list </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5624" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5624" bodyend="5627"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a1d4af11ac48929ee486482ea7b2cfe4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::disabled_by_default</definition>
        <argsstring>(bool disable=true)</argsstring>
        <name>disabled_by_default</name>
        <qualifiedname>CLI::App::disabled_by_default</qualifiedname>
        <param>
          <type>bool</type>
          <declname>disable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Set the subcommand to be disabled by default, so on <ref refid="classCLI_1_1App_1a6b5a085a039cab7e5906b3cd4407fdc8" kindref="member">clear()</ref>, at the start of each parse it is disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5630" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5630" bodyend="5637"/>
        <referencedby refid="namespaceCLI_1ae611995dabf1e7d4a2480f1952ef6ba7" compoundref="CLI11_8hpp" startline="8254" endline="8258">CLI::TriggerOff</referencedby>
        <referencedby refid="namespaceCLI_1a495f418aefacfdfbe91642a18f60d77c" compoundref="CLI11_8hpp" startline="8233" endline="8237">CLI::TriggerOn</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a7d58a9da106a0fb723eda4bd56017523" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::enabled_by_default</definition>
        <argsstring>(bool enable=true)</argsstring>
        <name>enabled_by_default</name>
        <qualifiedname>CLI::App::enabled_by_default</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the subcommand to be enabled by default, so on <ref refid="classCLI_1_1App_1a6b5a085a039cab7e5906b3cd4407fdc8" kindref="member">clear()</ref>, at the start of each parse it is enabled (not disabled) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5641" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5641" bodyend="5649"/>
        <referencedby refid="namespaceCLI_1ae611995dabf1e7d4a2480f1952ef6ba7" compoundref="CLI11_8hpp" startline="8254" endline="8258">CLI::TriggerOff</referencedby>
        <referencedby refid="namespaceCLI_1a495f418aefacfdfbe91642a18f60d77c" compoundref="CLI11_8hpp" startline="8233" endline="8237">CLI::TriggerOn</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aed10b824c3f4aa9e0a3373556f916494" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::immediate_callback</definition>
        <argsstring>(bool immediate=true)</argsstring>
        <name>immediate_callback</name>
        <qualifiedname>CLI::App::immediate_callback</qualifiedname>
        <param>
          <type>bool</type>
          <declname>immediate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Set the subcommand callback to be executed immediately on subcommand completion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5652" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5652" bodyend="5662"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ac7083bfa334d1ca3813e6f051089c746" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::validate_positionals</definition>
        <argsstring>(bool validate=true)</argsstring>
        <name>validate_positionals</name>
        <qualifiedname>CLI::App::validate_positionals</qualifiedname>
        <param>
          <type>bool</type>
          <declname>validate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Set the subcommand to validate positional arguments before assigning. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5665" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5665" bodyend="5668"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a1d30edba47f893dd7ca501a1aa3cad68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::allow_config_extras</definition>
        <argsstring>(bool allow=true)</argsstring>
        <name>allow_config_extras</name>
        <qualifiedname>CLI::App::allow_config_extras</qualifiedname>
        <param>
          <type>bool</type>
          <declname>allow</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>ignore extras in config files </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5671" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5671" bodyend="5679"/>
        <references refid="namespaceCLI_1a474d5665894fe9a318ddbdb9ebf194d4ad7ba9bbfda42b9657f14ee37ef76150b">CLI::capture</references>
        <references refid="namespaceCLI_1a474d5665894fe9a318ddbdb9ebf194d4acb5e100e5a9a3e7f6d1fd97512215282">CLI::error</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ae572bd2298ca903644fd1c5047022d2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::allow_config_extras</definition>
        <argsstring>(config_extras_mode mode)</argsstring>
        <name>allow_config_extras</name>
        <qualifiedname>CLI::App::allow_config_extras</qualifiedname>
        <param>
          <type><ref refid="namespaceCLI_1a474d5665894fe9a318ddbdb9ebf194d4" kindref="member">config_extras_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>ignore extras in config files </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5682" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5682" bodyend="5685"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a570b386365a649df34cfc81f6448657f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::prefix_command</definition>
        <argsstring>(bool allow=true)</argsstring>
        <name>prefix_command</name>
        <qualifiedname>CLI::App::prefix_command</qualifiedname>
        <param>
          <type>bool</type>
          <declname>allow</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Do not parse anything after the first unrecognized option and return. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5688" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5688" bodyend="5691"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a1e0b05ed58f80301b945ffc344b61aa3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::ignore_case</definition>
        <argsstring>(bool value=true)</argsstring>
        <name>ignore_case</name>
        <qualifiedname>CLI::App::ignore_case</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Ignore case. Subcommands inherit value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5694" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5694" bodyend="5706"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a65169602d26681f9cfaad44c9d2fbf0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::allow_windows_style_options</definition>
        <argsstring>(bool value=true)</argsstring>
        <name>allow_windows_style_options</name>
        <qualifiedname>CLI::App::allow_windows_style_options</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allow windows style options, such as <computeroutput>/opt</computeroutput>. First matching short or long name used. Subcommands inherit value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5710" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5710" bodyend="5713"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ad207c2a9f169fd173c84ef469e55ed16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::positionals_at_end</definition>
        <argsstring>(bool value=true)</argsstring>
        <name>positionals_at_end</name>
        <qualifiedname>CLI::App::positionals_at_end</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Specify that the positional arguments are only at the end of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5716" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5716" bodyend="5719"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a086b24469af0c346e40bf20e4882c04b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::configurable</definition>
        <argsstring>(bool value=true)</argsstring>
        <name>configurable</name>
        <qualifiedname>CLI::App::configurable</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Specify that the subcommand can be triggered by a config file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5722" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5722" bodyend="5725"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aca4afbde81a59b25fc514b960d472c08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::ignore_underscore</definition>
        <argsstring>(bool value=true)</argsstring>
        <name>ignore_underscore</name>
        <qualifiedname>CLI::App::ignore_underscore</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Ignore underscore. Subcommands inherit value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5728" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5728" bodyend="5740"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1adbae107812ed5c9cc0aa36b7dfa7a842" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::formatter</definition>
        <argsstring>(std::shared_ptr&lt; FormatterBase &gt; fmt)</argsstring>
        <name>formatter</name>
        <qualifiedname>CLI::App::formatter</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classCLI_1_1FormatterBase" kindref="compound">FormatterBase</ref> &gt;</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
<para>Set the help formatter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5743" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5743" bodyend="5746"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aa3a31c069f2e85cb474fe80ec2c9d883" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::formatter_fn</definition>
        <argsstring>(std::function&lt; std::string(const App *, std::string, AppFormatMode)&gt; fmt)</argsstring>
        <name>formatter_fn</name>
        <qualifiedname>CLI::App::formatter_fn</qualifiedname>
        <param>
          <type>std::function&lt; std::string(const <ref refid="classCLI_1_1App" kindref="compound">App</ref> *, std::string, <ref refid="namespaceCLI_1a97e7d97131e3889f32b721570eca119c" kindref="member">AppFormatMode</ref>)&gt;</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
<para>Set the help formatter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5749" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5749" bodyend="5752"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a1b0a61f1f300a7e9645562c29de2f2bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::config_formatter</definition>
        <argsstring>(std::shared_ptr&lt; Config &gt; fmt)</argsstring>
        <name>config_formatter</name>
        <qualifiedname>CLI::App::config_formatter</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classCLI_1_1Config" kindref="compound">Config</ref> &gt;</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
<para>Set the config formatter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5755" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5755" bodyend="5758"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a31f30e3313c5d0d2646556b0e232bbbc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::parsed</definition>
        <argsstring>() const</argsstring>
        <name>parsed</name>
        <qualifiedname>CLI::App::parsed</qualifiedname>
        <briefdescription>
<para>Check to see if this subcommand was parsed, true only if received on command line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5761" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5761" bodyend="5761"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a4d49e9bf0fc5cc2a99aefd13c3ecd3bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1OptionDefaults" kindref="compound">OptionDefaults</ref> *</type>
        <definition>OptionDefaults * CLI::App::option_defaults</definition>
        <argsstring>()</argsstring>
        <name>option_defaults</name>
        <qualifiedname>CLI::App::option_defaults</qualifiedname>
        <briefdescription>
<para>Get the OptionDefault object, to set option defaults. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5764" column="20" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5764" bodyend="5764"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Adding options</header>
      <memberdef kind="function" id="classCLI_1_1App_1a8c812d42c7720ecb5cd0aec41b5aa941" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_option</definition>
        <argsstring>(std::string option_name, callback_t option_callback, std::string option_description=&quot;&quot;, bool defaulted=false, std::function&lt; std::string()&gt; func={})</argsstring>
        <name>add_option</name>
        <qualifiedname>CLI::App::add_option</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>option_name</declname>
        </param>
        <param>
          <type><ref refid="namespaceCLI_1ac9e16923ffafaa89111b4a134267ce20" kindref="member">callback_t</ref></type>
          <declname>option_callback</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>option_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>defaulted</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>std::function&lt; std::string()&gt;</type>
          <declname>func</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an option, will automatically understand the type for common types.</para>
<para>To use, create a variable with the expected type, and pass it in after the name. After start is called, you can use count to see if the value was passed, and the value will be initialized properly. Numbers, vectors, and strings are supported.</para>
<para>-&gt;<ref refid="classCLI_1_1App_1a524f69f8f19262e1c9c0eb354d75178e" kindref="member">required()</ref>, -&gt;default, and the validators are options, The positional options take an optional number of arguments.</para>
<para>For example, <verbatim>std::string filename;
program.add_option(&quot;filename&quot;, filename, &quot;description of filename&quot;);
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5784" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5784" bodyend="5823"/>
        <referencedby refid="structsisi4s_1_1Options_1a6683d7ed27952a4813bb0fae54e17cc0" compoundref="Options_8cxx" startline="8" endline="45">sisi4s::Options::Options</referencedby>
        <referencedby refid="namespaceCLI_1a36cfe4a6a80bf143735c0b80960bc252" compoundref="CLI11_8hpp" startline="8302" endline="8324">CLI::retire_option</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a424261859a15ab1426dafb5c3d64eaed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AssignTo</type>
          </param>
          <param>
            <type>typename ConvertTo</type>
            <defval>AssignTo</defval>
          </param>
          <param>
            <type><ref refid="namespaceCLI_1a17b4ff2556876f1f42e0d585542a1578" kindref="member">enable_if_t</ref>&lt;!std::is_const&lt; ConvertTo &gt;::value, <ref refid="namespaceCLI_1_1detail_1af27dda5da343e609526e3dacf435b1c6" kindref="member">detail::enabler</ref> &gt;</type>
            <defval><ref refid="namespaceCLI_1_1detail_1a01c35a876e2917ffdc1ee618e0c06619" kindref="member">detail::dummy</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_option</definition>
        <argsstring>(std::string option_name, AssignTo &amp;variable, std::string option_description=&quot;&quot;)</argsstring>
        <name>add_option</name>
        <qualifiedname>CLI::App::add_option</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>option_name</declname>
        </param>
        <param>
          <type>AssignTo &amp;</type>
          <declname>variable</declname>
          <briefdescription><para>The variable to set </para>
</briefdescription>
        </param>
        <param>
          <type>std::string</type>
          <declname>option_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Add option for assigning to a variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5829" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5829" bodyend="5849"/>
        <references refid="classCLI_1_1Option_1a66d22991355232198a3da4b395847eba" compoundref="CLI11_8hpp" startline="4286" endline="4305">CLI::Option::expected</references>
        <references refid="classCLI_1_1Option_1a81a26e9320e4ec616fbbd6fa3ad60ef7" compoundref="CLI11_8hpp" startline="4352" endline="4355">CLI::Option::run_callback_for_default</references>
        <references refid="classCLI_1_1Option_1a1fcb3c625eeca46ef953732a71403027" compoundref="CLI11_8hpp" startline="4986" endline="4989">CLI::Option::type_name</references>
        <references refid="classCLI_1_1Option_1a8914e4810b213c5e23359d61a70c5ac1" compoundref="CLI11_8hpp" startline="4992" endline="5009">CLI::Option::type_size</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a18d7c8077e7a02a83b374df9bd5204a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AssignTo</type>
          </param>
          <param>
            <type><ref refid="namespaceCLI_1a17b4ff2556876f1f42e0d585542a1578" kindref="member">enable_if_t</ref>&lt;!std::is_const&lt; AssignTo &gt;::value, <ref refid="namespaceCLI_1_1detail_1af27dda5da343e609526e3dacf435b1c6" kindref="member">detail::enabler</ref> &gt;</type>
            <defval><ref refid="namespaceCLI_1_1detail_1a01c35a876e2917ffdc1ee618e0c06619" kindref="member">detail::dummy</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_option_no_stream</definition>
        <argsstring>(std::string option_name, AssignTo &amp;variable, std::string option_description=&quot;&quot;)</argsstring>
        <name>add_option_no_stream</name>
        <qualifiedname>CLI::App::add_option_no_stream</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>option_name</declname>
        </param>
        <param>
          <type>AssignTo &amp;</type>
          <declname>variable</declname>
          <briefdescription><para>The variable to set </para>
</briefdescription>
        </param>
        <param>
          <type>std::string</type>
          <declname>option_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Add option for assigning to a variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5853" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5853" bodyend="5867"/>
        <references refid="classCLI_1_1Option_1a66d22991355232198a3da4b395847eba" compoundref="CLI11_8hpp" startline="4286" endline="4305">CLI::Option::expected</references>
        <references refid="classCLI_1_1Option_1a81a26e9320e4ec616fbbd6fa3ad60ef7" compoundref="CLI11_8hpp" startline="4352" endline="4355">CLI::Option::run_callback_for_default</references>
        <references refid="classCLI_1_1Option_1a1fcb3c625eeca46ef953732a71403027" compoundref="CLI11_8hpp" startline="4986" endline="4989">CLI::Option::type_name</references>
        <references refid="classCLI_1_1Option_1a8914e4810b213c5e23359d61a70c5ac1" compoundref="CLI11_8hpp" startline="4992" endline="5009">CLI::Option::type_size</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a69553182f587b733f323589eecbd8491" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArgType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_option_function</definition>
        <argsstring>(std::string option_name, const std::function&lt; void(const ArgType &amp;)&gt; &amp;func, std::string option_description=&quot;&quot;)</argsstring>
        <name>add_option_function</name>
        <qualifiedname>CLI::App::add_option_function</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>option_name</declname>
        </param>
        <param>
          <type>const std::function&lt; void(const ArgType &amp;)&gt; &amp;</type>
          <declname>func</declname>
          <briefdescription><para>the callback to execute </para>
</briefdescription>
        </param>
        <param>
          <type>std::string</type>
          <declname>option_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Add option for a callback of a specific type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5871" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5871" bodyend="5889"/>
        <references refid="classCLI_1_1Option_1a66d22991355232198a3da4b395847eba" compoundref="CLI11_8hpp" startline="4286" endline="4305">CLI::Option::expected</references>
        <references refid="classCLI_1_1Option_1a1fcb3c625eeca46ef953732a71403027" compoundref="CLI11_8hpp" startline="4986" endline="4989">CLI::Option::type_name</references>
        <references refid="classCLI_1_1Option_1a8914e4810b213c5e23359d61a70c5ac1" compoundref="CLI11_8hpp" startline="4992" endline="5009">CLI::Option::type_size</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a19952423983d5be5f723fca7f8d559b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_option</definition>
        <argsstring>(std::string option_name)</argsstring>
        <name>add_option</name>
        <qualifiedname>CLI::App::add_option</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>option_name</declname>
        </param>
        <briefdescription>
<para>Add option with no description or variable assignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5892" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5892" bodyend="5894"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1adde13292800e001d834a97ebfda9e414" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespaceCLI_1a17b4ff2556876f1f42e0d585542a1578" kindref="member">enable_if_t</ref>&lt; std::is_const&lt; T &gt;::value &amp;&amp;std::is_constructible&lt; std::string, T &gt;::value, <ref refid="namespaceCLI_1_1detail_1af27dda5da343e609526e3dacf435b1c6" kindref="member">detail::enabler</ref> &gt;</type>
            <defval><ref refid="namespaceCLI_1_1detail_1a01c35a876e2917ffdc1ee618e0c06619" kindref="member">detail::dummy</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_option</definition>
        <argsstring>(std::string option_name, T &amp;option_description)</argsstring>
        <name>add_option</name>
        <qualifiedname>CLI::App::add_option</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>option_name</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>option_description</declname>
        </param>
        <briefdescription>
<para>Add option with description but with no variable assignment or callback. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5900" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5900" bodyend="5902"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a3c50003e414891b24dc21455b5ccafbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::set_help_flag</definition>
        <argsstring>(std::string flag_name=&quot;&quot;, const std::string &amp;help_description=&quot;&quot;)</argsstring>
        <name>set_help_flag</name>
        <qualifiedname>CLI::App::set_help_flag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>flag_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>help_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Set a help flag, replace the existing one if present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5905" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5905" bodyend="5919"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aa43461449f0f3c3d7bb8fd807d0cc72c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::set_help_all_flag</definition>
        <argsstring>(std::string help_name=&quot;&quot;, const std::string &amp;help_description=&quot;&quot;)</argsstring>
        <name>set_help_all_flag</name>
        <qualifiedname>CLI::App::set_help_all_flag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>help_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>help_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Set a help all flag, replaced the existing one if present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5922" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5922" bodyend="5936"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a21f52214377bd593360d61add2d9edc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::set_version_flag</definition>
        <argsstring>(std::string flag_name=&quot;&quot;, const std::string &amp;versionString=&quot;&quot;, const std::string &amp;version_help=&quot;Display program version information and exit&quot;)</argsstring>
        <name>set_version_flag</name>
        <qualifiedname>CLI::App::set_version_flag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>flag_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>versionString</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>version_help</declname>
          <defval>&quot;Display program <ref refid="classCLI_1_1App_1acada3cd8a963944cfce74d1d90946433" kindref="member">version</ref> information and <ref refid="classCLI_1_1App_1aac000657ef11647125ba91af38fd7d9c" kindref="member">exit</ref>&quot;</defval>
        </param>
        <briefdescription>
<para>Set a version flag and version display string, replace the existing one if present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5939" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5939" bodyend="5956"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a1654d90113925908d2a5680f3299629c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::set_version_flag</definition>
        <argsstring>(std::string flag_name, std::function&lt; std::string()&gt; vfunc, const std::string &amp;version_help=&quot;Display program version information and exit&quot;)</argsstring>
        <name>set_version_flag</name>
        <qualifiedname>CLI::App::set_version_flag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>flag_name</declname>
        </param>
        <param>
          <type>std::function&lt; std::string()&gt;</type>
          <declname>vfunc</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>version_help</declname>
          <defval>&quot;Display program <ref refid="classCLI_1_1App_1acada3cd8a963944cfce74d1d90946433" kindref="member">version</ref> information and <ref refid="classCLI_1_1App_1aac000657ef11647125ba91af38fd7d9c" kindref="member">exit</ref>&quot;</defval>
        </param>
        <briefdescription>
<para>Generate the version string through a callback function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5958" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5958" bodyend="5974"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a5fef22317a182fa5db1d7b1af4c89c68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_flag</definition>
        <argsstring>(std::string flag_name)</argsstring>
        <name>add_flag</name>
        <qualifiedname>CLI::App::add_flag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>flag_name</declname>
        </param>
        <briefdescription>
<para>Add a flag with no description or variable assignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6005" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6005" bodyend="6005"/>
        <referencedby refid="structsisi4s_1_1Options_1a6683d7ed27952a4813bb0fae54e17cc0" compoundref="Options_8cxx" startline="8" endline="45">sisi4s::Options::Options</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a9d90690615fe532170d0db4829ff6d78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespaceCLI_1a17b4ff2556876f1f42e0d585542a1578" kindref="member">enable_if_t</ref>&lt; std::is_const&lt; T &gt;::value &amp;&amp;std::is_constructible&lt; std::string, T &gt;::value, <ref refid="namespaceCLI_1_1detail_1af27dda5da343e609526e3dacf435b1c6" kindref="member">detail::enabler</ref> &gt;</type>
            <defval><ref refid="namespaceCLI_1_1detail_1a01c35a876e2917ffdc1ee618e0c06619" kindref="member">detail::dummy</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_flag</definition>
        <argsstring>(std::string flag_name, T &amp;flag_description)</argsstring>
        <name>add_flag</name>
        <qualifiedname>CLI::App::add_flag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>flag_name</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>flag_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add flag with description but with no variable assignment or callback takes a constant string, if a variable string is passed that variable will be assigned the results from the flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6013" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6013" bodyend="6015"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a460d387f503d26ea8d3fe1be51fbc2fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespaceCLI_1a17b4ff2556876f1f42e0d585542a1578" kindref="member">enable_if_t</ref>&lt; std::is_constructible&lt; T, std::int64_t &gt;::value &amp;&amp;!<ref refid="structCLI_1_1is__bool" kindref="compound">is_bool</ref>&lt; T &gt;::value, <ref refid="namespaceCLI_1_1detail_1af27dda5da343e609526e3dacf435b1c6" kindref="member">detail::enabler</ref> &gt;</type>
            <defval><ref refid="namespaceCLI_1_1detail_1a01c35a876e2917ffdc1ee618e0c06619" kindref="member">detail::dummy</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_flag</definition>
        <argsstring>(std::string flag_name, T &amp;flag_count, std::string flag_description=&quot;&quot;)</argsstring>
        <name>add_flag</name>
        <qualifiedname>CLI::App::add_flag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>flag_name</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>flag_count</declname>
          <briefdescription><para>A variable holding the count </para>
</briefdescription>
        </param>
        <param>
          <type>std::string</type>
          <declname>flag_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add option for flag with integer result - defaults to allowing multiple passings, but can be forced to one if <computeroutput>multi_option_policy(CLI::MultiOptionPolicy::Throw)</computeroutput> is used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6022" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6022" bodyend="6036"/>
        <references refid="namespaceCLI_1a991a3264d3459575fc7e83eb54d73d2ba571fa4972dd227b4097ab6a774ca1263">CLI::TakeAll</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ae57cc5d74770a14633dbb17973255b14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespaceCLI_1a17b4ff2556876f1f42e0d585542a1578" kindref="member">enable_if_t</ref>&lt;!<ref refid="structCLI_1_1detail_1_1is__mutable__container" kindref="compound">detail::is_mutable_container</ref>&lt; T &gt;::value &amp;&amp;!std::is_const&lt; T &gt;::value &amp;&amp;(!std::is_constructible&lt; T, std::int64_t &gt;::value||<ref refid="structCLI_1_1is__bool" kindref="compound">is_bool</ref>&lt; T &gt;::value) &amp;&amp;!std::is_constructible&lt; std::function&lt; void(int)&gt;, T &gt;::value, <ref refid="namespaceCLI_1_1detail_1af27dda5da343e609526e3dacf435b1c6" kindref="member">detail::enabler</ref> &gt;</type>
            <defval><ref refid="namespaceCLI_1_1detail_1a01c35a876e2917ffdc1ee618e0c06619" kindref="member">detail::dummy</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_flag</definition>
        <argsstring>(std::string flag_name, T &amp;flag_result, std::string flag_description=&quot;&quot;)</argsstring>
        <name>add_flag</name>
        <qualifiedname>CLI::App::add_flag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>flag_name</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>flag_result</declname>
          <briefdescription><para>A variable holding true if passed </para>
</briefdescription>
        </param>
        <param>
          <type>std::string</type>
          <declname>flag_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Other type version accepts all other types that are not vectors such as bool, enum, string or other classes that can be converted from a string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6045" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6045" bodyend="6053"/>
        <references refid="namespaceCLI_1_1detail_1af286727de86fce444325681379e2c511" compoundref="CLI11_8hpp" startline="1717" endline="1719">CLI::detail::lexical_cast</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aba52c086839e22901b835dfa3c13337c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type><ref refid="namespaceCLI_1a17b4ff2556876f1f42e0d585542a1578" kindref="member">enable_if_t</ref>&lt;!std::is_assignable&lt; std::function&lt; void(std::int64_t)&gt; &amp;, T &gt;::value, <ref refid="namespaceCLI_1_1detail_1af27dda5da343e609526e3dacf435b1c6" kindref="member">detail::enabler</ref> &gt;</type>
            <defval><ref refid="namespaceCLI_1_1detail_1a01c35a876e2917ffdc1ee618e0c06619" kindref="member">detail::dummy</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_flag</definition>
        <argsstring>(std::string flag_name, std::vector&lt; T &gt; &amp;flag_results, std::string flag_description=&quot;&quot;)</argsstring>
        <name>add_flag</name>
        <qualifiedname>CLI::App::add_flag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>flag_name</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>flag_results</declname>
          <briefdescription><para>A vector of values with the flag results </para>
</briefdescription>
        </param>
        <param>
          <type>std::string</type>
          <declname>flag_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Vector version to capture multiple flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6059" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6059" bodyend="6073"/>
        <references refid="namespaceCLI_1_1detail_1af286727de86fce444325681379e2c511" compoundref="CLI11_8hpp" startline="1717" endline="1719">CLI::detail::lexical_cast</references>
        <references refid="namespaceCLI_1a991a3264d3459575fc7e83eb54d73d2ba571fa4972dd227b4097ab6a774ca1263">CLI::TakeAll</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ab22c360f5d16d201329f260c927a1c9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_flag_callback</definition>
        <argsstring>(std::string flag_name, std::function&lt; void(void)&gt; function, std::string flag_description=&quot;&quot;)</argsstring>
        <name>add_flag_callback</name>
        <qualifiedname>CLI::App::add_flag_callback</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>flag_name</declname>
        </param>
        <param>
          <type>std::function&lt; void(void)&gt;</type>
          <declname>function</declname>
          <briefdescription><para>A function to call, void(void) </para>
</briefdescription>
        </param>
        <param>
          <type>std::string</type>
          <declname>flag_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Add option for callback that is triggered with a true flag and takes no arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6076" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6076" bodyend="6089"/>
        <references refid="namespaceCLI_1_1detail_1af286727de86fce444325681379e2c511" compoundref="CLI11_8hpp" startline="1717" endline="1719">CLI::detail::lexical_cast</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1af183463c4f34847ef4b828b65ade55ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::add_flag_function</definition>
        <argsstring>(std::string flag_name, std::function&lt; void(std::int64_t)&gt; function, std::string flag_description=&quot;&quot;)</argsstring>
        <name>add_flag_function</name>
        <qualifiedname>CLI::App::add_flag_function</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>flag_name</declname>
        </param>
        <param>
          <type>std::function&lt; void(std::int64_t)&gt;</type>
          <declname>function</declname>
          <briefdescription><para>A function to call, void(int) </para>
</briefdescription>
        </param>
        <param>
          <type>std::string</type>
          <declname>flag_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Add option for callback with an integer value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6092" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6092" bodyend="6104"/>
        <references refid="namespaceCLI_1a991a3264d3459575fc7e83eb54d73d2ba571fa4972dd227b4097ab6a774ca1263">CLI::TakeAll</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ac19591506ff296bdf6d0d23fa42a7c20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::set_config</definition>
        <argsstring>(std::string option_name=&quot;&quot;, std::string default_filename=&quot;&quot;, const std::string &amp;help_message=&quot;Read an ini file&quot;, bool config_required=false)</argsstring>
        <name>set_config</name>
        <qualifiedname>CLI::App::set_config</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>option_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>default_filename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>help_message</declname>
          <defval>&quot;Read an ini file&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>config_required</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Set a configuration ini file option, or clear it if no name passed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6116" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6116" bodyend="6140"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a3058b128735eec0813589b56c5453115" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::remove_option</definition>
        <argsstring>(Option *opt)</argsstring>
        <name>remove_option</name>
        <qualifiedname>CLI::App::remove_option</qualifiedname>
        <param>
          <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
<para>Removes an option from the <ref refid="classCLI_1_1App" kindref="compound">App</ref>. Takes an option pointer. Returns true if found and removed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6143" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6143" bodyend="6162"/>
        <referencedby refid="namespaceCLI_1a36cfe4a6a80bf143735c0b80960bc252" compoundref="CLI11_8hpp" startline="8302" endline="8324">CLI::retire_option</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a5e114076a7cfa20a5895e9f6e8fd7dd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval><ref refid="classCLI_1_1Option__group" kindref="compound">Option_group</ref></defval>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * CLI::App::add_option_group</definition>
        <argsstring>(std::string group_name, std::string group_description=&quot;&quot;)</argsstring>
        <name>add_option_group</name>
        <qualifiedname>CLI::App::add_option_group</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>group_name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>group_description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>creates an option group as part of the given app </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6166" column="7" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6166" bodyend="6176"/>
        <references refid="namespaceCLI_1_1detail_1ac75f9ea4aa9649b9b3890bdcbc64b75a" compoundref="CLI11_8hpp" startline="360" endline="363">CLI::detail::valid_alias_name_string</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a02e0d1728f29f165cd485ae8574bcd24" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::_add_flag_internal</definition>
        <argsstring>(std::string flag_name, CLI::callback_t fun, std::string flag_description)</argsstring>
        <name>_add_flag_internal</name>
        <qualifiedname>CLI::App::_add_flag_internal</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>flag_name</declname>
        </param>
        <param>
          <type><ref refid="namespaceCLI_1ac9e16923ffafaa89111b4a134267ce20" kindref="member">CLI::callback_t</ref></type>
          <declname>fun</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>flag_description</declname>
        </param>
        <briefdescription>
<para>Internal function for adding a flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5978" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5978" bodyend="6001"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Extras for subclassing</header>
      <memberdef kind="function" id="classCLI_1_1App_1a5d74be8e210e779874584a3336aaf506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CLI::App::pre_callback</definition>
        <argsstring>()</argsstring>
        <name>pre_callback</name>
        <qualifiedname>CLI::App::pre_callback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This allows subclasses to inject code before callbacks but after parse.</para>
<para>This does not run if any errors or help is thrown. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6400" column="18" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6400" bodyend="6400"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Post parsing</header>
      <memberdef kind="function" id="classCLI_1_1App_1a89776486006cb61d112ae1cdd73848e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::count</definition>
        <argsstring>(std::string option_name) const</argsstring>
        <name>count</name>
        <qualifiedname>CLI::App::count</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>option_name</declname>
        </param>
        <briefdescription>
<para>Counts the number of times the given option was passed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6560" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6560" bodyend="6560"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a6b4b0c02d0c3d08b534fb93737056751" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classCLI_1_1App" kindref="compound">App</ref> * &gt;</type>
        <definition>std::vector&lt; App * &gt; CLI::App::get_subcommands</definition>
        <argsstring>() const</argsstring>
        <name>get_subcommands</name>
        <qualifiedname>CLI::App::get_subcommands</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a subcommand pointer list to the currently selected subcommands (after parsing by default, in command line order; use parsed = false to get the original definition list.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6564" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6564" bodyend="6564"/>
        <referencedby refid="classCLI_1_1Formatter_1a9e6b7c4c6eee50b11fe1ca785002db04" compoundref="CLI11_8hpp" startline="8940" endline="8980">CLI::Formatter::make_subcommands</referencedby>
        <referencedby refid="classCLI_1_1Formatter_1a3aac4a7ce4ca139704e632915892024c" compoundref="CLI11_8hpp" startline="8866" endline="8906">CLI::Formatter::make_usage</referencedby>
        <referencedby refid="classCLI_1_1ConfigBase_1a5832f6f03212648fa08a8ff83bc9bc08" compoundref="CLI11_8hpp" startline="8701" endline="8789">CLI::ConfigBase::to_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aaee874fd49a1d90b5e810090a8089639" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; const <ref refid="classCLI_1_1App" kindref="compound">App</ref> * &gt;</type>
        <definition>std::vector&lt; const App * &gt; CLI::App::get_subcommands</definition>
        <argsstring>(const std::function&lt; bool(const App *)&gt; &amp;filter) const</argsstring>
        <name>get_subcommands</name>
        <qualifiedname>CLI::App::get_subcommands</qualifiedname>
        <param>
          <type>const std::function&lt; bool(const <ref refid="classCLI_1_1App" kindref="compound">App</ref> *)&gt; &amp;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a filtered subcommand pointer list from the original definition list. An empty function will provide all subcommands (const) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6568" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6568" bodyend="6582"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a8120758d6f82878986ff38cfab3d591f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classCLI_1_1App" kindref="compound">App</ref> * &gt;</type>
        <definition>std::vector&lt; App * &gt; CLI::App::get_subcommands</definition>
        <argsstring>(const std::function&lt; bool(App *)&gt; &amp;filter)</argsstring>
        <name>get_subcommands</name>
        <qualifiedname>CLI::App::get_subcommands</qualifiedname>
        <param>
          <type>const std::function&lt; bool(<ref refid="classCLI_1_1App" kindref="compound">App</ref> *)&gt; &amp;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a filtered subcommand pointer list from the original definition list. An empty function will provide all subcommands </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6586" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6586" bodyend="6599"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ad07c68d1fcede041fa7fed647e5e3d84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::got_subcommand</definition>
        <argsstring>(const App *subcom) const</argsstring>
        <name>got_subcommand</name>
        <qualifiedname>CLI::App::got_subcommand</qualifiedname>
        <param>
          <type>const <ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
          <declname>subcom</declname>
        </param>
        <briefdescription>
<para>Check to see if given subcommand was selected. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6602" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6602" bodyend="6605"/>
        <referencedby refid="classCLI_1_1ConfigBase_1a5832f6f03212648fa08a8ff83bc9bc08" compoundref="CLI11_8hpp" startline="8701" endline="8789">CLI::ConfigBase::to_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a5afd7a600223bae58b46aaff670e2d25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::got_subcommand</definition>
        <argsstring>(std::string subcommand_name) const</argsstring>
        <name>got_subcommand</name>
        <qualifiedname>CLI::App::got_subcommand</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>subcommand_name</declname>
        </param>
        <briefdescription>
<para>Check with name instead of pointer to see if subcommand was selected. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6608" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6608" bodyend="6608"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ac9f42c467510dd3ff82d16e61705a14f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::excludes</definition>
        <argsstring>(Option *opt)</argsstring>
        <name>excludes</name>
        <qualifiedname>CLI::App::excludes</qualifiedname>
        <param>
          <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
<para>Sets excluded options for the subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6611" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6611" bodyend="6617"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aa931caebf13af7d7a96badf0b06a4ace" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::excludes</definition>
        <argsstring>(App *app)</argsstring>
        <name>excludes</name>
        <qualifiedname>CLI::App::excludes</qualifiedname>
        <param>
          <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
<para>Sets excluded subcommands for the subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6620" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6620" bodyend="6633"/>
        <references refid="classCLI_1_1App_1ab95644f6cb3babcf2d31b3fea8304a82" compoundref="CLI11_8hpp" startline="5390">exclude_subcommands_</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a7f979e6e4b749880cb55dc2abd5d4b6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::needs</definition>
        <argsstring>(Option *opt)</argsstring>
        <name>needs</name>
        <qualifiedname>CLI::App::needs</qualifiedname>
        <param>
          <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6635" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6635" bodyend="6641"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1afb6c6a0378a32c53ec8776bb3acc9500" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::needs</definition>
        <argsstring>(App *app)</argsstring>
        <name>needs</name>
        <qualifiedname>CLI::App::needs</qualifiedname>
        <param>
          <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6643" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6643" bodyend="6652"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a9ea4153f3081d8424e772254135237fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::remove_excludes</definition>
        <argsstring>(Option *opt)</argsstring>
        <name>remove_excludes</name>
        <qualifiedname>CLI::App::remove_excludes</qualifiedname>
        <param>
          <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
<para>Removes an option from the excludes list of this subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6655" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6655" bodyend="6662"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a1c0670f27afe97a4e7ba12fcfb65a81c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::remove_excludes</definition>
        <argsstring>(App *app)</argsstring>
        <name>remove_excludes</name>
        <qualifiedname>CLI::App::remove_excludes</qualifiedname>
        <param>
          <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
<para>Removes a subcommand from the excludes list of this subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6665" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6665" bodyend="6674"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aaa7bc9f48fc24b24742fd2fbe01c13f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::remove_needs</definition>
        <argsstring>(Option *opt)</argsstring>
        <name>remove_needs</name>
        <qualifiedname>CLI::App::remove_needs</qualifiedname>
        <param>
          <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
<para>Removes an option from the needs list of this subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6677" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6677" bodyend="6684"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a73a87ddd7511abb67e5f293817e5df73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::remove_needs</definition>
        <argsstring>(App *app)</argsstring>
        <name>remove_needs</name>
        <qualifiedname>CLI::App::remove_needs</qualifiedname>
        <param>
          <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
<para>Removes a subcommand from the needs list of this subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6687" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6687" bodyend="6694"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getters</header>
      <memberdef kind="function" id="classCLI_1_1App_1a88ece0694b79e4471eb2456b4591cd5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classCLI_1_1FormatterBase" kindref="compound">FormatterBase</ref> &gt;</type>
        <definition>std::shared_ptr&lt; FormatterBase &gt; CLI::App::get_formatter</definition>
        <argsstring>() const</argsstring>
        <name>get_formatter</name>
        <qualifiedname>CLI::App::get_formatter</qualifiedname>
        <briefdescription>
<para>Access the formatter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6754" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6754" bodyend="6754"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1abd5578bc276f16d90744c024d61d9e56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classCLI_1_1Config" kindref="compound">Config</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Config &gt; CLI::App::get_config_formatter</definition>
        <argsstring>() const</argsstring>
        <name>get_config_formatter</name>
        <qualifiedname>CLI::App::get_config_formatter</qualifiedname>
        <briefdescription>
<para>Access the config formatter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6757" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6757" bodyend="6757"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ad070eb4afc424fc0dc3b5821c75c260c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classCLI_1_1ConfigBase" kindref="compound">ConfigBase</ref> &gt;</type>
        <definition>std::shared_ptr&lt; ConfigBase &gt; CLI::App::get_config_formatter_base</definition>
        <argsstring>() const</argsstring>
        <name>get_config_formatter_base</name>
        <qualifiedname>CLI::App::get_config_formatter_base</qualifiedname>
        <briefdescription>
<para>Access the config formatter as a configBase pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6760" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6760" bodyend="6767"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ab7637441b1cd7fb2fcf5e7e095e779a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CLI::App::get_description</definition>
        <argsstring>() const</argsstring>
        <name>get_description</name>
        <qualifiedname>CLI::App::get_description</qualifiedname>
        <briefdescription>
<para>Get the app or subcommand description. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6770" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6770" bodyend="6770"/>
        <referencedby refid="classCLI_1_1Formatter_1a0f45c98dab9502d8241c24f9ea250ede" compoundref="CLI11_8hpp" startline="8840" endline="8864">CLI::Formatter::make_description</referencedby>
        <referencedby refid="classCLI_1_1Formatter_1a82a62cd4b9833cab20e82c4d099c0c7f" compoundref="CLI11_8hpp" startline="8982" endline="8986">CLI::Formatter::make_subcommand</referencedby>
        <referencedby refid="classCLI_1_1ConfigBase_1a5832f6f03212648fa08a8ff83bc9bc08" compoundref="CLI11_8hpp" startline="8701" endline="8789">CLI::ConfigBase::to_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aa419c44818251d7e79fc90dcdd19bc82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::description</definition>
        <argsstring>(std::string app_description)</argsstring>
        <name>description</name>
        <qualifiedname>CLI::App::description</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>app_description</declname>
        </param>
        <briefdescription>
<para>Set the description of the app. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6773" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6773" bodyend="6776"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ab4e19fac7ff58e4b5252a387728dcd72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; const <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> * &gt;</type>
        <definition>std::vector&lt; const Option * &gt; CLI::App::get_options</definition>
        <argsstring>(const std::function&lt; bool(const Option *)&gt; filter={}) const</argsstring>
        <name>get_options</name>
        <qualifiedname>CLI::App::get_options</qualifiedname>
        <param>
          <type>const std::function&lt; bool(const <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *)&gt;</type>
          <declname>filter</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Get the list of options (user facing function, so returns raw pointers), has optional filter function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6779" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6779" bodyend="6793"/>
        <referencedby refid="classCLI_1_1Formatter_1ad48dd6b9432babc0037d6726230221f0" compoundref="CLI11_8hpp" startline="8816" endline="8838">CLI::Formatter::make_groups</referencedby>
        <referencedby refid="classCLI_1_1Formatter_1aab5f07a6d3154ace0be4d9dbf85f795b" compoundref="CLI11_8hpp" startline="8806" endline="8814">CLI::Formatter::make_positionals</referencedby>
        <referencedby refid="classCLI_1_1Formatter_1a3aac4a7ce4ca139704e632915892024c" compoundref="CLI11_8hpp" startline="8866" endline="8906">CLI::Formatter::make_usage</referencedby>
        <referencedby refid="classCLI_1_1ConfigBase_1a5832f6f03212648fa08a8ff83bc9bc08" compoundref="CLI11_8hpp" startline="8701" endline="8789">CLI::ConfigBase::to_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aef371986f217c7082123a36fac202448" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> * &gt;</type>
        <definition>std::vector&lt; Option * &gt; CLI::App::get_options</definition>
        <argsstring>(const std::function&lt; bool(Option *)&gt; filter={})</argsstring>
        <name>get_options</name>
        <qualifiedname>CLI::App::get_options</qualifiedname>
        <param>
          <type>const std::function&lt; bool(<ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *)&gt;</type>
          <declname>filter</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Non-const version of the above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6796" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6796" bodyend="6809"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a5125f786c409fe0bbba684fe99f2c5fe" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::get_option_no_throw</definition>
        <argsstring>(std::string option_name) noexcept</argsstring>
        <name>get_option_no_throw</name>
        <qualifiedname>CLI::App::get_option_no_throw</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>option_name</declname>
        </param>
        <briefdescription>
<para>Get an option by name (noexcept non-const version) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6812" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6812" bodyend="6828"/>
        <references refid="classCLI_1_1Option_1a6a87a518665bbddf17512edccd962ba3" compoundref="CLI11_8hpp" startline="4797" endline="4824">CLI::Option::check_name</references>
        <referencedby refid="namespaceCLI_1ad9ac23b01e2ef840ec123f5a115302ab" compoundref="CLI11_8hpp" startline="8330" endline="8348">CLI::retire_option</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aa429cf3265602a5a1d60b87504ec33c5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>const Option * CLI::App::get_option_no_throw</definition>
        <argsstring>(std::string option_name) const noexcept</argsstring>
        <name>get_option_no_throw</name>
        <qualifiedname>CLI::App::get_option_no_throw</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>option_name</declname>
        </param>
        <briefdescription>
<para>Get an option by name (noexcept const version) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6831" column="18" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6831" bodyend="6847"/>
        <references refid="classCLI_1_1Option_1a6a87a518665bbddf17512edccd962ba3" compoundref="CLI11_8hpp" startline="4797" endline="4824">CLI::Option::check_name</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ad098a287e9a398ec6b24630335d068c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>const Option * CLI::App::get_option</definition>
        <argsstring>(std::string option_name) const</argsstring>
        <name>get_option</name>
        <qualifiedname>CLI::App::get_option</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>option_name</declname>
        </param>
        <briefdescription>
<para>Get an option by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6850" column="18" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6850" bodyend="6856"/>
        <referencedby refid="namespaceCLI_1ad6d89b5d1aba2ebdca5f94534d658cab" compoundref="CLI11_8hpp" startline="8290" endline="8293">CLI::deprecate_option</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a3424bdc3973b2c7a6e3e13ba50de748a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::get_option</definition>
        <argsstring>(std::string option_name)</argsstring>
        <name>get_option</name>
        <qualifiedname>CLI::App::get_option</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>option_name</declname>
        </param>
        <briefdescription>
<para>Get an option by name (non-const version) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6859" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6859" bodyend="6865"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a05c1dbeb654a91b792889551656c0ab8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>const Option * CLI::App::operator[]</definition>
        <argsstring>(const std::string &amp;option_name) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>CLI::App::operator[]</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>option_name</declname>
        </param>
        <briefdescription>
<para>Shortcut bracket operator for getting a pointer to an option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6868" column="18" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6868" bodyend="6868"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a443c945fd3d3f03d33ad24be91b0ccbb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>const Option * CLI::App::operator[]</definition>
        <argsstring>(const char *option_name) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>CLI::App::operator[]</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>option_name</declname>
        </param>
        <briefdescription>
<para>Shortcut bracket operator for getting a pointer to an option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6871" column="18" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6871" bodyend="6871"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a590129f76003fcf849eeb18d05e4571c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_ignore_case</definition>
        <argsstring>() const</argsstring>
        <name>get_ignore_case</name>
        <qualifiedname>CLI::App::get_ignore_case</qualifiedname>
        <briefdescription>
<para>Check the status of ignore_case. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6874" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6874" bodyend="6874"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ad6af9821d55785a8d56744db78057cdd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_ignore_underscore</definition>
        <argsstring>() const</argsstring>
        <name>get_ignore_underscore</name>
        <qualifiedname>CLI::App::get_ignore_underscore</qualifiedname>
        <briefdescription>
<para>Check the status of ignore_underscore. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6877" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6877" bodyend="6877"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ab89a4979a6e0ea340188f28556136a6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_fallthrough</definition>
        <argsstring>() const</argsstring>
        <name>get_fallthrough</name>
        <qualifiedname>CLI::App::get_fallthrough</qualifiedname>
        <briefdescription>
<para>Check the status of fallthrough. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6880" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6880" bodyend="6880"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a3620a019821239f7d8be472cead88cd2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_allow_windows_style_options</definition>
        <argsstring>() const</argsstring>
        <name>get_allow_windows_style_options</name>
        <qualifiedname>CLI::App::get_allow_windows_style_options</qualifiedname>
        <briefdescription>
<para>Check the status of the allow windows style options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6883" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6883" bodyend="6883"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1af77a6cd4835a53b0446576fdbe8ac39c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_positionals_at_end</definition>
        <argsstring>() const</argsstring>
        <name>get_positionals_at_end</name>
        <qualifiedname>CLI::App::get_positionals_at_end</qualifiedname>
        <briefdescription>
<para>Check the status of the allow windows style options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6886" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6886" bodyend="6886"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a2976c5b0cccca69d24ed5ad52924ab54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_configurable</definition>
        <argsstring>() const</argsstring>
        <name>get_configurable</name>
        <qualifiedname>CLI::App::get_configurable</qualifiedname>
        <briefdescription>
<para>Check the status of the allow windows style options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6889" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6889" bodyend="6889"/>
        <referencedby refid="classCLI_1_1ConfigBase_1a5832f6f03212648fa08a8ff83bc9bc08" compoundref="CLI11_8hpp" startline="8701" endline="8789">CLI::ConfigBase::to_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a7285a71dac7f168f5d0f992ac75f404d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; CLI::App::get_group</definition>
        <argsstring>() const</argsstring>
        <name>get_group</name>
        <qualifiedname>CLI::App::get_group</qualifiedname>
        <briefdescription>
<para>Get the group of this subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6892" column="23" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6892" bodyend="6892"/>
        <referencedby refid="classCLI_1_1Formatter_1a838e0f47efa4fbd1b738eedb156887b9" compoundref="CLI11_8hpp" startline="8916" endline="8938">CLI::Formatter::make_help</referencedby>
        <referencedby refid="classCLI_1_1Formatter_1a9e6b7c4c6eee50b11fe1ca785002db04" compoundref="CLI11_8hpp" startline="8940" endline="8980">CLI::Formatter::make_subcommands</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ad1a6871e4384311fae85e5e03fdcd3fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CLI::App::get_footer</definition>
        <argsstring>() const</argsstring>
        <name>get_footer</name>
        <qualifiedname>CLI::App::get_footer</qualifiedname>
        <briefdescription>
<para>Generate and return the footer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6895" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6895" bodyend="6895"/>
        <referencedby refid="classCLI_1_1Formatter_1ad2c14eb79877613d7049434c10507489" compoundref="CLI11_8hpp" startline="8908" endline="8914">CLI::Formatter::make_footer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1af990c1f077d815768ca3d2f250d058d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::get_require_subcommand_min</definition>
        <argsstring>() const</argsstring>
        <name>get_require_subcommand_min</name>
        <qualifiedname>CLI::App::get_require_subcommand_min</qualifiedname>
        <briefdescription>
<para>Get the required min subcommand value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6898" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6898" bodyend="6898"/>
        <referencedby refid="classCLI_1_1Formatter_1a3aac4a7ce4ca139704e632915892024c" compoundref="CLI11_8hpp" startline="8866" endline="8906">CLI::Formatter::make_usage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a76fa6784188f97df35ceb6b8207accd2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::get_require_subcommand_max</definition>
        <argsstring>() const</argsstring>
        <name>get_require_subcommand_max</name>
        <qualifiedname>CLI::App::get_require_subcommand_max</qualifiedname>
        <briefdescription>
<para>Get the required max subcommand value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6901" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6901" bodyend="6901"/>
        <referencedby refid="classCLI_1_1Formatter_1a3aac4a7ce4ca139704e632915892024c" compoundref="CLI11_8hpp" startline="8866" endline="8906">CLI::Formatter::make_usage</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a242b3d549b70e9f8785b727703371d40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::get_require_option_min</definition>
        <argsstring>() const</argsstring>
        <name>get_require_option_min</name>
        <qualifiedname>CLI::App::get_require_option_min</qualifiedname>
        <briefdescription>
<para>Get the required min option value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6904" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6904" bodyend="6904"/>
        <referencedby refid="classCLI_1_1Formatter_1a0f45c98dab9502d8241c24f9ea250ede" compoundref="CLI11_8hpp" startline="8840" endline="8864">CLI::Formatter::make_description</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ac0458768d5cd311ef361e039ce58c45a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::get_require_option_max</definition>
        <argsstring>() const</argsstring>
        <name>get_require_option_max</name>
        <qualifiedname>CLI::App::get_require_option_max</qualifiedname>
        <briefdescription>
<para>Get the required max option value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6907" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6907" bodyend="6907"/>
        <referencedby refid="classCLI_1_1Formatter_1a0f45c98dab9502d8241c24f9ea250ede" compoundref="CLI11_8hpp" startline="8840" endline="8864">CLI::Formatter::make_description</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a60e3e9d4198e855cd721887502acca54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_prefix_command</definition>
        <argsstring>() const</argsstring>
        <name>get_prefix_command</name>
        <qualifiedname>CLI::App::get_prefix_command</qualifiedname>
        <briefdescription>
<para>Get the prefix command status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6910" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6910" bodyend="6910"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a82efdb6d3d77d2faff51a4960034a133" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_allow_extras</definition>
        <argsstring>() const</argsstring>
        <name>get_allow_extras</name>
        <qualifiedname>CLI::App::get_allow_extras</qualifiedname>
        <briefdescription>
<para>Get the status of allow extras. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6913" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6913" bodyend="6913"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a74fa8829acfe2311724ecad5bdb91dce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_required</definition>
        <argsstring>() const</argsstring>
        <name>get_required</name>
        <qualifiedname>CLI::App::get_required</qualifiedname>
        <briefdescription>
<para>Get the status of required. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6916" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6916" bodyend="6916"/>
        <referencedby refid="classCLI_1_1Formatter_1a0f45c98dab9502d8241c24f9ea250ede" compoundref="CLI11_8hpp" startline="8840" endline="8864">CLI::Formatter::make_description</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a770812d1989ce390b1919080d55a65d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_disabled</definition>
        <argsstring>() const</argsstring>
        <name>get_disabled</name>
        <qualifiedname>CLI::App::get_disabled</qualifiedname>
        <briefdescription>
<para>Get the status of disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6919" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6919" bodyend="6919"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ab5ef23f4ef7977a310376f2c0c917f2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_silent</definition>
        <argsstring>() const</argsstring>
        <name>get_silent</name>
        <qualifiedname>CLI::App::get_silent</qualifiedname>
        <briefdescription>
<para>Get the status of silence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6922" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6922" bodyend="6922"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1affb7cd37fada9a7470e5bf2f7444249f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_immediate_callback</definition>
        <argsstring>() const</argsstring>
        <name>get_immediate_callback</name>
        <qualifiedname>CLI::App::get_immediate_callback</qualifiedname>
        <briefdescription>
<para>Get the status of disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6925" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6925" bodyend="6925"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a025af752c08a28736d5f6d3c10d6ca35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_disabled_by_default</definition>
        <argsstring>() const</argsstring>
        <name>get_disabled_by_default</name>
        <qualifiedname>CLI::App::get_disabled_by_default</qualifiedname>
        <briefdescription>
<para>Get the status of disabled by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6928" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6928" bodyend="6928"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1af35ca552ab4b1ee3ea975183c94e2f9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_enabled_by_default</definition>
        <argsstring>() const</argsstring>
        <name>get_enabled_by_default</name>
        <qualifiedname>CLI::App::get_enabled_by_default</qualifiedname>
        <briefdescription>
<para>Get the status of disabled by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6931" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6931" bodyend="6931"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a7563b3694b8ee4b14e7183966dc77f69" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::get_validate_positionals</definition>
        <argsstring>() const</argsstring>
        <name>get_validate_positionals</name>
        <qualifiedname>CLI::App::get_validate_positionals</qualifiedname>
        <briefdescription>
<para>Get the status of validating positionals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6933" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6933" bodyend="6933"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aeab6a6f6ddc3540f56a7494be5281a5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceCLI_1a474d5665894fe9a318ddbdb9ebf194d4" kindref="member">config_extras_mode</ref></type>
        <definition>config_extras_mode CLI::App::get_allow_config_extras</definition>
        <argsstring>() const</argsstring>
        <name>get_allow_config_extras</name>
        <qualifiedname>CLI::App::get_allow_config_extras</qualifiedname>
        <briefdescription>
<para>Get the status of allow extras. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6936" column="24" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6936" bodyend="6936"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a4720d5ded12ab00d3aa76bd195ad92be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::get_help_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_help_ptr</name>
        <qualifiedname>CLI::App::get_help_ptr</qualifiedname>
        <briefdescription>
<para>Get a pointer to the help flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6939" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6939" bodyend="6939"/>
        <referencedby refid="classCLI_1_1Formatter_1ad48dd6b9432babc0037d6726230221f0" compoundref="CLI11_8hpp" startline="8816" endline="8838">CLI::Formatter::make_groups</referencedby>
        <referencedby refid="structsisi4s_1_1Options_1ad20c3a9a952216298228bf397501ba20" compoundref="Options_8cxx" startline="47" endline="56">sisi4s::Options::parse</referencedby>
        <referencedby refid="namespaceCLI_1_1FailureMessage_1ab2a36cd7fb3b91628be43f31647f3c38" compoundref="CLI11_8hpp" startline="8356" endline="8372">CLI::FailureMessage::simple</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aaf8da2c85d6c89c02d326402da769caf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>const Option * CLI::App::get_help_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_help_ptr</name>
        <qualifiedname>CLI::App::get_help_ptr</qualifiedname>
        <briefdescription>
<para>Get a pointer to the help flag. (const) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6942" column="18" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6942" bodyend="6942"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a389fe480583b713747db067b3ce1d5a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>const Option * CLI::App::get_help_all_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_help_all_ptr</name>
        <qualifiedname>CLI::App::get_help_all_ptr</qualifiedname>
        <briefdescription>
<para>Get a pointer to the help all flag. (const) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6945" column="18" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6945" bodyend="6945"/>
        <referencedby refid="classCLI_1_1Formatter_1ad48dd6b9432babc0037d6726230221f0" compoundref="CLI11_8hpp" startline="8816" endline="8838">CLI::Formatter::make_groups</referencedby>
        <referencedby refid="namespaceCLI_1_1FailureMessage_1ab2a36cd7fb3b91628be43f31647f3c38" compoundref="CLI11_8hpp" startline="8356" endline="8372">CLI::FailureMessage::simple</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a2c7e9edc5a8348872a7e7fafc9c34203" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::get_config_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_config_ptr</name>
        <qualifiedname>CLI::App::get_config_ptr</qualifiedname>
        <briefdescription>
<para>Get a pointer to the config option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6948" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6948" bodyend="6948"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a6270f35ecf376ff947ddeccac28711fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>const Option * CLI::App::get_config_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_config_ptr</name>
        <qualifiedname>CLI::App::get_config_ptr</qualifiedname>
        <briefdescription>
<para>Get a pointer to the config option. (const) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6951" column="18" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6951" bodyend="6951"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aaf2fc24705a68da1de8d0b86e3ef9796" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>Option * CLI::App::get_version_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_version_ptr</name>
        <qualifiedname>CLI::App::get_version_ptr</qualifiedname>
        <briefdescription>
<para>Get a pointer to the version option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6954" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6954" bodyend="6954"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a764c57fe2e96ec8a871fbc6a4299e8fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
        <definition>const Option * CLI::App::get_version_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_version_ptr</name>
        <qualifiedname>CLI::App::get_version_ptr</qualifiedname>
        <briefdescription>
<para>Get a pointer to the version option. (const) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6957" column="18" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6957" bodyend="6957"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a5f31177cf639f148d3a315861ff6ca5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::get_parent</definition>
        <argsstring>()</argsstring>
        <name>get_parent</name>
        <qualifiedname>CLI::App::get_parent</qualifiedname>
        <briefdescription>
<para>Get the parent of this subcommand (or nullptr if main app) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6960" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6960" bodyend="6960"/>
        <referencedby refid="classCLI_1_1Option__group_1a1be93903743c2cdc64f1237ca956ff0b" compoundref="CLI11_8hpp" startline="8225" endline="8230">CLI::Option_group::add_subcommand</referencedby>
        <referencedby refid="classCLI_1_1Formatter_1a838e0f47efa4fbd1b738eedb156887b9" compoundref="CLI11_8hpp" startline="8916" endline="8938">CLI::Formatter::make_help</referencedby>
        <referencedby refid="classCLI_1_1ConfigBase_1a5832f6f03212648fa08a8ff83bc9bc08" compoundref="CLI11_8hpp" startline="8701" endline="8789">CLI::ConfigBase::to_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ace027de5fa7cc33217d9d3eb2c2552b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>const App * CLI::App::get_parent</definition>
        <argsstring>() const</argsstring>
        <name>get_parent</name>
        <qualifiedname>CLI::App::get_parent</qualifiedname>
        <briefdescription>
<para>Get the parent of this subcommand (or nullptr if main app) (const version) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6963" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6963" bodyend="6963"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1adeac41bd40859dfbff9817244c09c989" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; CLI::App::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <qualifiedname>CLI::App::get_name</qualifiedname>
        <briefdescription>
<para>Get the name of the current app. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6966" column="23" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6966" bodyend="6966"/>
        <referencedby refid="classCLI_1_1App_1aade2ac30d86141da0d55d9181ac8b710" compoundref="CLI11_8hpp" startline="8091" endline="8139">_compare_subcommand_names</referencedby>
        <referencedby refid="classCLI_1_1App_1a4e0c00ce18bbfca1ae890a653bbd2b93" compoundref="CLI11_8hpp" startline="7339" endline="7465">_process_requirements</referencedby>
        <referencedby refid="classCLI_1_1App_1ad03898df2eadbe937c81d80215169235" compoundref="CLI11_8hpp" startline="6233" endline="6240">get_subcommand</referencedby>
        <referencedby refid="classCLI_1_1App_1a63c0110a3e63515e3b9b70b7b560d676" compoundref="CLI11_8hpp" startline="6260" endline="6267">get_subcommand_ptr</referencedby>
        <referencedby refid="classCLI_1_1Formatter_1ade54fd392e2c9f5364744dca82408e60" compoundref="CLI11_8hpp" startline="8988" endline="9006">CLI::Formatter::make_expanded</referencedby>
        <referencedby refid="classCLI_1_1Formatter_1a838e0f47efa4fbd1b738eedb156887b9" compoundref="CLI11_8hpp" startline="8916" endline="8938">CLI::Formatter::make_help</referencedby>
        <referencedby refid="classCLI_1_1ConfigBase_1a5832f6f03212648fa08a8ff83bc9bc08" compoundref="CLI11_8hpp" startline="8701" endline="8789">CLI::ConfigBase::to_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a626fd71499fbb8e26bb83f33b1df1536" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt; &amp;</type>
        <definition>const std::vector&lt; std::string &gt; &amp; CLI::App::get_aliases</definition>
        <argsstring>() const</argsstring>
        <name>get_aliases</name>
        <qualifiedname>CLI::App::get_aliases</qualifiedname>
        <briefdescription>
<para>Get the aliases of the current app. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6969" column="23" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6969" bodyend="6969"/>
        <referencedby refid="classCLI_1_1Formatter_1ade54fd392e2c9f5364744dca82408e60" compoundref="CLI11_8hpp" startline="8988" endline="9006">CLI::Formatter::make_expanded</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a2a3aca3df859e7d772298a44d7b91fc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::clear_aliases</definition>
        <argsstring>()</argsstring>
        <name>clear_aliases</name>
        <qualifiedname>CLI::App::clear_aliases</qualifiedname>
        <briefdescription>
<para>clear all the aliases of the current <ref refid="classCLI_1_1App" kindref="compound">App</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6972" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6972" bodyend="6975"/>
        <references refid="classCLI_1_1App_1a6b5a085a039cab7e5906b3cd4407fdc8" compoundref="CLI11_8hpp" startline="6407" endline="6420">clear</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aa75309f557d6cdba74b299e4f9e7cfbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CLI::App::get_display_name</definition>
        <argsstring>(bool with_aliases=false) const</argsstring>
        <name>get_display_name</name>
        <qualifiedname>CLI::App::get_display_name</qualifiedname>
        <param>
          <type>bool</type>
          <declname>with_aliases</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get a display name for an app. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6978" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6978" bodyend="6992"/>
        <referencedby refid="classCLI_1_1App_1a4e0c00ce18bbfca1ae890a653bbd2b93" compoundref="CLI11_8hpp" startline="7339" endline="7465">_process_requirements</referencedby>
        <referencedby refid="classCLI_1_1Formatter_1ade54fd392e2c9f5364744dca82408e60" compoundref="CLI11_8hpp" startline="8988" endline="9006">CLI::Formatter::make_expanded</referencedby>
        <referencedby refid="classCLI_1_1Formatter_1a82a62cd4b9833cab20e82c4d099c0c7f" compoundref="CLI11_8hpp" startline="8982" endline="8986">CLI::Formatter::make_subcommand</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a3ba6eb33f3ee9cd1a126385fa44f2c16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::check_name</definition>
        <argsstring>(std::string name_to_check) const</argsstring>
        <name>check_name</name>
        <qualifiedname>CLI::App::check_name</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name_to_check</declname>
        </param>
        <briefdescription>
<para>Check the name, case insensitive and underscore insensitive if set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="6995" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="6995" bodyend="7021"/>
        <references refid="namespaceCLI_1_1detail_1a5359a7a0e33366a12e15523b100f591a" compoundref="CLI11_8hpp" startline="385" endline="388">CLI::detail::remove_underscore</references>
        <references refid="namespaceCLI_1_1detail_1ae83709ec148057ec53df4383645727e9" compoundref="CLI11_8hpp" startline="377" endline="382">CLI::detail::to_lower</references>
        <referencedby refid="classCLI_1_1App_1aade2ac30d86141da0d55d9181ac8b710" compoundref="CLI11_8hpp" startline="8091" endline="8139">_compare_subcommand_names</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1af0d7e22ac4f12250818bce3e22e8d569" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; CLI::App::get_groups</definition>
        <argsstring>() const</argsstring>
        <name>get_groups</name>
        <qualifiedname>CLI::App::get_groups</qualifiedname>
        <briefdescription>
<para>Get the groups available directly from this option (in order) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7024" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7024" bodyend="7035"/>
        <references refid="classCLI_1_1OptionBase_1ad824d0f4f973675beece17d6b5ad9d00" compoundref="CLI11_8hpp" startline="4025" endline="4025">CLI::OptionBase&lt; CRTP &gt;::get_group</references>
        <referencedby refid="classCLI_1_1Formatter_1ad48dd6b9432babc0037d6726230221f0" compoundref="CLI11_8hpp" startline="8816" endline="8838">CLI::Formatter::make_groups</referencedby>
        <referencedby refid="classCLI_1_1Formatter_1a3aac4a7ce4ca139704e632915892024c" compoundref="CLI11_8hpp" startline="8866" endline="8906">CLI::Formatter::make_usage</referencedby>
        <referencedby refid="classCLI_1_1ConfigBase_1a5832f6f03212648fa08a8ff83bc9bc08" compoundref="CLI11_8hpp" startline="8701" endline="8789">CLI::ConfigBase::to_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a60ea640ecac9e674f37745b52689b7f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classCLI_1_1Option" kindref="compound">Option</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt; Option * &gt; &amp; CLI::App::parse_order</definition>
        <argsstring>() const</argsstring>
        <name>parse_order</name>
        <qualifiedname>CLI::App::parse_order</qualifiedname>
        <briefdescription>
<para>This gets a vector of pointers with the original parse order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7038" column="23" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7038" bodyend="7038"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ad90f9b3c1925879dfe39cb03c5247742" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; CLI::App::remaining</definition>
        <argsstring>(bool recurse=false) const</argsstring>
        <name>remaining</name>
        <qualifiedname>CLI::App::remaining</qualifiedname>
        <param>
          <type>bool</type>
          <declname>recurse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This returns the missing options from the current subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7041" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7041" bodyend="7065"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a522317a152b4acbb8015eef22358d8fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; CLI::App::remaining_for_passthrough</definition>
        <argsstring>(bool recurse=false) const</argsstring>
        <name>remaining_for_passthrough</name>
        <qualifiedname>CLI::App::remaining_for_passthrough</qualifiedname>
        <param>
          <type>bool</type>
          <declname>recurse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This returns the missing options in a form ready for processing by another command line program. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7068" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7068" bodyend="7072"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a7a94b729128d22a6cc3e4998149d7101" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::remaining_size</definition>
        <argsstring>(bool recurse=false) const</argsstring>
        <name>remaining_size</name>
        <qualifiedname>CLI::App::remaining_size</qualifiedname>
        <param>
          <type>bool</type>
          <declname>recurse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This returns the number of remaining options, minus the <ndash/> separator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7075" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7075" bodyend="7087"/>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573a2b1681c49e27b242d19b93c5c3620cb6">CLI::detail::POSITIONAL_MARK</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCLI_1_1App_1a19db92c5717d79ab19de59daf455cdbb" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend CLI::App::Option</definition>
        <argsstring></argsstring>
        <name>Option</name>
        <qualifiedname>CLI::App::Option</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5287" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5287" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCLI_1_1App_1aaa53fda3b6aa477158ea8b1768342cc0" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CLI::App::App</definition>
        <argsstring>(std::string app_description, std::string app_name, App *parent)</argsstring>
        <name>App</name>
        <qualifiedname>CLI::App::App</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>app_description</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>app_name</declname>
        </param>
        <param>
          <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Special private constructor for subcommand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><ref refid="classCLI_1_1OptionDefaults" kindref="compound">OptionDefaults</ref></para>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5483" column="5" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5483" bodyend="5514"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ae2908ce3eded7e3d6bb2e6fdd2410576" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_validate</definition>
        <argsstring>() const</argsstring>
        <name>_validate</name>
        <qualifiedname>CLI::App::_validate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check the options to make sure there are no conflicts.</para>
<para>Currently checks to see if multiple positionals exist with unlimited args and checks if the min and max options are feasible </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7096" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7096" bodyend="7130"/>
        <references refid="namespaceCLI_1_1detail_1a99abe3824b1f1bea457ad0ae635f5c51" compoundref="CLI11_8hpp" startline="161">CLI::detail::expected_max_vector_size</references>
        <references refid="namespaceCLI_1a1d8108a219533f0b0361640a017f037eaf65e8093ec3083c0c4909e321df2ece7">CLI::InvalidError</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1acd99119433fcca2901ad13714d3acb0a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_configure</definition>
        <argsstring>()</argsstring>
        <name>_configure</name>
        <qualifiedname>CLI::App::_configure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>configure subcommands to enable parsing through the current object set the correct fallthrough and prefix for nameless subcommands and manage the automatic enable or disable makes sure parent is set correctly </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7135" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7135" bodyend="7153"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a5834471108897c92ba7fa2e3e01f7c2d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::run_callback</definition>
        <argsstring>(bool final_mode=false, bool suppress_final_callback=false)</argsstring>
        <name>run_callback</name>
        <qualifiedname>CLI::App::run_callback</qualifiedname>
        <param>
          <type>bool</type>
          <declname>final_mode</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>suppress_final_callback</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Internal function to run (<ref refid="classCLI_1_1App" kindref="compound">App</ref>) callback, bottom up. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7156" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7156" bodyend="7179"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a2c9093efb2ffc55224f2acf2239fd5ce" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::_valid_subcommand</definition>
        <argsstring>(const std::string &amp;current, bool ignore_used=true) const</argsstring>
        <name>_valid_subcommand</name>
        <qualifiedname>CLI::App::_valid_subcommand</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>current</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_used</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Check to see if a subcommand is valid. Give up immediately if subcommand max has been reached. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7182" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7182" bodyend="7193"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1addab9d99dce6a2f96b5c8748d20ebea8" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573" kindref="member">detail::Classifier</ref></type>
        <definition>detail::Classifier CLI::App::_recognize</definition>
        <argsstring>(const std::string &amp;current, bool ignore_used_subcommands=true) const</argsstring>
        <name>_recognize</name>
        <qualifiedname>CLI::App::_recognize</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>current</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_used_subcommands</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Selects a Classifier enum based on the type of the current argument. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7196" column="24" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7196" bodyend="7218"/>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ac1fabfea54ec6011e694f211f3ffebf3">CLI::detail::LONG</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ab50339a10e1de285ac99d4c3990b8693">CLI::detail::NONE</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573a2b1681c49e27b242d19b93c5c3620cb6">CLI::detail::POSITIONAL_MARK</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573aa35c2b02966b1563e5bf7b81b8b0cf77">CLI::detail::SHORT</references>
        <references refid="namespaceCLI_1_1detail_1a0de15b0ba0d12c9170d15693477808ed" compoundref="CLI11_8hpp" startline="2418" endline="2431">CLI::detail::split_long</references>
        <references refid="namespaceCLI_1_1detail_1a1e6f215bcb727ff49f126ac3e1a13e40" compoundref="CLI11_8hpp" startline="2408" endline="2415">CLI::detail::split_short</references>
        <references refid="namespaceCLI_1_1detail_1aadbd2b5b93afe2f10427dd6e32639b0c" compoundref="CLI11_8hpp" startline="2434" endline="2447">CLI::detail::split_windows_style</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ac4fb22412f02354dbe5574e37caf50a7">CLI::detail::SUBCOMMAND</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ab447b0bfeb6e4502fb6a0c4223fb8d00">CLI::detail::SUBCOMMAND_TERMINATOR</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573a0693f2b4d4f0740bc76a2d65566b4fda">CLI::detail::WINDOWS_STYLE</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a7a15e5743d4a8eccac57955ed5a6a3b6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_process_config_file</definition>
        <argsstring>()</argsstring>
        <name>_process_config_file</name>
        <qualifiedname>CLI::App::_process_config_file</qualifiedname>
        <briefdescription>
<para>Read and process a configuration file (main app only) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7223" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7223" bodyend="7253"/>
        <references refid="namespaceCLI_1_1detail_1a197be0b62b4d4deef0f5cac600a6b759" compoundref="CLI11_8hpp" startline="2948" endline="2961">CLI::detail::check_path</references>
        <references refid="namespaceCLI_1_1detail_1a20a9a67e5f06ba0dc3f2ded2fed16f55a8c7dd922ad47494fc02c388e12c00eac">CLI::detail::file</references>
        <references refid="classCLI_1_1FileError_1a5117d3f4ce0cb625a9153f948114015b" compoundref="CLI11_8hpp" startline="718" endline="718">CLI::FileError::Missing</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a0a367021eca99facc7968bb24333a8fb" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_process_env</definition>
        <argsstring>()</argsstring>
        <name>_process_env</name>
        <qualifiedname>CLI::App::_process_env</qualifiedname>
        <briefdescription>
<para>Get envname options if not yet passed. Runs on <emphasis>all</emphasis> subcommands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7256" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7256" bodyend="7286"/>
        <references refid="classCLI_1_1Option_1a49ba3750688c16a2c001dd2c91ecba3e" compoundref="CLI11_8hpp" startline="4890" endline="4894">CLI::Option::add_result</references>
        <references refid="classCLI_1_1Option_1a154543609c45d9c59c69991a08ca272b" compoundref="CLI11_8hpp" startline="4267" endline="4267">CLI::Option::count</references>
        <references refid="classCLI_1_1Option_1acac4bf11cbd933967ced9175946ffbe6" compoundref="CLI11_8hpp" startline="4165">CLI::Option::envname_</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ad9e5d41a1efd28da92235b72682cbf74" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_process_callbacks</definition>
        <argsstring>()</argsstring>
        <name>_process_callbacks</name>
        <qualifiedname>CLI::App::_process_callbacks</qualifiedname>
        <briefdescription>
<para>Process callbacks. Runs on <emphasis>all</emphasis> subcommands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7289" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7289" bodyend="7311"/>
        <references refid="classCLI_1_1Option_1aae19e4231b0c1ef14cf2f3c7189e453c" compoundref="CLI11_8hpp" startline="4973" endline="4973">CLI::Option::get_callback_run</references>
        <references refid="classCLI_1_1Option_1ab06eb6c31666a4a003aeb2cf3e5cdcd9" compoundref="CLI11_8hpp" startline="4746" endline="4770">CLI::Option::run_callback</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a3d04865bf341cea82bcb164b10db578b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_process_help_flags</definition>
        <argsstring>(bool trigger_help=false, bool trigger_all_help=false) const</argsstring>
        <name>_process_help_flags</name>
        <qualifiedname>CLI::App::_process_help_flags</qualifiedname>
        <param>
          <type>bool</type>
          <declname>trigger_help</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>trigger_all_help</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run help flag processing if any are found.</para>
<para>The flags allow recursive calls to remember if there was a help flag on a parent. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7316" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7316" bodyend="7336"/>
        <references refid="classCLI_1_1Option_1a154543609c45d9c59c69991a08ca272b" compoundref="CLI11_8hpp" startline="4267" endline="4267">CLI::Option::count</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a4e0c00ce18bbfca1ae890a653bbd2b93" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_process_requirements</definition>
        <argsstring>()</argsstring>
        <name>_process_requirements</name>
        <qualifiedname>CLI::App::_process_requirements</qualifiedname>
        <briefdescription>
<para>Verify required options and cross requirements. Subcommands too (only if selected). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7339" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7339" bodyend="7465"/>
        <references refid="classCLI_1_1Option_1a154543609c45d9c59c69991a08ca272b" compoundref="CLI11_8hpp" startline="4267" endline="4267">CLI::Option::count</references>
        <references refid="classCLI_1_1App_1a405d0642ba4245a6ea61b230c4854667" compoundref="CLI11_8hpp" startline="5319">disabled_</references>
        <references refid="classCLI_1_1Option_1a49c5490dd092599c067833fd0f5c79d3" compoundref="CLI11_8hpp" startline="4210">CLI::Option::excludes_</references>
        <references refid="classCLI_1_1App_1aa75309f557d6cdba74b299e4f9e7cfbe" compoundref="CLI11_8hpp" startline="6978" endline="6992">get_display_name</references>
        <references refid="classCLI_1_1App_1adeac41bd40859dfbff9817244c09c989" compoundref="CLI11_8hpp" startline="6966" endline="6966">get_name</references>
        <references refid="classCLI_1_1Option_1ab84751fbf9037efaed5b64fed17fe57f" compoundref="CLI11_8hpp" startline="4686" endline="4739">CLI::Option::get_name</references>
        <references refid="classCLI_1_1OptionBase_1aa902dee6da6d7f5b083b1c7d5f9c1308" compoundref="CLI11_8hpp" startline="4028" endline="4028">CLI::OptionBase&lt; CRTP &gt;::get_required</references>
        <references refid="namespaceCLI_1_1detail_1ab351f13ec104e2cba19ec6baf4a552f6" compoundref="CLI11_8hpp" startline="181" endline="191">CLI::detail::join</references>
        <references refid="classCLI_1_1Option_1a3bd8d2ff461e8046b284cdbfcd741dce" compoundref="CLI11_8hpp" startline="4207">CLI::Option::needs_</references>
        <references refid="classCLI_1_1RequiredError_1a1283b251494d088d860a89bc2a8bce7f" compoundref="CLI11_8hpp" startline="756" endline="778">CLI::RequiredError::Option</references>
        <references refid="classCLI_1_1RequiredError_1af31b1d4286ced90b386783e13f8421b2" compoundref="CLI11_8hpp" startline="748" endline="754">CLI::RequiredError::Subcommand</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a0fec24c804daf5b458bb5762e4e75a73" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_process</definition>
        <argsstring>()</argsstring>
        <name>_process</name>
        <qualifiedname>CLI::App::_process</qualifiedname>
        <briefdescription>
<para>Process callbacks and such. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7468" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7468" bodyend="7491"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a4d57bf638f00715cbf27dcf055580398" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_process_extras</definition>
        <argsstring>()</argsstring>
        <name>_process_extras</name>
        <qualifiedname>CLI::App::_process_extras</qualifiedname>
        <briefdescription>
<para>Throw an error if anything is left over and should not be. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7494" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7494" bodyend="7506"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a7e8e59098befcc1f10969b9e5c88e0f9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_process_extras</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;args)</argsstring>
        <name>_process_extras</name>
        <qualifiedname>CLI::App::_process_extras</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Throw an error if anything is left over and should not be. Modifies the args to fill in the missing items before throwing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7510" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7510" bodyend="7523"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ae8d614e3f5c703216da768dd85d98d8f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::increment_parsed</definition>
        <argsstring>()</argsstring>
        <name>increment_parsed</name>
        <qualifiedname>CLI::App::increment_parsed</qualifiedname>
        <briefdescription>
<para>Internal function to recursively increment the parsed counter on the current app as well unnamed subcommands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7526" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7526" bodyend="7532"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a241ba75a6c98b36349ae2f71a9137291" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_parse</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;args)</argsstring>
        <name>_parse</name>
        <qualifiedname>CLI::App::_parse</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Internal parse function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7534" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7534" bodyend="7560"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a26a92886a7d7f10a9afbd39b6535f42b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_parse</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;&amp;args)</argsstring>
        <name>_parse</name>
        <qualifiedname>CLI::App::_parse</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;&amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Internal parse function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7563" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7563" bodyend="7577"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1ab712f53ce649bb4b4192ea5eb04c3a2d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_parse_stream</definition>
        <argsstring>(std::istream &amp;input)</argsstring>
        <name>_parse_stream</name>
        <qualifiedname>CLI::App::_parse_stream</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Internal function to parse a stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7580" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7580" bodyend="7589"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1af36b34d6e45f6ed309fc54c538f5eee9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_parse_config</definition>
        <argsstring>(const std::vector&lt; ConfigItem &gt; &amp;args)</argsstring>
        <name>_parse_config</name>
        <qualifiedname>CLI::App::_parse_config</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="structCLI_1_1ConfigItem" kindref="compound">ConfigItem</ref> &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse one config param, return false if not found in any subcommand, remove if it is</para>
<para>If this has more than one dot.separated.name, go into the subcommand matching it Returns true if it managed to find the option, if false you&apos;ll need to remove the arg manually. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7595" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7595" bodyend="7600"/>
        <references refid="namespaceCLI_1a474d5665894fe9a318ddbdb9ebf194d4acb5e100e5a9a3e7f6d1fd97512215282">CLI::error</references>
        <references refid="classCLI_1_1ConfigError_1ac99a7b10ea5e947f4a89a82f7a40870c" compoundref="CLI11_8hpp" startline="842" endline="842">CLI::ConfigError::Extras</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a1f7a70f4bc4c375a7de10073a5de709d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::_parse_single_config</definition>
        <argsstring>(const ConfigItem &amp;item, std::size_t level=0)</argsstring>
        <name>_parse_single_config</name>
        <qualifiedname>CLI::App::_parse_single_config</qualifiedname>
        <param>
          <type>const <ref refid="structCLI_1_1ConfigItem" kindref="compound">ConfigItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>level</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Fill in a single config option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7603" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7603" bodyend="7673"/>
        <references refid="classCLI_1_1Option_1a49ba3750688c16a2c001dd2c91ecba3e" compoundref="CLI11_8hpp" startline="4890" endline="4894">CLI::Option::add_result</references>
        <references refid="namespaceCLI_1a474d5665894fe9a318ddbdb9ebf194d4ad7ba9bbfda42b9657f14ee37ef76150b">CLI::capture</references>
        <references refid="classCLI_1_1Option_1af5677ee4a55c2a85784f64198db6b452" compoundref="CLI11_8hpp" startline="4270" endline="4270">CLI::Option::empty</references>
        <references refid="structCLI_1_1ConfigItem_1af76892225a187445bced0d220ae9e52b" compoundref="CLI11_8hpp" startline="2542" endline="2546">CLI::ConfigItem::fullname</references>
        <references refid="classCLI_1_1OptionBase_1a148499af929ff2498d1ef3567fc18dfc" compoundref="CLI11_8hpp" startline="4037" endline="4037">CLI::OptionBase&lt; CRTP &gt;::get_configurable</references>
        <references refid="classCLI_1_1Option_1a19c64a02c22d968e834c2aaf13f98f62" compoundref="CLI11_8hpp" startline="4638" endline="4638">CLI::Option::get_expected_min</references>
        <references refid="classCLI_1_1Option_1a4eb6212ac30a0b139da52d258a3a1790" compoundref="CLI11_8hpp" startline="4846" endline="4887">CLI::Option::get_flag_value</references>
        <references refid="namespaceCLI_1a474d5665894fe9a318ddbdb9ebf194d4af8fffd92dc01c6b6d02d482b82d5b315">CLI::ignore_all</references>
        <references refid="structCLI_1_1ConfigItem_1a201384703e6509d14bc28de3ef2a2cbc" compoundref="CLI11_8hpp" startline="2539">CLI::ConfigItem::inputs</references>
        <references refid="structCLI_1_1ConfigItem_1aaf499b8c32cef0f5c8d7271fa0d10b93" compoundref="CLI11_8hpp" startline="2536">CLI::ConfigItem::name</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ab50339a10e1de285ac99d4c3990b8693">CLI::detail::NONE</references>
        <references refid="classCLI_1_1ConfigError_1a909ce236b2deb557277721a8cb8bcbcc" compoundref="CLI11_8hpp" startline="843" endline="845">CLI::ConfigError::NotConfigurable</references>
        <references refid="structCLI_1_1ConfigItem_1ae6e0262b6c756e5e662b608613927ccc" compoundref="CLI11_8hpp" startline="2533">CLI::ConfigItem::parents</references>
        <references refid="classCLI_1_1Option_1ab06eb6c31666a4a003aeb2cf3e5cdcd9" compoundref="CLI11_8hpp" startline="4746" endline="4770">CLI::Option::run_callback</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a02368e2fe89470ab9b4131c7e3288349" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::_parse_single</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;args, bool &amp;positional_only)</argsstring>
        <name>_parse_single</name>
        <qualifiedname>CLI::App::_parse_single</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>positional_only</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse &quot;one&quot; argument (some may eat more than one), delegate to parent if fails, add to missing if missing from main return false if the parse has failed and needs to return to parent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7677" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7677" bodyend="7717"/>
        <references refid="classCLI_1_1HorribleError_1a5b3af460a569b54d75f38add87d67087" compoundref="CLI11_8hpp" startline="859" endline="859">CLI::HorribleError::HorribleError</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ac1fabfea54ec6011e694f211f3ffebf3">CLI::detail::LONG</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ab50339a10e1de285ac99d4c3990b8693">CLI::detail::NONE</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573a2b1681c49e27b242d19b93c5c3620cb6">CLI::detail::POSITIONAL_MARK</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573aa35c2b02966b1563e5bf7b81b8b0cf77">CLI::detail::SHORT</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ac4fb22412f02354dbe5574e37caf50a7">CLI::detail::SUBCOMMAND</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ab447b0bfeb6e4502fb6a0c4223fb8d00">CLI::detail::SUBCOMMAND_TERMINATOR</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573a0693f2b4d4f0740bc76a2d65566b4fda">CLI::detail::WINDOWS_STYLE</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a6e3eedf148351dabd1868bd7e63d24bc" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CLI::App::_count_remaining_positionals</definition>
        <argsstring>(bool required_only=false) const</argsstring>
        <name>_count_remaining_positionals</name>
        <qualifiedname>CLI::App::_count_remaining_positionals</qualifiedname>
        <param>
          <type>bool</type>
          <declname>required_only</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Count the required remaining positional arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7720" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7720" bodyend="7731"/>
        <references refid="classCLI_1_1Option_1a154543609c45d9c59c69991a08ca272b" compoundref="CLI11_8hpp" startline="4267" endline="4267">CLI::Option::count</references>
        <references refid="classCLI_1_1Option_1af87dffed2cb245673312c993e563710e" compoundref="CLI11_8hpp" startline="4643" endline="4643">CLI::Option::get_items_expected_min</references>
        <references refid="classCLI_1_1Option_1acab7033604b49e314d290b01adea690d" compoundref="CLI11_8hpp" startline="4654" endline="4654">CLI::Option::get_positional</references>
        <references refid="classCLI_1_1OptionBase_1aa902dee6da6d7f5b083b1c7d5f9c1308" compoundref="CLI11_8hpp" startline="4028" endline="4028">CLI::OptionBase&lt; CRTP &gt;::get_required</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1af15231547d53a51458059588a1c34a0b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::_has_remaining_positionals</definition>
        <argsstring>() const</argsstring>
        <name>_has_remaining_positionals</name>
        <qualifiedname>CLI::App::_has_remaining_positionals</qualifiedname>
        <briefdescription>
<para>Count the required remaining positional arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7734" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7734" bodyend="7742"/>
        <references refid="classCLI_1_1Option_1a154543609c45d9c59c69991a08ca272b" compoundref="CLI11_8hpp" startline="4267" endline="4267">CLI::Option::count</references>
        <references refid="classCLI_1_1Option_1af87dffed2cb245673312c993e563710e" compoundref="CLI11_8hpp" startline="4643" endline="4643">CLI::Option::get_items_expected_min</references>
        <references refid="classCLI_1_1Option_1acab7033604b49e314d290b01adea690d" compoundref="CLI11_8hpp" startline="4654" endline="4654">CLI::Option::get_positional</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a3b564aa8c90f25152f5379c661ab82b1" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::_parse_positional</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;args, bool haltOnSubcommand)</argsstring>
        <name>_parse_positional</name>
        <qualifiedname>CLI::App::_parse_positional</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>haltOnSubcommand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a positional, go up the tree to check <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haltOnSubcommand</parametername>
</parameternamelist>
<parameterdescription>
<para>if set to true the operation will not process subcommands merely return false Return true if the positional was used false otherwise </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Try to find a local subcommand that is repeated</para>
<para>now try one last gasp at subcommands that have been executed before, go to root app and try to find a subcommand in a broader way, if one exists let the parent deal with it</para>
<para>If this is an option group don&apos;t deal with it</para>
<para>We are out of other options this goes to missing</para>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7747" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7747" bodyend="7844"/>
        <references refid="classCLI_1_1Option_1a49ba3750688c16a2c001dd2c91ecba3e" compoundref="CLI11_8hpp" startline="4890" endline="4894">CLI::Option::add_result</references>
        <references refid="classCLI_1_1Option_1a154543609c45d9c59c69991a08ca272b" compoundref="CLI11_8hpp" startline="4267" endline="4267">CLI::Option::count</references>
        <references refid="classCLI_1_1Option_1a784f66cb9371753ddeb8df59c85cb490" compoundref="CLI11_8hpp" startline="4333" endline="4333">CLI::Option::get_allow_extra_args</references>
        <references refid="classCLI_1_1Option_1af87dffed2cb245673312c993e563710e" compoundref="CLI11_8hpp" startline="4643" endline="4643">CLI::Option::get_items_expected_min</references>
        <references refid="classCLI_1_1Option_1acab7033604b49e314d290b01adea690d" compoundref="CLI11_8hpp" startline="4654" endline="4654">CLI::Option::get_positional</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ab50339a10e1de285ac99d4c3990b8693">CLI::detail::NONE</references>
        <references refid="classCLI_1_1OptionBase_1abad838fd3da11f840a40536a279912ac" compoundref="CLI11_8hpp" startline="3960">CLI::OptionBase&lt; CRTP &gt;::required_</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a70bf7b1ed5b4f823746dba84ec3d9927" prot="protected" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::_find_subcommand</definition>
        <argsstring>(const std::string &amp;subc_name, bool ignore_disabled, bool ignore_used) const noexcept</argsstring>
        <name>_find_subcommand</name>
        <qualifiedname>CLI::App::_find_subcommand</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>subc_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_disabled</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_used</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Locate a subcommand by name with two conditions, should disabled subcommands be ignored, and should used subcommands be ignored </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7848" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7848" bodyend="7864"/>
        <references refid="classCLI_1_1App_1a70bf7b1ed5b4f823746dba84ec3d9927" compoundref="CLI11_8hpp" startline="7848" endline="7864">_find_subcommand</references>
        <referencedby refid="classCLI_1_1App_1a70bf7b1ed5b4f823746dba84ec3d9927" compoundref="CLI11_8hpp" startline="7848" endline="7864">_find_subcommand</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1af20c05b97b9de2a4543a2de9bcc0993d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::_parse_subcommand</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;args)</argsstring>
        <name>_parse_subcommand</name>
        <qualifiedname>CLI::App::_parse_subcommand</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a subcommand, modify args and continue</para>
<para>Unlike the others, this one will always allow fallthrough return true if the subcommand was processed false otherwise </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7870" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7870" bodyend="7896"/>
        <references refid="classCLI_1_1HorribleError_1a5b3af460a569b54d75f38add87d67087" compoundref="CLI11_8hpp" startline="859" endline="859">CLI::HorribleError::HorribleError</references>
        <referencedby refid="structCLI_1_1detail_1_1AppFriend_1a091bd002147e12c2e21b4d1b42becff7" compoundref="CLI11_8hpp" startline="8407" endline="8410">CLI::detail::AppFriend::parse_subcommand</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a73c9decd5eb2b0c7eeda63cc4bd5048e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CLI::App::_parse_arg</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;args, detail::Classifier current_type)</argsstring>
        <name>_parse_arg</name>
        <qualifiedname>CLI::App::_parse_arg</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573" kindref="member">detail::Classifier</ref></type>
          <declname>current_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a short (false) or long (true) argument, must be at the top of the list return true if the argument was processed or false if nothing was done </para>
        </detaileddescription>
        <inbodydescription>
<para>if we require a separator add it here</para>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="7900" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="7900" bodyend="8057"/>
        <references refid="classCLI_1_1HorribleError_1a5b3af460a569b54d75f38add87d67087" compoundref="CLI11_8hpp" startline="859" endline="859">CLI::HorribleError::HorribleError</references>
        <references refid="classCLI_1_1Option_1a21df1631a6f5ddb495b9ce9c940669b9a3e711527b127cf4c52c3470324bb7a74">CLI::Option::callback_run</references>
        <references refid="namespaceCLI_1_1detail_1a58ce723daebf6cd298565eb365d1b157" compoundref="CLI11_8hpp" startline="3269" endline="3282">CLI::detail::checked_multiply</references>
        <references refid="namespaceCLI_1_1detail_1a99abe3824b1f1bea457ad0ae635f5c51" compoundref="CLI11_8hpp" startline="161">CLI::detail::expected_max_vector_size</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ac1fabfea54ec6011e694f211f3ffebf3">CLI::detail::LONG</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ab50339a10e1de285ac99d4c3990b8693">CLI::detail::NONE</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573a2b1681c49e27b242d19b93c5c3620cb6">CLI::detail::POSITIONAL_MARK</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573aa35c2b02966b1563e5bf7b81b8b0cf77">CLI::detail::SHORT</references>
        <references refid="namespaceCLI_1_1detail_1a0de15b0ba0d12c9170d15693477808ed" compoundref="CLI11_8hpp" startline="2418" endline="2431">CLI::detail::split_long</references>
        <references refid="namespaceCLI_1_1detail_1a1e6f215bcb727ff49f126ac3e1a13e40" compoundref="CLI11_8hpp" startline="2408" endline="2415">CLI::detail::split_short</references>
        <references refid="namespaceCLI_1_1detail_1aadbd2b5b93afe2f10427dd6e32639b0c" compoundref="CLI11_8hpp" startline="2434" endline="2447">CLI::detail::split_windows_style</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ac4fb22412f02354dbe5574e37caf50a7">CLI::detail::SUBCOMMAND</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573ab447b0bfeb6e4502fb6a0c4223fb8d00">CLI::detail::SUBCOMMAND_TERMINATOR</references>
        <references refid="classCLI_1_1ArgumentMismatch_1ad98dd3c8796e1fa4c3e6e426aa28e766" compoundref="CLI11_8hpp" startline="800" endline="802">CLI::ArgumentMismatch::TypedAtLeast</references>
        <references refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573a0693f2b4d4f0740bc76a2d65566b4fda">CLI::detail::WINDOWS_STYLE</references>
        <referencedby refid="structCLI_1_1detail_1_1AppFriend_1ac66cce5a6369dc642c31362a9abecc9f" compoundref="CLI11_8hpp" startline="8400" endline="8403">CLI::detail::AppFriend::parse_arg</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1adec0b4c1ae96c8ea1a031b416772e87c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_trigger_pre_parse</definition>
        <argsstring>(std::size_t remaining_args)</argsstring>
        <name>_trigger_pre_parse</name>
        <qualifiedname>CLI::App::_trigger_pre_parse</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>remaining_args</declname>
        </param>
        <briefdescription>
<para>Trigger the pre_parse callback if needed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="8060" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="8060" bodyend="8076"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1a0e00bdc00c5bca05d52d98833f77a3b5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
        <definition>App * CLI::App::_get_fallthrough_parent</definition>
        <argsstring>()</argsstring>
        <name>_get_fallthrough_parent</name>
        <qualifiedname>CLI::App::_get_fallthrough_parent</qualifiedname>
        <briefdescription>
<para>Get the appropriate parent to fallthrough to which is the first one that has a name or the main app. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="8079" column="9" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="8079" bodyend="8088"/>
        <references refid="classCLI_1_1HorribleError_1a5b3af460a569b54d75f38add87d67087" compoundref="CLI11_8hpp" startline="859" endline="859">CLI::HorribleError::HorribleError</references>
        <references refid="classCLI_1_1App_1a557239f7b3a655d0e0d6be8820f3e043" compoundref="CLI11_8hpp" startline="5462">parent_</references>
        <referencedby refid="structCLI_1_1detail_1_1AppFriend_1a4a6a8cc04f6f6abe980c65042798cac4" compoundref="CLI11_8hpp" startline="8413" endline="8413">CLI::detail::AppFriend::get_fallthrough_parent</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1aade2ac30d86141da0d55d9181ac8b710" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; CLI::App::_compare_subcommand_names</definition>
        <argsstring>(const App &amp;subcom, const App &amp;base) const</argsstring>
        <name>_compare_subcommand_names</name>
        <qualifiedname>CLI::App::_compare_subcommand_names</qualifiedname>
        <param>
          <type>const <ref refid="classCLI_1_1App" kindref="compound">App</ref> &amp;</type>
          <declname>subcom</declname>
        </param>
        <param>
          <type>const <ref refid="classCLI_1_1App" kindref="compound">App</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Helper function to run through all possible comparisons of subcommand names to check there is no overlap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="8091" column="23" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="8091" bodyend="8139"/>
        <references refid="classCLI_1_1App_1ab6069c968af1eea4a89980e6f1487464" compoundref="CLI11_8hpp" startline="5468">aliases_</references>
        <references refid="classCLI_1_1App_1a3ba6eb33f3ee9cd1a126385fa44f2c16" compoundref="CLI11_8hpp" startline="6995" endline="7021">check_name</references>
        <references refid="classCLI_1_1App_1a405d0642ba4245a6ea61b230c4854667" compoundref="CLI11_8hpp" startline="5319">disabled_</references>
        <references refid="classCLI_1_1App_1adeac41bd40859dfbff9817244c09c989" compoundref="CLI11_8hpp" startline="6966" endline="6966">get_name</references>
        <references refid="classCLI_1_1App_1a2c912598c2a49e41536ca88f2786195b" compoundref="CLI11_8hpp" startline="5409">subcommands_</references>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1App_1afe454e935514c0acd6bd81e68d908206" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_move_to_missing</definition>
        <argsstring>(detail::Classifier val_type, const std::string &amp;val)</argsstring>
        <name>_move_to_missing</name>
        <qualifiedname>CLI::App::_move_to_missing</qualifiedname>
        <param>
          <type><ref refid="namespaceCLI_1_1detail_1aba10771e3ff645fe1305be4cae517573" kindref="member">detail::Classifier</ref></type>
          <declname>val_type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Helper function to place extra values in the most appropriate position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="8141" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="8141" bodyend="8155"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCLI_1_1App_1aaabfb31d7fb10ee7465716b948b376dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CLI::App::_move_option</definition>
        <argsstring>(Option *opt, App *app)</argsstring>
        <name>_move_option</name>
        <qualifiedname>CLI::App::_move_option</qualifiedname>
        <param>
          <type><ref refid="classCLI_1_1Option" kindref="compound">Option</ref> *</type>
          <declname>opt</declname>
        </param>
        <param>
          <type><ref refid="classCLI_1_1App" kindref="compound">App</ref> *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
<para>function that could be used by subclasses of <ref refid="classCLI_1_1App" kindref="compound">App</ref> to shift options around into subcommands </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="8159" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="8159" bodyend="8196"/>
        <references refid="classCLI_1_1Option_1ab84751fbf9037efaed5b64fed17fe57f" compoundref="CLI11_8hpp" startline="4686" endline="4739">CLI::Option::get_name</references>
        <references refid="classCLI_1_1App_1a862e55a8c1fe3676452aadc6a222f865" compoundref="CLI11_8hpp" startline="5345">options_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Creates a command line program, with very few defaults. </para>
    </briefdescription>
    <detaileddescription>
<para>To use, create a new <computeroutput>Program()</computeroutput> instance with <computeroutput>argc</computeroutput>, <computeroutput>argv</computeroutput>, and a help description. The templated add_option methods make it easy to prepare options. Remember to call <computeroutput>.start</computeroutput> before starting your program, so that the options can be evaluated and the help option doesn&apos;t accidentally run your program. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CLI::App</label>
        <link refid="classCLI_1_1App"/>
      </node>
      <node id="2">
        <label>CLI::Option_group</label>
        <link refid="classCLI_1_1Option__group"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CLI::App</label>
        <link refid="classCLI_1_1App"/>
        <childnode refid="2" relation="usage">
          <edgelabel>#option_defaults_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#config_ptr_</edgelabel>
          <edgelabel>#help_all_ptr_</edgelabel>
          <edgelabel>#help_ptr_</edgelabel>
          <edgelabel>#version_ptr_</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>#parent_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>CLI::Option</label>
        <link refid="classCLI_1_1Option"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>#parent_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>CLI::OptionBase&lt; CRTP &gt;</label>
        <link refid="classCLI_1_1OptionBase"/>
      </node>
      <node id="2">
        <label>CLI::OptionDefaults</label>
        <link refid="classCLI_1_1OptionDefaults"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CLI::OptionBase&lt; Option &gt;</label>
        <link refid="classCLI_1_1OptionBase"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; Option &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>CLI::OptionBase&lt; OptionDefaults &gt;</label>
        <link refid="classCLI_1_1OptionBase"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; OptionDefaults &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="5286" column="1" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="5286" bodyend="8197"/>
    <listofallmembers>
      <member refid="classCLI_1_1App_1a02e0d1728f29f165cd485ae8574bcd24" prot="private" virt="non-virtual"><scope>CLI::App</scope><name>_add_flag_internal</name></member>
      <member refid="classCLI_1_1App_1aade2ac30d86141da0d55d9181ac8b710" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_compare_subcommand_names</name></member>
      <member refid="classCLI_1_1App_1acd99119433fcca2901ad13714d3acb0a" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_configure</name></member>
      <member refid="classCLI_1_1App_1a6e3eedf148351dabd1868bd7e63d24bc" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_count_remaining_positionals</name></member>
      <member refid="classCLI_1_1App_1a70bf7b1ed5b4f823746dba84ec3d9927" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_find_subcommand</name></member>
      <member refid="classCLI_1_1App_1a0e00bdc00c5bca05d52d98833f77a3b5" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_get_fallthrough_parent</name></member>
      <member refid="classCLI_1_1App_1af15231547d53a51458059588a1c34a0b" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_has_remaining_positionals</name></member>
      <member refid="classCLI_1_1App_1aaabfb31d7fb10ee7465716b948b376dc" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>_move_option</name></member>
      <member refid="classCLI_1_1App_1afe454e935514c0acd6bd81e68d908206" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_move_to_missing</name></member>
      <member refid="classCLI_1_1App_1a241ba75a6c98b36349ae2f71a9137291" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_parse</name></member>
      <member refid="classCLI_1_1App_1a26a92886a7d7f10a9afbd39b6535f42b" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_parse</name></member>
      <member refid="classCLI_1_1App_1a73c9decd5eb2b0c7eeda63cc4bd5048e" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_parse_arg</name></member>
      <member refid="classCLI_1_1App_1af36b34d6e45f6ed309fc54c538f5eee9" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_parse_config</name></member>
      <member refid="classCLI_1_1App_1a3b564aa8c90f25152f5379c661ab82b1" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_parse_positional</name></member>
      <member refid="classCLI_1_1App_1a02368e2fe89470ab9b4131c7e3288349" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_parse_single</name></member>
      <member refid="classCLI_1_1App_1a1f7a70f4bc4c375a7de10073a5de709d" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_parse_single_config</name></member>
      <member refid="classCLI_1_1App_1ab712f53ce649bb4b4192ea5eb04c3a2d" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_parse_stream</name></member>
      <member refid="classCLI_1_1App_1af20c05b97b9de2a4543a2de9bcc0993d" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_parse_subcommand</name></member>
      <member refid="classCLI_1_1App_1a0fec24c804daf5b458bb5762e4e75a73" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_process</name></member>
      <member refid="classCLI_1_1App_1ad9e5d41a1efd28da92235b72682cbf74" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_process_callbacks</name></member>
      <member refid="classCLI_1_1App_1a7a15e5743d4a8eccac57955ed5a6a3b6" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_process_config_file</name></member>
      <member refid="classCLI_1_1App_1a0a367021eca99facc7968bb24333a8fb" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_process_env</name></member>
      <member refid="classCLI_1_1App_1a4d57bf638f00715cbf27dcf055580398" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_process_extras</name></member>
      <member refid="classCLI_1_1App_1a7e8e59098befcc1f10969b9e5c88e0f9" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_process_extras</name></member>
      <member refid="classCLI_1_1App_1a3d04865bf341cea82bcb164b10db578b" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_process_help_flags</name></member>
      <member refid="classCLI_1_1App_1a4e0c00ce18bbfca1ae890a653bbd2b93" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_process_requirements</name></member>
      <member refid="classCLI_1_1App_1addab9d99dce6a2f96b5c8748d20ebea8" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_recognize</name></member>
      <member refid="classCLI_1_1App_1adec0b4c1ae96c8ea1a031b416772e87c" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_trigger_pre_parse</name></member>
      <member refid="classCLI_1_1App_1a2c9093efb2ffc55224f2acf2239fd5ce" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_valid_subcommand</name></member>
      <member refid="classCLI_1_1App_1ae2908ce3eded7e3d6bb2e6fdd2410576" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>_validate</name></member>
      <member refid="classCLI_1_1App_1a5fef22317a182fa5db1d7b1af4c89c68" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_flag</name></member>
      <member refid="classCLI_1_1App_1a9d90690615fe532170d0db4829ff6d78" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_flag</name></member>
      <member refid="classCLI_1_1App_1a460d387f503d26ea8d3fe1be51fbc2fc" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_flag</name></member>
      <member refid="classCLI_1_1App_1ae57cc5d74770a14633dbb17973255b14" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_flag</name></member>
      <member refid="classCLI_1_1App_1aba52c086839e22901b835dfa3c13337c" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_flag</name></member>
      <member refid="classCLI_1_1App_1ab22c360f5d16d201329f260c927a1c9e" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_flag_callback</name></member>
      <member refid="classCLI_1_1App_1af183463c4f34847ef4b828b65ade55ca" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_flag_function</name></member>
      <member refid="classCLI_1_1App_1a8c812d42c7720ecb5cd0aec41b5aa941" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_option</name></member>
      <member refid="classCLI_1_1App_1a424261859a15ab1426dafb5c3d64eaed" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_option</name></member>
      <member refid="classCLI_1_1App_1a19952423983d5be5f723fca7f8d559b9" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_option</name></member>
      <member refid="classCLI_1_1App_1adde13292800e001d834a97ebfda9e414" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_option</name></member>
      <member refid="classCLI_1_1App_1a69553182f587b733f323589eecbd8491" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_option_function</name></member>
      <member refid="classCLI_1_1App_1a5e114076a7cfa20a5895e9f6e8fd7dd5" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_option_group</name></member>
      <member refid="classCLI_1_1App_1a18d7c8077e7a02a83b374df9bd5204a6" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_option_no_stream</name></member>
      <member refid="classCLI_1_1App_1a8b461d2233ec4121259011b5ed24b336" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_subcommand</name></member>
      <member refid="classCLI_1_1App_1a99e2ddf1ae27593e19162eba3aec5fcd" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>add_subcommand</name></member>
      <member refid="classCLI_1_1App_1ad5d02ee857879c6abd007c8293a1151a" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>alias</name></member>
      <member refid="classCLI_1_1App_1ab6069c968af1eea4a89980e6f1487464" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>aliases_</name></member>
      <member refid="classCLI_1_1App_1a1d30edba47f893dd7ca501a1aa3cad68" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>allow_config_extras</name></member>
      <member refid="classCLI_1_1App_1ae572bd2298ca903644fd1c5047022d2a" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>allow_config_extras</name></member>
      <member refid="classCLI_1_1App_1a4ff932cdfe4237c0f63a00216d0d86b9" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>allow_config_extras_</name></member>
      <member refid="classCLI_1_1App_1a2b96da449b181995ea3b5a7f59c6f9e0" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>allow_extras</name></member>
      <member refid="classCLI_1_1App_1ae994679fee098b93cbc654a99b8019ee" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>allow_extras_</name></member>
      <member refid="classCLI_1_1App_1a65169602d26681f9cfaad44c9d2fbf0b" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>allow_windows_style_options</name></member>
      <member refid="classCLI_1_1App_1afdcf791220d111363ac12526a693227b" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>allow_windows_style_options_</name></member>
      <member refid="classCLI_1_1App_1aaa53fda3b6aa477158ea8b1768342cc0" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>App</name></member>
      <member refid="classCLI_1_1App_1a61fe9472ef81b1503159511bb8e76430" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>App</name></member>
      <member refid="classCLI_1_1App_1a5a64699da9234ec6e3b260f212602d34" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>App</name></member>
      <member refid="classCLI_1_1App_1af51ab8b76ecf5404a4ff442cec071d55" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>callback</name></member>
      <member refid="classCLI_1_1App_1a3ba6eb33f3ee9cd1a126385fa44f2c16" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>check_name</name></member>
      <member refid="classCLI_1_1App_1a6b5a085a039cab7e5906b3cd4407fdc8" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>clear</name></member>
      <member refid="classCLI_1_1App_1a2a3aca3df859e7d772298a44d7b91fc9" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>clear_aliases</name></member>
      <member refid="classCLI_1_1App_1a1b0a61f1f300a7e9645562c29de2f2bc" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>config_formatter</name></member>
      <member refid="classCLI_1_1App_1afec4182982dfca15a835ee7b3abf8660" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>config_formatter_</name></member>
      <member refid="classCLI_1_1App_1a16180e7605e07c7a3f8e6b458569bc02" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>config_ptr_</name></member>
      <member refid="classCLI_1_1App_1aca552f0b8af9eec4d079538e9efe0f06" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>config_to_str</name></member>
      <member refid="classCLI_1_1App_1a086b24469af0c346e40bf20e4882c04b" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>configurable</name></member>
      <member refid="classCLI_1_1App_1aa2b35c6b5a5f471663634f94b7b2337e" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>configurable_</name></member>
      <member refid="classCLI_1_1App_1ac882ae7b667d460501d77aebfd9a5d26" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>count</name></member>
      <member refid="classCLI_1_1App_1a89776486006cb61d112ae1cdd73848e1" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>count</name></member>
      <member refid="classCLI_1_1App_1a4933a7e5603ab5eaa9705d4027e6cb12" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>count_all</name></member>
      <member refid="classCLI_1_1App_1ae55bdb283aa20595c30a0cbb83d833d3" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>default_startup</name></member>
      <member refid="classCLI_1_1App_1aa419c44818251d7e79fc90dcdd19bc82" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>description</name></member>
      <member refid="classCLI_1_1App_1aa6a2e79e0a5990b44bc5d76504437fcd" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>description_</name></member>
      <member refid="classCLI_1_1App_1af5104a0ae06292a8cef25e428ce533c8" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>disabled</name></member>
      <member refid="classCLI_1_1App_1a405d0642ba4245a6ea61b230c4854667" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>disabled_</name></member>
      <member refid="classCLI_1_1App_1a1d4af11ac48929ee486482ea7b2cfe4f" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>disabled_by_default</name></member>
      <member refid="classCLI_1_1App_1a7d58a9da106a0fb723eda4bd56017523" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>enabled_by_default</name></member>
      <member refid="classCLI_1_1App_1a56990d551dba3360f0f3fb0db10ae510" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>exclude_options_</name></member>
      <member refid="classCLI_1_1App_1ab95644f6cb3babcf2d31b3fea8304a82" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>exclude_subcommands_</name></member>
      <member refid="classCLI_1_1App_1ac9f42c467510dd3ff82d16e61705a14f" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>excludes</name></member>
      <member refid="classCLI_1_1App_1aa931caebf13af7d7a96badf0b06a4ace" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>excludes</name></member>
      <member refid="classCLI_1_1App_1aac000657ef11647125ba91af38fd7d9c" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>exit</name></member>
      <member refid="classCLI_1_1App_1a75d7117019ea60a2f83d91f401aa9f4b" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>failure_message</name></member>
      <member refid="classCLI_1_1App_1a716e2e750769c9e39c96921caddb1689" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>failure_message_</name></member>
      <member refid="classCLI_1_1App_1a2c2c53ff8166abaff0bd171fd1908fa8" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>fallthrough</name></member>
      <member refid="classCLI_1_1App_1ad3196989217de9162ffa0a5c1e81e92c" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>fallthrough_</name></member>
      <member refid="classCLI_1_1App_1ac2db60eae7dc5f2b2210907fe671c00d" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>final_callback</name></member>
      <member refid="classCLI_1_1App_1a8c798351bee01da305e7b9570ac7dab2" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>final_callback_</name></member>
      <member refid="classCLI_1_1App_1a7e9ada7d9c9c9799084d590ebe31e05a" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>footer</name></member>
      <member refid="classCLI_1_1App_1ac8f976989332f945f16e6a1412ff0abd" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>footer</name></member>
      <member refid="classCLI_1_1App_1a4fbf8b55a33e24d4c5a0532568dd7302" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>footer_</name></member>
      <member refid="classCLI_1_1App_1a585c61650d02a0169122e55811d78d89" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>footer_callback_</name></member>
      <member refid="classCLI_1_1App_1adbae107812ed5c9cc0aa36b7dfa7a842" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>formatter</name></member>
      <member refid="classCLI_1_1App_1af55e852ed6e916b2b0182f46d6daabfc" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>formatter_</name></member>
      <member refid="classCLI_1_1App_1aa3a31c069f2e85cb474fe80ec2c9d883" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>formatter_fn</name></member>
      <member refid="classCLI_1_1App_1a626fd71499fbb8e26bb83f33b1df1536" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_aliases</name></member>
      <member refid="classCLI_1_1App_1aeab6a6f6ddc3540f56a7494be5281a5a" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_allow_config_extras</name></member>
      <member refid="classCLI_1_1App_1a82efdb6d3d77d2faff51a4960034a133" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_allow_extras</name></member>
      <member refid="classCLI_1_1App_1a3620a019821239f7d8be472cead88cd2" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_allow_windows_style_options</name></member>
      <member refid="classCLI_1_1App_1abd5578bc276f16d90744c024d61d9e56" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_config_formatter</name></member>
      <member refid="classCLI_1_1App_1ad070eb4afc424fc0dc3b5821c75c260c" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_config_formatter_base</name></member>
      <member refid="classCLI_1_1App_1a2c7e9edc5a8348872a7e7fafc9c34203" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_config_ptr</name></member>
      <member refid="classCLI_1_1App_1a6270f35ecf376ff947ddeccac28711fb" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_config_ptr</name></member>
      <member refid="classCLI_1_1App_1a2976c5b0cccca69d24ed5ad52924ab54" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_configurable</name></member>
      <member refid="classCLI_1_1App_1ab7637441b1cd7fb2fcf5e7e095e779a7" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_description</name></member>
      <member refid="classCLI_1_1App_1a770812d1989ce390b1919080d55a65d3" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_disabled</name></member>
      <member refid="classCLI_1_1App_1a025af752c08a28736d5f6d3c10d6ca35" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_disabled_by_default</name></member>
      <member refid="classCLI_1_1App_1aa75309f557d6cdba74b299e4f9e7cfbe" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_display_name</name></member>
      <member refid="classCLI_1_1App_1af35ca552ab4b1ee3ea975183c94e2f9c" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_enabled_by_default</name></member>
      <member refid="classCLI_1_1App_1ab89a4979a6e0ea340188f28556136a6b" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_fallthrough</name></member>
      <member refid="classCLI_1_1App_1ad1a6871e4384311fae85e5e03fdcd3fa" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_footer</name></member>
      <member refid="classCLI_1_1App_1a88ece0694b79e4471eb2456b4591cd5e" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_formatter</name></member>
      <member refid="classCLI_1_1App_1a7285a71dac7f168f5d0f992ac75f404d" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_group</name></member>
      <member refid="classCLI_1_1App_1af0d7e22ac4f12250818bce3e22e8d569" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_groups</name></member>
      <member refid="classCLI_1_1App_1a389fe480583b713747db067b3ce1d5a5" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_help_all_ptr</name></member>
      <member refid="classCLI_1_1App_1a4720d5ded12ab00d3aa76bd195ad92be" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_help_ptr</name></member>
      <member refid="classCLI_1_1App_1aaf8da2c85d6c89c02d326402da769caf" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_help_ptr</name></member>
      <member refid="classCLI_1_1App_1a590129f76003fcf849eeb18d05e4571c" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_ignore_case</name></member>
      <member refid="classCLI_1_1App_1ad6af9821d55785a8d56744db78057cdd" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_ignore_underscore</name></member>
      <member refid="classCLI_1_1App_1affb7cd37fada9a7470e5bf2f7444249f" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_immediate_callback</name></member>
      <member refid="classCLI_1_1App_1adeac41bd40859dfbff9817244c09c989" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_name</name></member>
      <member refid="classCLI_1_1App_1ad098a287e9a398ec6b24630335d068c8" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_option</name></member>
      <member refid="classCLI_1_1App_1a3424bdc3973b2c7a6e3e13ba50de748a" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_option</name></member>
      <member refid="classCLI_1_1App_1a1a20a4e0134d40cb7c5e8ffd0d7cdf09" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_option_group</name></member>
      <member refid="classCLI_1_1App_1a5125f786c409fe0bbba684fe99f2c5fe" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_option_no_throw</name></member>
      <member refid="classCLI_1_1App_1aa429cf3265602a5a1d60b87504ec33c5" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_option_no_throw</name></member>
      <member refid="classCLI_1_1App_1ab4e19fac7ff58e4b5252a387728dcd72" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_options</name></member>
      <member refid="classCLI_1_1App_1aef371986f217c7082123a36fac202448" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_options</name></member>
      <member refid="classCLI_1_1App_1a5f31177cf639f148d3a315861ff6ca5c" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_parent</name></member>
      <member refid="classCLI_1_1App_1ace027de5fa7cc33217d9d3eb2c2552b1" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_parent</name></member>
      <member refid="classCLI_1_1App_1af77a6cd4835a53b0446576fdbe8ac39c" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_positionals_at_end</name></member>
      <member refid="classCLI_1_1App_1a60e3e9d4198e855cd721887502acca54" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_prefix_command</name></member>
      <member refid="classCLI_1_1App_1ac0458768d5cd311ef361e039ce58c45a" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_require_option_max</name></member>
      <member refid="classCLI_1_1App_1a242b3d549b70e9f8785b727703371d40" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_require_option_min</name></member>
      <member refid="classCLI_1_1App_1a76fa6784188f97df35ceb6b8207accd2" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_require_subcommand_max</name></member>
      <member refid="classCLI_1_1App_1af990c1f077d815768ca3d2f250d058d9" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_require_subcommand_min</name></member>
      <member refid="classCLI_1_1App_1a74fa8829acfe2311724ecad5bdb91dce" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_required</name></member>
      <member refid="classCLI_1_1App_1ab5ef23f4ef7977a310376f2c0c917f2d" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_silent</name></member>
      <member refid="classCLI_1_1App_1ad03898df2eadbe937c81d80215169235" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_subcommand</name></member>
      <member refid="classCLI_1_1App_1a4e9542d25bca3e8eaaa3e27e09ca4b59" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_subcommand</name></member>
      <member refid="classCLI_1_1App_1a8bba3b53cf7f222aefd592457dd37508" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_subcommand</name></member>
      <member refid="classCLI_1_1App_1a63c0110a3e63515e3b9b70b7b560d676" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_subcommand_ptr</name></member>
      <member refid="classCLI_1_1App_1a47a0d67f7d0f856613d45691b8822962" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_subcommand_ptr</name></member>
      <member refid="classCLI_1_1App_1a4b5075daadca7c1f7aa1781bc3c9024f" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_subcommand_ptr</name></member>
      <member refid="classCLI_1_1App_1a6b4b0c02d0c3d08b534fb93737056751" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_subcommands</name></member>
      <member refid="classCLI_1_1App_1aaee874fd49a1d90b5e810090a8089639" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_subcommands</name></member>
      <member refid="classCLI_1_1App_1a8120758d6f82878986ff38cfab3d591f" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_subcommands</name></member>
      <member refid="classCLI_1_1App_1a7563b3694b8ee4b14e7183966dc77f69" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_validate_positionals</name></member>
      <member refid="classCLI_1_1App_1aaf2fc24705a68da1de8d0b86e3ef9796" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_version_ptr</name></member>
      <member refid="classCLI_1_1App_1a764c57fe2e96ec8a871fbc6a4299e8fb" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>get_version_ptr</name></member>
      <member refid="classCLI_1_1App_1ad07c68d1fcede041fa7fed647e5e3d84" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>got_subcommand</name></member>
      <member refid="classCLI_1_1App_1a5afd7a600223bae58b46aaff670e2d25" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>got_subcommand</name></member>
      <member refid="classCLI_1_1App_1a57b9e87080e5c1d87672dcfe0edd0af5" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>group</name></member>
      <member refid="classCLI_1_1App_1ac31738f617c3ce7aaf9fd94c3f54fc0f" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>group_</name></member>
      <member refid="classCLI_1_1App_1a76fcdccb7d70b6104b59390195f80112" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>has_automatic_name_</name></member>
      <member refid="classCLI_1_1App_1a2d6847ad9eec079214a61d834f29e35f" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>help</name></member>
      <member refid="classCLI_1_1App_1a86d617145bbba16f8575159456f4c255" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>help_all_ptr_</name></member>
      <member refid="classCLI_1_1App_1ac7ee114dd086a41f0f144416bcdba097" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>help_ptr_</name></member>
      <member refid="classCLI_1_1App_1a1e0b05ed58f80301b945ffc344b61aa3" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>ignore_case</name></member>
      <member refid="classCLI_1_1App_1ac0ded9f408801bccc14d6390b99c11b5" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>ignore_case_</name></member>
      <member refid="classCLI_1_1App_1aca4afbde81a59b25fc514b960d472c08" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>ignore_underscore</name></member>
      <member refid="classCLI_1_1App_1a632f10cfa5ee5894a67011f7a6097728" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>ignore_underscore_</name></member>
      <member refid="classCLI_1_1App_1aed10b824c3f4aa9e0a3373556f916494" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>immediate_callback</name></member>
      <member refid="classCLI_1_1App_1a99175d2ee21f9b1983acf62db0749f56" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>immediate_callback_</name></member>
      <member refid="classCLI_1_1App_1ae8d614e3f5c703216da768dd85d98d8f" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>increment_parsed</name></member>
      <member refid="classCLI_1_1App_1a664a3162461b3121caf5cae7f65a95e6" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>missing_</name></member>
      <member refid="classCLI_1_1App_1a51ebef2d1d91383bc76cb9c0f04b90a3" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>missing_t</name></member>
      <member refid="classCLI_1_1App_1a76d7d45b60647632df392dd5e696877a" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>name</name></member>
      <member refid="classCLI_1_1App_1a61a36f7297a3199b9e789887510fa3fa" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>name_</name></member>
      <member refid="classCLI_1_1App_1ad375a844780daa83420f9821434e187d" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>need_options_</name></member>
      <member refid="classCLI_1_1App_1ad8d1f603e89a28555a09b754420054ca" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>need_subcommands_</name></member>
      <member refid="classCLI_1_1App_1a7f979e6e4b749880cb55dc2abd5d4b6a" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>needs</name></member>
      <member refid="classCLI_1_1App_1afb6c6a0378a32c53ec8776bb3acc9500" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>needs</name></member>
      <member refid="classCLI_1_1App_1a91720aaf4c92c867dc042c723503b74e" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>operator bool</name></member>
      <member refid="classCLI_1_1App_1aeb44de6d3b3216c28ef99ea04ab86f83" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>operator=</name></member>
      <member refid="classCLI_1_1App_1a05c1dbeb654a91b792889551656c0ab8" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>operator[]</name></member>
      <member refid="classCLI_1_1App_1a443c945fd3d3f03d33ad24be91b0ccbb" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>operator[]</name></member>
      <member refid="classCLI_1_1App_1a19db92c5717d79ab19de59daf455cdbb" prot="private" virt="non-virtual"><scope>CLI::App</scope><name>Option</name></member>
      <member refid="classCLI_1_1App_1a4d49e9bf0fc5cc2a99aefd13c3ecd3bf" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>option_defaults</name></member>
      <member refid="classCLI_1_1App_1a34da062f6cc255048384b72e0ec6c276" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>option_defaults_</name></member>
      <member refid="classCLI_1_1App_1a862e55a8c1fe3676452aadc6a222f865" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>options_</name></member>
      <member refid="classCLI_1_1App_1a557239f7b3a655d0e0d6be8820f3e043" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>parent_</name></member>
      <member refid="classCLI_1_1App_1a5ddf139d5fe065289aca7b83d5d045d9" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>parse</name></member>
      <member refid="classCLI_1_1App_1a187f08c5326d89319802162e33faff4e" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>parse</name></member>
      <member refid="classCLI_1_1App_1a878c1067ade7145aa11478d64f5173ed" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>parse</name></member>
      <member refid="classCLI_1_1App_1a8ffb155a1153ee23d442c5bfed21225c" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>parse</name></member>
      <member refid="classCLI_1_1App_1aa10431ed3422e954193e60ce7c2ddc9e" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>parse_complete_callback</name></member>
      <member refid="classCLI_1_1App_1a5cbd4b05946428eefe79041bbafb7f0a" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>parse_complete_callback_</name></member>
      <member refid="classCLI_1_1App_1a9ed2e72fa9f98fc3657afe120a0f6dff" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>parse_from_stream</name></member>
      <member refid="classCLI_1_1App_1a60ea640ecac9e674f37745b52689b7f8" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>parse_order</name></member>
      <member refid="classCLI_1_1App_1add8dcf3a51639b56a50bf9e1ab983606" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>parse_order_</name></member>
      <member refid="classCLI_1_1App_1a31f30e3313c5d0d2646556b0e232bbbc" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>parsed</name></member>
      <member refid="classCLI_1_1App_1a30ce21de99bd99baf50f790cc752f22a" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>parsed_</name></member>
      <member refid="classCLI_1_1App_1a61eae39a2e5238322d21f6ff31aa6f4b" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>parsed_subcommands_</name></member>
      <member refid="classCLI_1_1App_1ad207c2a9f169fd173c84ef469e55ed16" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>positionals_at_end</name></member>
      <member refid="classCLI_1_1App_1a963ce3e24f0652591e5c751083a57670" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>positionals_at_end_</name></member>
      <member refid="classCLI_1_1App_1a5d74be8e210e779874584a3336aaf506" prot="public" virt="virtual"><scope>CLI::App</scope><name>pre_callback</name></member>
      <member refid="classCLI_1_1App_1ac296d0ff15f240ffe0a3ff14e49fdf19" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>pre_parse_callback_</name></member>
      <member refid="classCLI_1_1App_1ac53aba006f3aae0cba0e4e9fd4c264ea" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>pre_parse_called_</name></member>
      <member refid="classCLI_1_1App_1a570b386365a649df34cfc81f6448657f" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>prefix_command</name></member>
      <member refid="classCLI_1_1App_1ad9ad6cc617a88525ee966a7d49c6331e" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>prefix_command_</name></member>
      <member refid="classCLI_1_1App_1a94045b9a983dd80d8fa1b477422c7849" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>preparse_callback</name></member>
      <member refid="classCLI_1_1App_1ad90f9b3c1925879dfe39cb03c5247742" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>remaining</name></member>
      <member refid="classCLI_1_1App_1a522317a152b4acbb8015eef22358d8fd" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>remaining_for_passthrough</name></member>
      <member refid="classCLI_1_1App_1a7a94b729128d22a6cc3e4998149d7101" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>remaining_size</name></member>
      <member refid="classCLI_1_1App_1a9ea4153f3081d8424e772254135237fd" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>remove_excludes</name></member>
      <member refid="classCLI_1_1App_1a1c0670f27afe97a4e7ba12fcfb65a81c" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>remove_excludes</name></member>
      <member refid="classCLI_1_1App_1aaa7bc9f48fc24b24742fd2fbe01c13f6" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>remove_needs</name></member>
      <member refid="classCLI_1_1App_1a73a87ddd7511abb67e5f293817e5df73" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>remove_needs</name></member>
      <member refid="classCLI_1_1App_1a3058b128735eec0813589b56c5453115" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>remove_option</name></member>
      <member refid="classCLI_1_1App_1acfd0b05943b8acba2a38c58f47140534" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>remove_subcommand</name></member>
      <member refid="classCLI_1_1App_1a8e5e732c43d6a569991d555b34162c28" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>require_option</name></member>
      <member refid="classCLI_1_1App_1a803c62c7cb37c0db06fbfde1ec845b3d" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>require_option</name></member>
      <member refid="classCLI_1_1App_1aec71eb1b37a8f33bc0602106f193caa6" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>require_option</name></member>
      <member refid="classCLI_1_1App_1aaff272565daecbe6eaad738ef21d6ebd" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>require_option_max_</name></member>
      <member refid="classCLI_1_1App_1a23af1dbdb22e1083c3593157cb9b1bd3" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>require_option_min_</name></member>
      <member refid="classCLI_1_1App_1a32368fe1be23de24ed7e26378b0e31c5" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>require_subcommand</name></member>
      <member refid="classCLI_1_1App_1a473f59b0d3cec845228f29ad8c445d1a" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>require_subcommand</name></member>
      <member refid="classCLI_1_1App_1afbc506d3fe77c1bae23d206d32d1c422" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>require_subcommand</name></member>
      <member refid="classCLI_1_1App_1a2c55daa71d2e35868f7e192211a801f2" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>require_subcommand_max_</name></member>
      <member refid="classCLI_1_1App_1a6b0653a65afed143f774aabf881905a1" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>require_subcommand_min_</name></member>
      <member refid="classCLI_1_1App_1a524f69f8f19262e1c9c0eb354d75178e" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>required</name></member>
      <member refid="classCLI_1_1App_1a42e3309983fe836cd26df3d1aadf08d6" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>required_</name></member>
      <member refid="classCLI_1_1App_1a5834471108897c92ba7fa2e3e01f7c2d" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>run_callback</name></member>
      <member refid="classCLI_1_1App_1ac19591506ff296bdf6d0d23fa42a7c20" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>set_config</name></member>
      <member refid="classCLI_1_1App_1aa43461449f0f3c3d7bb8fd807d0cc72c" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>set_help_all_flag</name></member>
      <member refid="classCLI_1_1App_1a3c50003e414891b24dc21455b5ccafbf" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>set_help_flag</name></member>
      <member refid="classCLI_1_1App_1a21f52214377bd593360d61add2d9edc3" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>set_version_flag</name></member>
      <member refid="classCLI_1_1App_1a1654d90113925908d2a5680f3299629c" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>set_version_flag</name></member>
      <member refid="classCLI_1_1App_1a2902a7d858f3e43f19ede103d68454d5" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>silent</name></member>
      <member refid="classCLI_1_1App_1ac25109abadcb44d8cd3d000ca44fdf86" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>silent_</name></member>
      <member refid="classCLI_1_1App_1a44223dc510ba0f7b680990476828e2e8" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>startup_mode</name></member>
      <member refid="classCLI_1_1App_1a2c912598c2a49e41536ca88f2786195b" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>subcommands_</name></member>
      <member refid="classCLI_1_1App_1ac7083bfa334d1ca3813e6f051089c746" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>validate_positionals</name></member>
      <member refid="classCLI_1_1App_1ae037cfa9b207f8ae4f17d8e0086c5380" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>validate_positionals_</name></member>
      <member refid="classCLI_1_1App_1acada3cd8a963944cfce74d1d90946433" prot="public" virt="non-virtual"><scope>CLI::App</scope><name>version</name></member>
      <member refid="classCLI_1_1App_1a537bfe9efbc1aa2f2d9a57740f847b4b" prot="protected" virt="non-virtual"><scope>CLI::App</scope><name>version_ptr_</name></member>
      <member refid="classCLI_1_1App_1a8180d86b6a163d270f69ce6dd1c12e35" prot="public" virt="virtual"><scope>CLI::App</scope><name>~App</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
