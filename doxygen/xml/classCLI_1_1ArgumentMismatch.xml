<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classCLI_1_1ArgumentMismatch" kind="class" language="C++" prot="public">
    <compoundname>CLI::ArgumentMismatch</compoundname>
    <basecompoundref refid="classCLI_1_1ParseError" prot="public" virt="non-virtual">CLI::ParseError</basecompoundref>
    <includes refid="CLI11_8hpp" local="no">CLI11.hpp</includes>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCLI_1_1ArgumentMismatch_1a953fe59920a92523ed56022dfc67c06c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CLI::ArgumentMismatch::ArgumentMismatch</definition>
        <argsstring>(std::string ename, std::string msg, int exit_code)</argsstring>
        <name>ArgumentMismatch</name>
        <qualifiedname>CLI::ArgumentMismatch::ArgumentMismatch</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>ename</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exit_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="783" column="19" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="783" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1ArgumentMismatch_1a4b6bfbb0814fd56227cf1365e85405db" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CLI::ArgumentMismatch::ArgumentMismatch</definition>
        <argsstring>(std::string ename, std::string msg, ExitCodes exit_code)</argsstring>
        <name>ArgumentMismatch</name>
        <qualifiedname>CLI::ArgumentMismatch::ArgumentMismatch</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>ename</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespaceCLI_1a1d8108a219533f0b0361640a017f037e" kindref="member">ExitCodes</ref></type>
          <declname>exit_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="783" column="46" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="783" bodyend="783"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCLI_1_1ArgumentMismatch_1a4c14036a691d0f6d98fa05a8e4cc3955" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CLI::ArgumentMismatch::ArgumentMismatch</definition>
        <argsstring>(std::string msg, ExitCodes exit_code)</argsstring>
        <name>ArgumentMismatch</name>
        <qualifiedname>CLI::ArgumentMismatch::ArgumentMismatch</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="namespaceCLI_1a1d8108a219533f0b0361640a017f037e" kindref="member">ExitCodes</ref></type>
          <declname>exit_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="783" column="87" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="783" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1ArgumentMismatch_1a4010dec4a893c12afe4d25407f60deef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CLI::ArgumentMismatch::ArgumentMismatch</definition>
        <argsstring>(std::string msg, int exit_code)</argsstring>
        <name>ArgumentMismatch</name>
        <qualifiedname>CLI::ArgumentMismatch::ArgumentMismatch</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exit_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="783" column="112" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="783" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1ArgumentMismatch_1a1b852b3bb6f7f89af18dd59c1ae4639d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CLI::ArgumentMismatch::ArgumentMismatch</definition>
        <argsstring>(std::string msg)</argsstring>
        <name>ArgumentMismatch</name>
        <qualifiedname>CLI::ArgumentMismatch::ArgumentMismatch</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="784" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="784" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1ArgumentMismatch_1a03b5d359cb07e82b2d2f0f734ffeb545" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CLI::ArgumentMismatch::ArgumentMismatch</definition>
        <argsstring>(std::string name, int expected, std::size_t received)</argsstring>
        <name>ArgumentMismatch</name>
        <qualifiedname>CLI::ArgumentMismatch::ArgumentMismatch</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>received</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="785" column="5" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="785" bodyend="790"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classCLI_1_1ArgumentMismatch_1a76c9d5822d9b0a2825a54a22e04e05ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1ArgumentMismatch" kindref="compound">ArgumentMismatch</ref></type>
        <definition>static ArgumentMismatch CLI::ArgumentMismatch::AtLeast</definition>
        <argsstring>(std::string name, int num, std::size_t received)</argsstring>
        <name>AtLeast</name>
        <qualifiedname>CLI::ArgumentMismatch::AtLeast</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>received</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="792" column="29" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="792" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1ArgumentMismatch_1ae13fac165ff6b4fdc588d364dbaa85bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1ArgumentMismatch" kindref="compound">ArgumentMismatch</ref></type>
        <definition>static ArgumentMismatch CLI::ArgumentMismatch::AtMost</definition>
        <argsstring>(std::string name, int num, std::size_t received)</argsstring>
        <name>AtMost</name>
        <qualifiedname>CLI::ArgumentMismatch::AtMost</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>received</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="796" column="29" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="796" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1ArgumentMismatch_1ad98dd3c8796e1fa4c3e6e426aa28e766" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1ArgumentMismatch" kindref="compound">ArgumentMismatch</ref></type>
        <definition>static ArgumentMismatch CLI::ArgumentMismatch::TypedAtLeast</definition>
        <argsstring>(std::string name, int num, std::string type)</argsstring>
        <name>TypedAtLeast</name>
        <qualifiedname>CLI::ArgumentMismatch::TypedAtLeast</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="800" column="29" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="800" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="classCLI_1_1ArgumentMismatch_1af40fccb119664c7c5025bba76fb2d7e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCLI_1_1ArgumentMismatch" kindref="compound">ArgumentMismatch</ref></type>
        <definition>static ArgumentMismatch CLI::ArgumentMismatch::FlagOverride</definition>
        <argsstring>(std::string name)</argsstring>
        <name>FlagOverride</name>
        <qualifiedname>CLI::ArgumentMismatch::FlagOverride</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="803" column="29" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="803" bodyend="805"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Thrown when the wrong number of arguments has been received. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CLI::ArgumentMismatch</label>
        <link refid="classCLI_1_1ArgumentMismatch"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>CLI::Error</label>
        <link refid="classCLI_1_1Error"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CLI::ParseError</label>
        <link refid="classCLI_1_1ParseError"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::runtime_error</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CLI::ArgumentMismatch</label>
        <link refid="classCLI_1_1ArgumentMismatch"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>CLI::Error</label>
        <link refid="classCLI_1_1Error"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CLI::ParseError</label>
        <link refid="classCLI_1_1ParseError"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::runtime_error</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="782" column="1" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="782" bodyend="806"/>
    <listofallmembers>
      <member refid="classCLI_1_1ArgumentMismatch_1a953fe59920a92523ed56022dfc67c06c" prot="protected" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>ArgumentMismatch</name></member>
      <member refid="classCLI_1_1ArgumentMismatch_1a4b6bfbb0814fd56227cf1365e85405db" prot="protected" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>ArgumentMismatch</name></member>
      <member refid="classCLI_1_1ArgumentMismatch_1a4c14036a691d0f6d98fa05a8e4cc3955" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>ArgumentMismatch</name></member>
      <member refid="classCLI_1_1ArgumentMismatch_1a4010dec4a893c12afe4d25407f60deef" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>ArgumentMismatch</name></member>
      <member refid="classCLI_1_1ArgumentMismatch_1a1b852b3bb6f7f89af18dd59c1ae4639d" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>ArgumentMismatch</name></member>
      <member refid="classCLI_1_1ArgumentMismatch_1a03b5d359cb07e82b2d2f0f734ffeb545" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>ArgumentMismatch</name></member>
      <member refid="classCLI_1_1ArgumentMismatch_1a76c9d5822d9b0a2825a54a22e04e05ff" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>AtLeast</name></member>
      <member refid="classCLI_1_1ArgumentMismatch_1ae13fac165ff6b4fdc588d364dbaa85bf" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>AtMost</name></member>
      <member refid="classCLI_1_1Error_1a7b30cbdb0c6f3ef3d5550df7d8e18904" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>Error</name></member>
      <member refid="classCLI_1_1Error_1a52187308eced1fc96f270ef384dbd7a2" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>Error</name></member>
      <member refid="classCLI_1_1ArgumentMismatch_1af40fccb119664c7c5025bba76fb2d7e2" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>FlagOverride</name></member>
      <member refid="classCLI_1_1Error_1a24faca884e953e6366bdb8d84d631588" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>get_exit_code</name></member>
      <member refid="classCLI_1_1Error_1a725f16d721c2320ba75b4d6c99d2056a" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>get_name</name></member>
      <member refid="classCLI_1_1ParseError_1a744c6dd40b9d7966d6da28244a320bff" prot="protected" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>ParseError</name></member>
      <member refid="classCLI_1_1ParseError_1ab9e8c4673f422502f62173e68193a7f0" prot="protected" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>ParseError</name></member>
      <member refid="classCLI_1_1ParseError_1a7e0db457bd2a6b54efe67cfa20bdbcdf" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>ParseError</name></member>
      <member refid="classCLI_1_1ParseError_1af4f3a073b76e8533e3ac36339efa74d1" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>ParseError</name></member>
      <member refid="classCLI_1_1ArgumentMismatch_1ad98dd3c8796e1fa4c3e6e426aa28e766" prot="public" virt="non-virtual"><scope>CLI::ArgumentMismatch</scope><name>TypedAtLeast</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
