<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="classsisi4s_1_1EigenSystemDavidson" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>sisi4s::EigenSystemDavidson</compoundname>
    <derivedcompoundref refid="classsisi4s_1_1EigenSystemDavidsonMono" prot="public" virt="non-virtual">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;</derivedcompoundref>
    <includes refid="EigenSystemDavidson_8hpp" local="no">EigenSystemDavidson.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename H</type>
      </param>
      <param>
        <type>typename P</type>
      </param>
      <param>
        <type>typename V</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsisi4s_1_1EigenSystemDavidson_1a38d32c95a6601a9303c4187f432ea6d1" prot="public" static="no">
        <type>V::FieldType</type>
        <definition>typedef V::FieldType sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::F</definition>
        <argsstring></argsstring>
        <name>F</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::F</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="19" column="33" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1acfeb357e5da75c148fd8f3dd2752d929" prot="protected" static="no" mutable="no">
        <type>H *</type>
        <definition>H* sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::h</definition>
        <argsstring></argsstring>
        <name>h</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::h</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="96" column="5" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="96" bodyend="-1"/>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="135" endline="428">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1a8fa2603fb7e877f8c2199b3a4f0c988d" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::eigenVectorsCount</definition>
        <argsstring></argsstring>
        <name>eigenVectorsCount</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::eigenVectorsCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="97" column="7" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="97" bodyend="-1"/>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="135" endline="428">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1a1fc25be7bd7b72e440848f25e1519f13" prot="protected" static="no" mutable="no">
        <type>P *</type>
        <definition>P* sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="98" column="5" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="98" bodyend="-1"/>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="135" endline="428">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1a6c909a09222a50e4ac7c52bd9cb24875" prot="protected" static="no" mutable="no">
        <type>const struct <ref refid="classsisi4s_1_1EigenSystemDavidson" kindref="compound">sisi4s::EigenSystemDavidson</ref></type>
        <definition>const struct sisi4s::EigenSystemDavidson sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::tolerance</definition>
        <argsstring></argsstring>
        <name>tolerance</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::tolerance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="102" column="13"/>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="135" endline="428">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1a22170c178b4803e84801e9ad83419ad3" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::maxBasisSize</definition>
        <argsstring></argsstring>
        <name>maxBasisSize</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::maxBasisSize</qualifiedname>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="103" column="16" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="103" bodyend="-1"/>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="135" endline="428">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1a5d2e005486cb962b11adf23136e615f4" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::maxIterations</definition>
        <argsstring></argsstring>
        <name>maxIterations</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::maxIterations</qualifiedname>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="104" column="16" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="104" bodyend="-1"/>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="135" endline="428">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1a7969428bfb8d8fc4ab6e5c82b25801ec" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::minIterations</definition>
        <argsstring></argsstring>
        <name>minIterations</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::minIterations</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="105" column="16" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="105" bodyend="-1"/>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="135" endline="428">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1afe865892c1c297f31931af778751d162" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::refreshIterations</definition>
        <argsstring></argsstring>
        <name>refreshIterations</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::refreshIterations</qualifiedname>
        <initializer>= std::vector&lt;int&gt;{{}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="106" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="106" bodyend="-1"/>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="135" endline="428">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1a6e490f57008e455e970bbab15326dc34" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::refreshOnMaxBasisSizeValue</definition>
        <argsstring></argsstring>
        <name>refreshOnMaxBasisSizeValue</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::refreshOnMaxBasisSizeValue</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="107" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="107" bodyend="-1"/>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidson_1ac5c3bc5a870c9cc30caa4b9e857cd8ff" compoundref="EigenSystemDavidson_8hpp" startline="93" endline="93">sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::refreshOnMaxBasisSize</referencedby>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidson_1a5aed301533dde0f4172b7c6430f52ca9" compoundref="EigenSystemDavidson_8hpp" startline="85" endline="87">sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::refreshOnMaxBasisSize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1af846dd05a47badd3bcd9163526426533" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref> &gt;</type>
        <definition>std::vector&lt;complex&gt; sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::eigenValues</definition>
        <argsstring></argsstring>
        <name>eigenValues</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::eigenValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="108" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="108" bodyend="-1"/>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidson_1a94104c47e077a463bdad406e2c4c4e29" compoundref="EigenSystemDavidson_8hpp" startline="72" endline="72">sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::getEigenValues</referencedby>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="135" endline="428">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1aca3adefd8e560892314467c600bd339c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; V &gt;</type>
        <definition>std::vector&lt;V&gt; sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::rightEigenVectors</definition>
        <argsstring></argsstring>
        <name>rightEigenVectors</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::rightEigenVectors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="109" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="109" bodyend="-1"/>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidson_1a29a5e150d4444bf21b7bd28ff8c215c5" compoundref="EigenSystemDavidson_8hpp" startline="74" endline="76">sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::getRightEigenVectors</referencedby>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="135" endline="428">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1a68c3b529d29778f68126cce07c1c842d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; V &gt;</type>
        <definition>std::vector&lt;V&gt; sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::leftEigenVectors</definition>
        <argsstring></argsstring>
        <name>leftEigenVectors</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::leftEigenVectors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="110" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="110" bodyend="-1"/>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidson_1a9698734a56decef29b543394c700fb50" compoundref="EigenSystemDavidson_8hpp" startline="78" endline="78">sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::getLeftEigenVectors</referencedby>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="135" endline="428">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1aebe6bd483ef3e8fbe23beb8408296faf" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::energy</definition>
        <argsstring></argsstring>
        <name>energy</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::energy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="100" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsisi4s_1_1EigenSystemDavidson_1a9c72484082db6be7ecf5095376088e94" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::vectors</definition>
        <argsstring></argsstring>
        <name>vectors</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::vectors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="101" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsisi4s_1_1EigenSystemDavidson_1a3ef0d68a9b49e503b07d950aed24d3f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::EigenSystemDavidson</definition>
        <argsstring>(H *h_, const int eigenVectorsCount_, P *p_, const double toleranceVectors, const double toleranceEnergy, const unsigned int maxBasisSize_, const unsigned int maxIterations_, const unsigned int minIterations_)</argsstring>
        <name>EigenSystemDavidson</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::EigenSystemDavidson</qualifiedname>
        <param>
          <type>H *</type>
          <declname>h_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>eigenVectorsCount_</declname>
        </param>
        <param>
          <type>P *</type>
          <declname>p_</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>toleranceVectors</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>toleranceEnergy</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>maxBasisSize_</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>maxIterations_</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>minIterations_</declname>
        </param>
        <briefdescription>
<para>... </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>object representing the matrix whose eigen system is sought offering the following method: V right_apply(V &amp;v); Also, if the dual version of the Davidson algorithm is to be used h should offer the leftApply method V leftApply(V &amp;v); returning the action of h on v standing right of h. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eigenVectorsCount</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of eigenvalues and vectors to be computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>object representing the preconditioner offering the following method: std::vector&lt;V&gt; getInitialBasis(int eigenVectorsCount); returning an initial guess the basis consisting of eigenVectorsCount vectors. V getCorrection(const complex eigenValue, V &amp;residuum); computing the estimated correction for the k-th eigenvector given its eigenvalue and the residuum of the current k-th estimated eigenvector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>the targeted relative tolerance to be met by all residua. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxBasisSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum allowed number of vectors representing eigenvectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dualVersion</parametername>
</parameternamelist>
<parameterdescription>
<para>If the dual version of the algorithm is to be used. The dual version of the algorithm calculates both the right and left eigenvectors of the h object. If the dual version is not to be used then only the right eigenvectors are to be calculated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">refreshIterations</parametername>
</parameternamelist>
<parameterdescription>
<para>This vector of integers represents the iterations where the refreshment should be done. Refreshment meaning that the trial Davidson basis should be thrown away and only keep the current approximations to the eigenvectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="53" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="53" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classsisi4s_1_1EigenSystemDavidson_1af48c5082ff0bf3459cab3a08ce66377f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::run</definition>
        <argsstring>()=0</argsstring>
        <name>run</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::run</qualifiedname>
        <reimplementedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb">run</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="70" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classsisi4s_1_1EigenSystemDavidson_1a94104c47e077a463bdad406e2c4c4e29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; complex &gt; &amp; sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::getEigenValues</definition>
        <argsstring>() const</argsstring>
        <name>getEigenValues</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::getEigenValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="72" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="72" bodyend="72"/>
        <references refid="classsisi4s_1_1EigenSystemDavidson_1af846dd05a47badd3bcd9163526426533" compoundref="EigenSystemDavidson_8hpp" startline="108">sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::eigenValues</references>
        <referencedby refid="classsisi4s_1_1CcsdEquationOfMotionDavidson_1a418beaea4a3a3fe7cf890ba392a7d6ef" compoundref="CcsdEquationOfMotionDavidson_8cxx" startline="78" endline="457">sisi4s::CcsdEquationOfMotionDavidson::run</referencedby>
        <referencedby refid="classsisi4s_1_1CcsdtEquationOfMotionDavidson_1a12e416e743f23f8ec453a9ee2f9a8aad" compoundref="CcsdtEquationOfMotionDavidson_8cxx" startline="43" endline="331">sisi4s::CcsdtEquationOfMotionDavidson::run</referencedby>
        <referencedby refid="classsisi4s_1_1UCcsdIPEquationOfMotionDavidson_1a6a73d3c0c1a3ea5ad52001e8213bfbaf" compoundref="UCcsdIPEquationOfMotionDavidson_8cxx" startline="44" endline="208">sisi4s::UCcsdIPEquationOfMotionDavidson::run</referencedby>
        <referencedby refid="classsisi4s_1_1UnrestrictedEquationOfMotionSinglesFromRpa_1ade4d95a7d53a8b596e67d584e98d7f02" compoundref="UnrestrictedEquationOfMotionSinglesFromRpa_8cxx" startline="45" endline="208">sisi4s::UnrestrictedEquationOfMotionSinglesFromRpa::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsisi4s_1_1EigenSystemDavidson_1a29a5e150d4444bf21b7bd28ff8c215c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; V &gt; &amp;</type>
        <definition>const std::vector&lt; V &gt; &amp; sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::getRightEigenVectors</definition>
        <argsstring>() const</argsstring>
        <name>getRightEigenVectors</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::getRightEigenVectors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="74" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="74" bodyend="76"/>
        <references refid="classsisi4s_1_1EigenSystemDavidson_1aca3adefd8e560892314467c600bd339c" compoundref="EigenSystemDavidson_8hpp" startline="109">sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::rightEigenVectors</references>
        <referencedby refid="classsisi4s_1_1CcsdEquationOfMotionDavidson_1a418beaea4a3a3fe7cf890ba392a7d6ef" compoundref="CcsdEquationOfMotionDavidson_8cxx" startline="78" endline="457">sisi4s::CcsdEquationOfMotionDavidson::run</referencedby>
        <referencedby refid="classsisi4s_1_1UCcsdIPEquationOfMotionDavidson_1a6a73d3c0c1a3ea5ad52001e8213bfbaf" compoundref="UCcsdIPEquationOfMotionDavidson_8cxx" startline="44" endline="208">sisi4s::UCcsdIPEquationOfMotionDavidson::run</referencedby>
        <referencedby refid="classsisi4s_1_1UnrestrictedEquationOfMotionSinglesFromRpa_1ade4d95a7d53a8b596e67d584e98d7f02" compoundref="UnrestrictedEquationOfMotionSinglesFromRpa_8cxx" startline="45" endline="208">sisi4s::UnrestrictedEquationOfMotionSinglesFromRpa::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsisi4s_1_1EigenSystemDavidson_1a9698734a56decef29b543394c700fb50" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; V &gt; &amp;</type>
        <definition>const std::vector&lt; V &gt; &amp; sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::getLeftEigenVectors</definition>
        <argsstring>() const</argsstring>
        <name>getLeftEigenVectors</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::getLeftEigenVectors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="78" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="78" bodyend="78"/>
        <references refid="classsisi4s_1_1EigenSystemDavidson_1a68c3b529d29778f68126cce07c1c842d" compoundref="EigenSystemDavidson_8hpp" startline="110">sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::leftEigenVectors</references>
      </memberdef>
      <memberdef kind="function" id="classsisi4s_1_1EigenSystemDavidson_1a5aed301533dde0f4172b7c6430f52ca9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::refreshOnMaxBasisSize</definition>
        <argsstring>(const bool value)</argsstring>
        <name>refreshOnMaxBasisSize</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::refreshOnMaxBasisSize</qualifiedname>
        <param>
          <type>const bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Controls if the Davidson algorithm should make a refreshment of the basis whenever the maximal basis size has been attained. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>If value is true, it will be refreshed, otherwise not. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="85" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="85" bodyend="87"/>
        <references refid="classsisi4s_1_1EigenSystemDavidson_1a6e490f57008e455e970bbab15326dc34" compoundref="EigenSystemDavidson_8hpp" startline="107">sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::refreshOnMaxBasisSizeValue</references>
        <referencedby refid="classsisi4s_1_1CcsdEquationOfMotionDavidson_1a418beaea4a3a3fe7cf890ba392a7d6ef" compoundref="CcsdEquationOfMotionDavidson_8cxx" startline="78" endline="457">sisi4s::CcsdEquationOfMotionDavidson::run</referencedby>
        <referencedby refid="classsisi4s_1_1CcsdtEquationOfMotionDavidson_1a12e416e743f23f8ec453a9ee2f9a8aad" compoundref="CcsdtEquationOfMotionDavidson_8cxx" startline="43" endline="331">sisi4s::CcsdtEquationOfMotionDavidson::run</referencedby>
        <referencedby refid="classsisi4s_1_1UCcsdIPEquationOfMotionDavidson_1a6a73d3c0c1a3ea5ad52001e8213bfbaf" compoundref="UCcsdIPEquationOfMotionDavidson_8cxx" startline="44" endline="208">sisi4s::UCcsdIPEquationOfMotionDavidson::run</referencedby>
        <referencedby refid="classsisi4s_1_1UnrestrictedEquationOfMotionSinglesFromRpa_1ade4d95a7d53a8b596e67d584e98d7f02" compoundref="UnrestrictedEquationOfMotionSinglesFromRpa_8cxx" startline="45" endline="208">sisi4s::UnrestrictedEquationOfMotionSinglesFromRpa::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsisi4s_1_1EigenSystemDavidson_1ac5c3bc5a870c9cc30caa4b9e857cd8ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::refreshOnMaxBasisSize</definition>
        <argsstring>()</argsstring>
        <name>refreshOnMaxBasisSize</name>
        <qualifiedname>sisi4s::EigenSystemDavidson::refreshOnMaxBasisSize</qualifiedname>
        <briefdescription>
<para>Check wether or not the basis should be refreshed whenever the maximal basis size has been reached. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="93" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="93" bodyend="93"/>
        <references refid="classsisi4s_1_1EigenSystemDavidson_1a6e490f57008e455e970bbab15326dc34" compoundref="EigenSystemDavidson_8hpp" startline="107">sisi4s::EigenSystemDavidson&lt; H, P, V &gt;::refreshOnMaxBasisSizeValue</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>sisi4s::EigenSystemDavidson&lt; H, P, V &gt;</label>
        <link refid="classsisi4s_1_1EigenSystemDavidson"/>
      </node>
      <node id="2">
        <label>sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;</label>
        <link refid="classsisi4s_1_1EigenSystemDavidsonMono"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>sisi4s::EigenSystemDavidson&lt; H, P, V &gt;</label>
        <link refid="classsisi4s_1_1EigenSystemDavidson"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" line="17" column="1" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/EigenSystemDavidson.hpp" bodystart="17" bodyend="111"/>
    <listofallmembers>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a3ef0d68a9b49e503b07d950aed24d3f8" prot="public" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>EigenSystemDavidson</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1af846dd05a47badd3bcd9163526426533" prot="protected" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>eigenValues</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a8fa2603fb7e877f8c2199b3a4f0c988d" prot="protected" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>eigenVectorsCount</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1aebe6bd483ef3e8fbe23beb8408296faf" prot="public" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>energy</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a38d32c95a6601a9303c4187f432ea6d1" prot="public" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>F</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a94104c47e077a463bdad406e2c4c4e29" prot="public" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>getEigenValues</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a9698734a56decef29b543394c700fb50" prot="public" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>getLeftEigenVectors</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a29a5e150d4444bf21b7bd28ff8c215c5" prot="public" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>getRightEigenVectors</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1acfeb357e5da75c148fd8f3dd2752d929" prot="protected" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>h</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a68c3b529d29778f68126cce07c1c842d" prot="protected" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>leftEigenVectors</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a22170c178b4803e84801e9ad83419ad3" prot="protected" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>maxBasisSize</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a5d2e005486cb962b11adf23136e615f4" prot="protected" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>maxIterations</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a7969428bfb8d8fc4ab6e5c82b25801ec" prot="protected" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>minIterations</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a1fc25be7bd7b72e440848f25e1519f13" prot="protected" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>p</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1afe865892c1c297f31931af778751d162" prot="protected" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>refreshIterations</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a5aed301533dde0f4172b7c6430f52ca9" prot="public" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>refreshOnMaxBasisSize</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1ac5c3bc5a870c9cc30caa4b9e857cd8ff" prot="public" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>refreshOnMaxBasisSize</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a6e490f57008e455e970bbab15326dc34" prot="protected" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>refreshOnMaxBasisSizeValue</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1aca3adefd8e560892314467c600bd339c" prot="protected" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>rightEigenVectors</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1af48c5082ff0bf3459cab3a08ce66377f" prot="public" virt="pure-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>run</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a6c909a09222a50e4ac7c52bd9cb24875" prot="protected" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>tolerance</name></member>
      <member refid="classsisi4s_1_1EigenSystemDavidson_1a9c72484082db6be7ecf5095376088e94" prot="public" virt="non-virtual"><scope>sisi4s::EigenSystemDavidson</scope><name>vectors</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
