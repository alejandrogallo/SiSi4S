<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespacesisi4s" kind="namespace" language="C++">
    <compoundname>sisi4s</compoundname>
    <innerclass refid="classsisi4s_1_1Algorithm" prot="public">sisi4s::Algorithm</innerclass>
    <innerclass refid="classsisi4s_1_1AlgorithmFactory" prot="public">sisi4s::AlgorithmFactory</innerclass>
    <innerclass refid="classsisi4s_1_1AlgorithmRegistrar" prot="public">sisi4s::AlgorithmRegistrar</innerclass>
    <innerclass refid="classsisi4s_1_1AlternatingLeastSquaresRegularizationEstimator" prot="public">sisi4s::AlternatingLeastSquaresRegularizationEstimator</innerclass>
    <innerclass refid="classsisi4s_1_1ApproximateCoulombVertex" prot="public">sisi4s::ApproximateCoulombVertex</innerclass>
    <innerclass refid="classsisi4s_1_1ApproximateParticleHoleCoulombVertex" prot="public">sisi4s::ApproximateParticleHoleCoulombVertex</innerclass>
    <innerclass refid="classsisi4s_1_1Argument" prot="public">sisi4s::Argument</innerclass>
    <innerclass refid="classsisi4s_1_1BasisSetExtrapolation" prot="public">sisi4s::BasisSetExtrapolation</innerclass>
    <innerclass refid="classsisi4s_1_1BinaryTensorDimensionHeader" prot="public">sisi4s::BinaryTensorDimensionHeader</innerclass>
    <innerclass refid="classsisi4s_1_1BinaryTensorHeader" prot="public">sisi4s::BinaryTensorHeader</innerclass>
    <innerclass refid="classsisi4s_1_1BinaryTensorHeaderBase" prot="public">sisi4s::BinaryTensorHeaderBase</innerclass>
    <innerclass refid="classsisi4s_1_1BlacsWorld" prot="public">sisi4s::BlacsWorld</innerclass>
    <innerclass refid="classsisi4s_1_1BooleanData" prot="public">sisi4s::BooleanData</innerclass>
    <innerclass refid="classsisi4s_1_1CcsdDiagrammaticDecomposition" prot="public">sisi4s::CcsdDiagrammaticDecomposition</innerclass>
    <innerclass refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals" prot="public">sisi4s::CcsdEnergyFromCoulombIntegrals</innerclass>
    <innerclass refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegralsReference" prot="public">sisi4s::CcsdEnergyFromCoulombIntegralsReference</innerclass>
    <innerclass refid="classsisi4s_1_1CcsdEquationOfMotionDavidson" prot="public">sisi4s::CcsdEquationOfMotionDavidson</innerclass>
    <innerclass refid="classsisi4s_1_1CcsdPerturbativeTriples" prot="public">sisi4s::CcsdPerturbativeTriples</innerclass>
    <innerclass refid="classsisi4s_1_1CcsdPerturbativeTriplesComplex" prot="public">sisi4s::CcsdPerturbativeTriplesComplex</innerclass>
    <innerclass refid="classsisi4s_1_1CcsdPreconditioner" prot="public">sisi4s::CcsdPreconditioner</innerclass>
    <innerclass refid="classsisi4s_1_1CcsdtEquationOfMotionDavidson" prot="public">sisi4s::CcsdtEquationOfMotionDavidson</innerclass>
    <innerclass refid="classsisi4s_1_1CisOneBodyReducedDensityMatrix" prot="public">sisi4s::CisOneBodyReducedDensityMatrix</innerclass>
    <innerclass refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm" prot="public">sisi4s::ClusterSinglesDoublesAlgorithm</innerclass>
    <innerclass refid="classsisi4s_1_1ClusterSinglesDoublesTriplesAlgorithm" prot="public">sisi4s::ClusterSinglesDoublesTriplesAlgorithm</innerclass>
    <innerclass refid="classsisi4s_1_1ClusterSinglesDoublesTriplesQuadruplesAlgorithm" prot="public">sisi4s::ClusterSinglesDoublesTriplesQuadruplesAlgorithm</innerclass>
    <innerclass refid="classsisi4s_1_1ComplexTensorContraction" prot="public">sisi4s::ComplexTensorContraction</innerclass>
    <innerclass refid="classsisi4s_1_1ComplexTensorNorm" prot="public">sisi4s::ComplexTensorNorm</innerclass>
    <innerclass refid="classsisi4s_1_1ComplexTensorReader" prot="public">sisi4s::ComplexTensorReader</innerclass>
    <innerclass refid="classsisi4s_1_1ComplexTensorSum" prot="public">sisi4s::ComplexTensorSum</innerclass>
    <innerclass refid="classsisi4s_1_1ComplexTensorWriter" prot="public">sisi4s::ComplexTensorWriter</innerclass>
    <innerclass refid="classsisi4s_1_1ComplexTraits" prot="public">sisi4s::ComplexTraits</innerclass>
    <innerclass refid="classsisi4s_1_1ComplexTraits_3_01Complex_3_01T_01_4_01_4" prot="public">sisi4s::ComplexTraits&lt; Complex&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structsisi4s_1_1ContainerData" prot="public">sisi4s::ContainerData</innerclass>
    <innerclass refid="classsisi4s_1_1Conversion" prot="public">sisi4s::Conversion</innerclass>
    <innerclass refid="classsisi4s_1_1Conversion_3_01Real_00_01Complex_3_01Real_01_4_01_4" prot="public">sisi4s::Conversion&lt; Real, Complex&lt; Real &gt; &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1Conversion_3_01Target_00_01Complex_3_01Real_01_4_01_4" prot="public">sisi4s::Conversion&lt; Target, Complex&lt; Real &gt; &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1CoulombIntegralsFromGaussian" prot="public">sisi4s::CoulombIntegralsFromGaussian</innerclass>
    <innerclass refid="classsisi4s_1_1CoulombIntegralsFromRotatedCoulombIntegrals" prot="public">sisi4s::CoulombIntegralsFromRotatedCoulombIntegrals</innerclass>
    <innerclass refid="classsisi4s_1_1CoulombIntegralsFromVertex" prot="public">sisi4s::CoulombIntegralsFromVertex</innerclass>
    <innerclass refid="classsisi4s_1_1CoulombVertexDecomposition" prot="public">sisi4s::CoulombVertexDecomposition</innerclass>
    <innerclass refid="classsisi4s_1_1CoulombVertexFromFactors" prot="public">sisi4s::CoulombVertexFromFactors</innerclass>
    <innerclass refid="classsisi4s_1_1CoulombVertexReader" prot="public">sisi4s::CoulombVertexReader</innerclass>
    <innerclass refid="classsisi4s_1_1CoulombVertexSingularVectors" prot="public">sisi4s::CoulombVertexSingularVectors</innerclass>
    <innerclass refid="classsisi4s_1_1CtfMachineTensor" prot="public">sisi4s::CtfMachineTensor</innerclass>
    <innerclass refid="classsisi4s_1_1CtfMachineTensorFactory" prot="public">sisi4s::CtfMachineTensorFactory</innerclass>
    <innerclass refid="classsisi4s_1_1Data" prot="public">sisi4s::Data</innerclass>
    <innerclass refid="classsisi4s_1_1DefaultRandomEngine" prot="public">sisi4s::DefaultRandomEngine</innerclass>
    <innerclass refid="classsisi4s_1_1Delete" prot="public">sisi4s::Delete</innerclass>
    <innerclass refid="classsisi4s_1_1DetailedException" prot="public">sisi4s::DetailedException</innerclass>
    <innerclass refid="classsisi4s_1_1DiisMixer" prot="public">sisi4s::DiisMixer</innerclass>
    <innerclass refid="classsisi4s_1_1DoublesAmplitudesDecomposition" prot="public">sisi4s::DoublesAmplitudesDecomposition</innerclass>
    <innerclass refid="classsisi4s_1_1DoublesAmplitudesFromVertex" prot="public">sisi4s::DoublesAmplitudesFromVertex</innerclass>
    <innerclass refid="classsisi4s_1_1DrccdEnergyFromCoulombIntegrals" prot="public">sisi4s::DrccdEnergyFromCoulombIntegrals</innerclass>
    <innerclass refid="classsisi4s_1_1DryIterativePseudoInverse" prot="public">sisi4s::DryIterativePseudoInverse</innerclass>
    <innerclass refid="classsisi4s_1_1DryMatrix" prot="public">sisi4s::DryMatrix</innerclass>
    <innerclass refid="classsisi4s_1_1DryMemory" prot="public">sisi4s::DryMemory</innerclass>
    <innerclass refid="classsisi4s_1_1DryPseudoInverseHermitianSvd" prot="public">sisi4s::DryPseudoInverseHermitianSvd</innerclass>
    <innerclass refid="classsisi4s_1_1DryPseudoInverseSvd" prot="public">sisi4s::DryPseudoInverseSvd</innerclass>
    <innerclass refid="classsisi4s_1_1DryScalar" prot="public">sisi4s::DryScalar</innerclass>
    <innerclass refid="classsisi4s_1_1DryTensor" prot="public">sisi4s::DryTensor</innerclass>
    <innerclass refid="classsisi4s_1_1DryVector" prot="public">sisi4s::DryVector</innerclass>
    <innerclass refid="classsisi4s_1_1EACcsdPreconditioner" prot="public">sisi4s::EACcsdPreconditioner</innerclass>
    <innerclass refid="classsisi4s_1_1EigenSystemDavidson" prot="public">sisi4s::EigenSystemDavidson</innerclass>
    <innerclass refid="classsisi4s_1_1EigenSystemDavidsonMono" prot="public">sisi4s::EigenSystemDavidsonMono</innerclass>
    <innerclass refid="classsisi4s_1_1Emitter" prot="public">sisi4s::Emitter</innerclass>
    <innerclass refid="classsisi4s_1_1EomOneBodyReducedDensityMatrix" prot="public">sisi4s::EomOneBodyReducedDensityMatrix</innerclass>
    <innerclass refid="classsisi4s_1_1Exception" prot="public">sisi4s::Exception</innerclass>
    <innerclass refid="classsisi4s_1_1Exit" prot="public">sisi4s::Exit</innerclass>
    <innerclass refid="classsisi4s_1_1FcidumpReader" prot="public">sisi4s::FcidumpReader</innerclass>
    <innerclass refid="classsisi4s_1_1FcidumpWriter" prot="public">sisi4s::FcidumpWriter</innerclass>
    <innerclass refid="classsisi4s_1_1FiniteSizeCorrection" prot="public">sisi4s::FiniteSizeCorrection</innerclass>
    <innerclass refid="classsisi4s_1_1FloatTypes" prot="public">sisi4s::FloatTypes</innerclass>
    <innerclass refid="classsisi4s_1_1FloatTypes_3_0132_01_4" prot="public">sisi4s::FloatTypes&lt; 32 &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1FloatTypes_3_0164_01_4" prot="public">sisi4s::FloatTypes&lt; 64 &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1FlopsCounter" prot="public">sisi4s::FlopsCounter</innerclass>
    <innerclass refid="structsisi4s_1_1FockMatrixFromCoulombIntegrals" prot="public">sisi4s::FockMatrixFromCoulombIntegrals</innerclass>
    <innerclass refid="classsisi4s_1_1FockVector" prot="public">sisi4s::FockVector</innerclass>
    <innerclass refid="classsisi4s_1_1FockVectorNdCanonical" prot="public">sisi4s::FockVectorNdCanonical</innerclass>
    <innerclass refid="classsisi4s_1_1FromComplexTensor" prot="public">sisi4s::FromComplexTensor</innerclass>
    <innerclass refid="classsisi4s_1_1GenerateRandomComplexMatrix" prot="public">sisi4s::GenerateRandomComplexMatrix</innerclass>
    <innerclass refid="classsisi4s_1_1GenerateRandomMatrix" prot="public">sisi4s::GenerateRandomMatrix</innerclass>
    <innerclass refid="classsisi4s_1_1GenerateRandomTensor" prot="public">sisi4s::GenerateRandomTensor</innerclass>
    <innerclass refid="classsisi4s_1_1HartreeFockFromCoulombIntegrals" prot="public">sisi4s::HartreeFockFromCoulombIntegrals</innerclass>
    <innerclass refid="classsisi4s_1_1HartreeFockFromGaussian" prot="public">sisi4s::HartreeFockFromGaussian</innerclass>
    <innerclass refid="structsisi4s_1_1IJKPointer" prot="public">sisi4s::IJKPointer</innerclass>
    <innerclass refid="classsisi4s_1_1InputFileParser" prot="public">sisi4s::InputFileParser</innerclass>
    <innerclass refid="classsisi4s_1_1InputFileParser_3_01InputFileFormat_1_1CC4S_01_4" prot="public">sisi4s::InputFileParser&lt; InputFileFormat::CC4S &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1InputFileParser_3_01InputFileFormat_1_1YAML_01_4" prot="public">sisi4s::InputFileParser&lt; InputFileFormat::YAML &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1IntegerData" prot="public">sisi4s::IntegerData</innerclass>
    <innerclass refid="structsisi4s_1_1IntegralInfo" prot="public">sisi4s::IntegralInfo</innerclass>
    <innerclass refid="classsisi4s_1_1Inter1D" prot="public">sisi4s::Inter1D</innerclass>
    <innerclass refid="classsisi4s_1_1IPCcsdPreconditioner" prot="public">sisi4s::IPCcsdPreconditioner</innerclass>
    <innerclass refid="structsisi4s_1_1IrmlerTensor" prot="public">sisi4s::IrmlerTensor</innerclass>
    <innerclass refid="classsisi4s_1_1IterativePseudoInverse" prot="public">sisi4s::IterativePseudoInverse</innerclass>
    <innerclass refid="classsisi4s_1_1LapackGeneralEigenSystem" prot="public">sisi4s::LapackGeneralEigenSystem</innerclass>
    <innerclass refid="classsisi4s_1_1LapackGeneralEigenSystem_3_01complex_01_4" prot="public">sisi4s::LapackGeneralEigenSystem&lt; complex &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1LapackGeneralEigenSystem_3_01double_01_4" prot="public">sisi4s::LapackGeneralEigenSystem&lt; double &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1LapackInverse" prot="public">sisi4s::LapackInverse</innerclass>
    <innerclass refid="classsisi4s_1_1LapackInverse_3_01Complex64_01_4" prot="public">sisi4s::LapackInverse&lt; Complex64 &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1LapackMatrix" prot="public">sisi4s::LapackMatrix</innerclass>
    <innerclass refid="classsisi4s_1_1LinearMixer" prot="public">sisi4s::LinearMixer</innerclass>
    <innerclass refid="classsisi4s_1_1LineNumberStream" prot="public">sisi4s::LineNumberStream</innerclass>
    <innerclass refid="classsisi4s_1_1Log" prot="public">sisi4s::Log</innerclass>
    <innerclass refid="classsisi4s_1_1LogBuffer" prot="public">sisi4s::LogBuffer</innerclass>
    <innerclass refid="classsisi4s_1_1LogStream" prot="public">sisi4s::LogStream</innerclass>
    <innerclass refid="classsisi4s_1_1Map" prot="public">sisi4s::Map</innerclass>
    <innerclass refid="structsisi4s_1_1MeanCorrelationHoleDepth" prot="public">sisi4s::MeanCorrelationHoleDepth</innerclass>
    <innerclass refid="classsisi4s_1_1Mixer" prot="public">sisi4s::Mixer</innerclass>
    <innerclass refid="classsisi4s_1_1MixerFactory" prot="public">sisi4s::MixerFactory</innerclass>
    <innerclass refid="classsisi4s_1_1MixerRegistrar" prot="public">sisi4s::MixerRegistrar</innerclass>
    <innerclass refid="classsisi4s_1_1MoReader" prot="public">sisi4s::MoReader</innerclass>
    <innerclass refid="classsisi4s_1_1Mp2NaturalOrbitals" prot="public">sisi4s::Mp2NaturalOrbitals</innerclass>
    <innerclass refid="classsisi4s_1_1MpiCommunicator" prot="public">sisi4s::MpiCommunicator</innerclass>
    <innerclass refid="classsisi4s_1_1MpiTypeTraits" prot="public">sisi4s::MpiTypeTraits</innerclass>
    <innerclass refid="classsisi4s_1_1MpiTypeTraits_3_01complex_01_4" prot="public">sisi4s::MpiTypeTraits&lt; complex &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1MpiTypeTraits_3_01double_01_4" prot="public">sisi4s::MpiTypeTraits&lt; double &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1MpiTypeTraits_3_01int_01_4" prot="public">sisi4s::MpiTypeTraits&lt; int &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1MpiTypeTraits_3_01int64__t_01_4" prot="public">sisi4s::MpiTypeTraits&lt; int64_t &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1MpiTypeTraits_3_01uint64__t_01_4" prot="public">sisi4s::MpiTypeTraits&lt; uint64_t &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1MpiTypeTraits_3_01Vector_3_01F_00_01D_01_4_01_4" prot="public">sisi4s::MpiTypeTraits&lt; Vector&lt; F, D &gt; &gt;</innerclass>
    <innerclass refid="structsisi4s_1_1NaturalTransitionOrbitalsFromRhoAI" prot="public">sisi4s::NaturalTransitionOrbitalsFromRhoAI</innerclass>
    <innerclass refid="classsisi4s_1_1NoRegularizationEstimator" prot="public">sisi4s::NoRegularizationEstimator</innerclass>
    <innerclass refid="classsisi4s_1_1NuclearRepulsionEnergy" prot="public">sisi4s::NuclearRepulsionEnergy</innerclass>
    <innerclass refid="classsisi4s_1_1NumberScanner" prot="public">sisi4s::NumberScanner</innerclass>
    <innerclass refid="classsisi4s_1_1NumberScanner_3_01Complex_3_01Real_01_4_01_4" prot="public">sisi4s::NumberScanner&lt; Complex&lt; Real &gt; &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1NumberScanner_3_01Float64_01_4" prot="public">sisi4s::NumberScanner&lt; Float64 &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1NumericData" prot="public">sisi4s::NumericData</innerclass>
    <innerclass refid="classsisi4s_1_1OneBodyFromGaussian" prot="public">sisi4s::OneBodyFromGaussian</innerclass>
    <innerclass refid="classsisi4s_1_1OneBodyReducedDensityMatrix" prot="public">sisi4s::OneBodyReducedDensityMatrix</innerclass>
    <innerclass refid="classsisi4s_1_1OneBodyRotation" prot="public">sisi4s::OneBodyRotation</innerclass>
    <innerclass refid="structsisi4s_1_1Options" prot="public">sisi4s::Options</innerclass>
    <innerclass refid="classsisi4s_1_1ParenthesisTriples" prot="public">sisi4s::ParenthesisTriples</innerclass>
    <innerclass refid="classsisi4s_1_1ParticleHoleCoulombVertexDecomposition" prot="public">sisi4s::ParticleHoleCoulombVertexDecomposition</innerclass>
    <innerclass refid="classsisi4s_1_1ParticleHoleCoulombVertexFromFactors" prot="public">sisi4s::ParticleHoleCoulombVertexFromFactors</innerclass>
    <innerclass refid="classsisi4s_1_1ParticleHoleCoulombVertexReader" prot="public">sisi4s::ParticleHoleCoulombVertexReader</innerclass>
    <innerclass refid="classsisi4s_1_1ParticleHoleCoulombVertexSingularVectors" prot="public">sisi4s::ParticleHoleCoulombVertexSingularVectors</innerclass>
    <innerclass refid="classsisi4s_1_1Permutation" prot="public">sisi4s::Permutation</innerclass>
    <innerclass refid="classsisi4s_1_1Permutation_3_011_01_4" prot="public">sisi4s::Permutation&lt; 1 &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1PerturbativeTriples" prot="public">sisi4s::PerturbativeTriples</innerclass>
    <innerclass refid="classsisi4s_1_1PseudoInverse" prot="public">sisi4s::PseudoInverse</innerclass>
    <innerclass refid="classsisi4s_1_1PseudoInverseHermitianSvd" prot="public">sisi4s::PseudoInverseHermitianSvd</innerclass>
    <innerclass refid="classsisi4s_1_1PseudoInverseSvd" prot="public">sisi4s::PseudoInverseSvd</innerclass>
    <innerclass refid="classsisi4s_1_1RandomGenerator" prot="public">sisi4s::RandomGenerator</innerclass>
    <innerclass refid="classsisi4s_1_1RangeParser" prot="public">sisi4s::RangeParser</innerclass>
    <innerclass refid="classsisi4s_1_1RealData" prot="public">sisi4s::RealData</innerclass>
    <innerclass refid="classsisi4s_1_1ScaLapackDescriptor" prot="public">sisi4s::ScaLapackDescriptor</innerclass>
    <innerclass refid="classsisi4s_1_1ScaLapackHermitianEigenSystem" prot="public">sisi4s::ScaLapackHermitianEigenSystem</innerclass>
    <innerclass refid="classsisi4s_1_1ScaLapackHermitianEigenSystem_3_01complex_01_4" prot="public">sisi4s::ScaLapackHermitianEigenSystem&lt; complex &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1ScaLapackHermitianEigenSystem_3_01double_01_4" prot="public">sisi4s::ScaLapackHermitianEigenSystem&lt; double &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1ScaLapackHermitianEigenSystemDc" prot="public">sisi4s::ScaLapackHermitianEigenSystemDc</innerclass>
    <innerclass refid="classsisi4s_1_1ScaLapackHermitianEigenSystemDc_3_01complex_01_4" prot="public">sisi4s::ScaLapackHermitianEigenSystemDc&lt; complex &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1ScaLapackHermitianEigenSystemDc_3_01double_01_4" prot="public">sisi4s::ScaLapackHermitianEigenSystemDc&lt; double &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1ScaLapackMatrix" prot="public">sisi4s::ScaLapackMatrix</innerclass>
    <innerclass refid="classsisi4s_1_1ScaLapackSingularValueDecomposition" prot="public">sisi4s::ScaLapackSingularValueDecomposition</innerclass>
    <innerclass refid="classsisi4s_1_1ScaLapackSingularValueDecomposition_3_01complex_01_4" prot="public">sisi4s::ScaLapackSingularValueDecomposition&lt; complex &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1ScaLapackSingularValueDecomposition_3_01double_01_4" prot="public">sisi4s::ScaLapackSingularValueDecomposition&lt; double &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1Scanner" prot="public">sisi4s::Scanner</innerclass>
    <innerclass refid="classsisi4s_1_1SDFockVector" prot="public">sisi4s::SDFockVector</innerclass>
    <innerclass refid="classsisi4s_1_1SDTFockVector" prot="public">sisi4s::SDTFockVector</innerclass>
    <innerclass refid="classsisi4s_1_1SFockVector" prot="public">sisi4s::SFockVector</innerclass>
    <innerclass refid="classsisi4s_1_1SimilarityTransformedHamiltonian" prot="public">sisi4s::SimilarityTransformedHamiltonian</innerclass>
    <innerclass refid="classsisi4s_1_1simpson" prot="public">sisi4s::simpson</innerclass>
    <innerclass refid="classsisi4s_1_1SingleParticleOccupancies" prot="public">sisi4s::SingleParticleOccupancies</innerclass>
    <innerclass refid="classsisi4s_1_1Sisi4s" prot="public">sisi4s::Sisi4s</innerclass>
    <innerclass refid="classsisi4s_1_1SliceCoulombVertex" prot="public">sisi4s::SliceCoulombVertex</innerclass>
    <innerclass refid="classsisi4s_1_1SlicedCtfTensor" prot="public">sisi4s::SlicedCtfTensor</innerclass>
    <innerclass refid="classsisi4s_1_1SourceLocation" prot="public">sisi4s::SourceLocation</innerclass>
    <innerclass refid="classsisi4s_1_1StantonIntermediatesUCCSD" prot="public">sisi4s::StantonIntermediatesUCCSD</innerclass>
    <innerclass refid="classsisi4s_1_1StaticAssert" prot="public">sisi4s::StaticAssert</innerclass>
    <innerclass refid="structsisi4s_1_1TensorAntisymmetrizer" prot="public">sisi4s::TensorAntisymmetrizer</innerclass>
    <innerclass refid="classsisi4s_1_1TensorContraction" prot="public">sisi4s::TensorContraction</innerclass>
    <innerclass refid="classsisi4s_1_1TensorData" prot="public">sisi4s::TensorData</innerclass>
    <innerclass refid="classsisi4s_1_1TensorGetMax" prot="public">sisi4s::TensorGetMax</innerclass>
    <innerclass refid="classsisi4s_1_1TensorIo" prot="public">sisi4s::TensorIo</innerclass>
    <innerclass refid="classsisi4s_1_1TensorNorm" prot="public">sisi4s::TensorNorm</innerclass>
    <innerclass refid="classsisi4s_1_1TensorReader" prot="public">sisi4s::TensorReader</innerclass>
    <innerclass refid="structsisi4s_1_1TensorReduceijij" prot="public">sisi4s::TensorReduceijij</innerclass>
    <innerclass refid="structsisi4s_1_1TensorSlicer" prot="public">sisi4s::TensorSlicer</innerclass>
    <innerclass refid="classsisi4s_1_1TensorSum" prot="public">sisi4s::TensorSum</innerclass>
    <innerclass refid="structsisi4s_1_1TensorUnrestricter" prot="public">sisi4s::TensorUnrestricter</innerclass>
    <innerclass refid="classsisi4s_1_1TensorWriter" prot="public">sisi4s::TensorWriter</innerclass>
    <innerclass refid="classsisi4s_1_1TextData" prot="public">sisi4s::TextData</innerclass>
    <innerclass refid="classsisi4s_1_1Time" prot="public">sisi4s::Time</innerclass>
    <innerclass refid="classsisi4s_1_1Timer" prot="public">sisi4s::Timer</innerclass>
    <innerclass refid="classsisi4s_1_1trapezium" prot="public">sisi4s::trapezium</innerclass>
    <innerclass refid="classsisi4s_1_1TypedData" prot="public">sisi4s::TypedData</innerclass>
    <innerclass refid="classsisi4s_1_1TypeRelations" prot="public">sisi4s::TypeRelations</innerclass>
    <innerclass refid="classsisi4s_1_1TypeRelations_3_01A_01_5_00_01A_01_4" prot="public">sisi4s::TypeRelations&lt; A *, A &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1TypeRelations_3_01A_00_01A_01_4" prot="public">sisi4s::TypeRelations&lt; A, A &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1TypeRelations_3_01double_00_01complex_01_4" prot="public">sisi4s::TypeRelations&lt; double, complex &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1TypeRelations_3_01int_00_01complex_01_4" prot="public">sisi4s::TypeRelations&lt; int, complex &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1TypeRelations_3_01int_00_01double_01_4" prot="public">sisi4s::TypeRelations&lt; int, double &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1TypeTraits" prot="public">sisi4s::TypeTraits</innerclass>
    <innerclass refid="classsisi4s_1_1TypeTraits_3_01bool_01_4" prot="public">sisi4s::TypeTraits&lt; bool &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1TypeTraits_3_01Complex64_01_4" prot="public">sisi4s::TypeTraits&lt; Complex64 &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1TypeTraits_3_01Float64_01_4" prot="public">sisi4s::TypeTraits&lt; Float64 &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1TypeTraits_3_01int64__t_01_4" prot="public">sisi4s::TypeTraits&lt; int64_t &gt;</innerclass>
    <innerclass refid="classsisi4s_1_1UccsdAmplitudesFromCoulombIntegrals" prot="public">sisi4s::UccsdAmplitudesFromCoulombIntegrals</innerclass>
    <innerclass refid="classsisi4s_1_1UCcsdEAEquationOfMotionDavidson" prot="public">sisi4s::UCcsdEAEquationOfMotionDavidson</innerclass>
    <innerclass refid="classsisi4s_1_1UCcsdIPEquationOfMotionDavidson" prot="public">sisi4s::UCcsdIPEquationOfMotionDavidson</innerclass>
    <innerclass refid="classsisi4s_1_1UccsdtAmplitudesFromCoulombIntegrals" prot="public">sisi4s::UccsdtAmplitudesFromCoulombIntegrals</innerclass>
    <innerclass refid="classsisi4s_1_1UccsdtqAmplitudesFromCoulombIntegrals" prot="public">sisi4s::UccsdtqAmplitudesFromCoulombIntegrals</innerclass>
    <innerclass refid="classsisi4s_1_1UegVertexGenerator" prot="public">sisi4s::UegVertexGenerator</innerclass>
    <innerclass refid="classsisi4s_1_1UnrestrictedEquationOfMotionSinglesFromRpa" prot="public">sisi4s::UnrestrictedEquationOfMotionSinglesFromRpa</innerclass>
    <innerclass refid="classsisi4s_1_1UPerturbativeTriples" prot="public">sisi4s::UPerturbativeTriples</innerclass>
    <innerclass refid="classsisi4s_1_1UrpaAmplitudesFromCoulombIntegrals" prot="public">sisi4s::UrpaAmplitudesFromCoulombIntegrals</innerclass>
    <innerclass refid="classsisi4s_1_1Vector" prot="public">sisi4s::Vector</innerclass>
    <innerclass refid="structsisi4s_1_1VectorTensor" prot="public">sisi4s::VectorTensor</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacesisi4s_1af30d29af55f9e24682fe564ead1a2628" prot="public" static="no" strong="no">
        <type></type>
        <name>InputFileFormat</name>
        <qualifiedname>sisi4s::InputFileFormat</qualifiedname>
        <enumvalue id="namespacesisi4s_1af30d29af55f9e24682fe564ead1a2628aea5e24a8dc90587802de4bf2bfd1ca25" prot="public">
          <name>YAML</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesisi4s_1af30d29af55f9e24682fe564ead1a2628a67982f8adf64ae7b9af2df4970b59919" prot="public">
          <name>CC4S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/Parser.hpp" line="12" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/Parser.hpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="enum" id="namespacesisi4s_1af6fb2fb68d4debbf0349a11be6963b8d" prot="public" static="no" strong="no">
        <type></type>
        <name>Index</name>
        <qualifiedname>sisi4s::Index</qualifiedname>
        <enumvalue id="namespacesisi4s_1af6fb2fb68d4debbf0349a11be6963b8daa906462c48a265bc4b7fe47477719586" prot="public">
          <name>NO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesisi4s_1af6fb2fb68d4debbf0349a11be6963b8da0852843fe89ed23115167b8255b92644" prot="public">
          <name>NV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesisi4s_1af6fb2fb68d4debbf0349a11be6963b8daceeda3c68e3d760c166526db0129a377" prot="public">
          <name>NP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" line="8" column="1" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" bodystart="8" bodyend="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacesisi4s_1ab0457f55e1460236bab6deb9d7635f0a" prot="public" static="no">
        <type>Eigen::Matrix&lt; double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor &gt;</type>
        <definition>using sisi4s::MatrixColumnMajor = typedef Eigen::Matrix&lt; double , Eigen::Dynamic , Eigen::Dynamic , Eigen::ColMajor &gt;</definition>
        <argsstring></argsstring>
        <name>MatrixColumnMajor</name>
        <qualifiedname>sisi4s::MatrixColumnMajor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/algorithms/HartreeFockFromCoulombIntegrals.hpp" line="10" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/algorithms/HartreeFockFromCoulombIntegrals.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesisi4s_1acba8a4ea08d5dd30e562e60a467103c7" prot="public" static="no">
        <type>array&lt; int, 3 &gt;</type>
        <definition>using sisi4s::ivec = typedef array&lt;int,3&gt;</definition>
        <argsstring></argsstring>
        <name>ivec</name>
        <qualifiedname>sisi4s::ivec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/algorithms/UegVertexGenerator.hpp" line="23" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/algorithms/UegVertexGenerator.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesisi4s_1afa9c0a1edb7f927ade8c48edeebb1b36" prot="public" static="no">
        <type>array&lt; double, 4 &gt;</type>
        <definition>using sisi4s::dvec = typedef array&lt;double,4&gt;</definition>
        <argsstring></argsstring>
        <name>dvec</name>
        <qualifiedname>sisi4s::dvec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/algorithms/UegVertexGenerator.hpp" line="24" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/algorithms/UegVertexGenerator.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesisi4s_1a9cb34238d074521ecc87514a824265dd" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Real</type>
          </param>
        </templateparamlist>
        <type>std::complex&lt; Real &gt;</type>
        <definition>using sisi4s::Complex = typedef std::complex&lt;Real&gt;</definition>
        <argsstring></argsstring>
        <name>Complex</name>
        <qualifiedname>sisi4s::Complex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Complex.hpp" line="10" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Complex.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesisi4s_1a8166856c85b7cae4c4a7161ccac18e3a" prot="public" static="no">
        <type><ref refid="namespacesisi4s_1a9cb34238d074521ecc87514a824265dd" kindref="member">Complex</ref>&lt; <ref refid="namespacesisi4s_1af412ed8fd1cb707c417329fdbcd0f407" kindref="member">Float32</ref> &gt;</type>
        <definition>typedef Complex&lt;Float32&gt; sisi4s::Complex32</definition>
        <argsstring></argsstring>
        <name>Complex32</name>
        <qualifiedname>sisi4s::Complex32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Complex.hpp" line="13" column="19" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Complex.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesisi4s_1a4f2a35668e9f5c158a04d77cf39ac02b" prot="public" static="no">
        <type><ref refid="namespacesisi4s_1a9cb34238d074521ecc87514a824265dd" kindref="member">Complex</ref>&lt; <ref refid="namespacesisi4s_1a6c92e60898749aa71eb27986ad9ccfde" kindref="member">Float64</ref> &gt;</type>
        <definition>typedef Complex&lt;Float64&gt; sisi4s::Complex64</definition>
        <argsstring></argsstring>
        <name>Complex64</name>
        <qualifiedname>sisi4s::Complex64</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Complex.hpp" line="14" column="19" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Complex.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" prot="public" static="no">
        <type><ref refid="namespacesisi4s_1a9cb34238d074521ecc87514a824265dd" kindref="member">Complex</ref>&lt; real &gt;</type>
        <definition>typedef Complex&lt;real&gt; sisi4s::complex</definition>
        <argsstring></argsstring>
        <name>complex</name>
        <qualifiedname>sisi4s::complex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Complex.hpp" line="17" column="19" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Complex.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesisi4s_1af412ed8fd1cb707c417329fdbcd0f407" prot="public" static="no">
        <type><ref refid="classsisi4s_1_1FloatTypes" kindref="compound">FloatTypes</ref>&lt; 32 &gt;::type</type>
        <definition>typedef FloatTypes&lt;32&gt;::type sisi4s::Float32</definition>
        <argsstring></argsstring>
        <name>Float32</name>
        <qualifiedname>sisi4s::Float32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Float.hpp" line="30" column="29" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Float.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesisi4s_1a6c92e60898749aa71eb27986ad9ccfde" prot="public" static="no">
        <type><ref refid="classsisi4s_1_1FloatTypes" kindref="compound">FloatTypes</ref>&lt; 64 &gt;::type</type>
        <definition>typedef FloatTypes&lt;64&gt;::type sisi4s::Float64</definition>
        <argsstring></argsstring>
        <name>Float64</name>
        <qualifiedname>sisi4s::Float64</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Float.hpp" line="31" column="29" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Float.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>CTF::Tensor&lt; F &gt;</type>
        <definition>using sisi4s::Tensor = typedef CTF::Tensor&lt;F&gt;</definition>
        <argsstring></argsstring>
        <name>Tensor</name>
        <qualifiedname>sisi4s::Tensor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Tensor.hpp" line="9" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Tensor.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesisi4s_1a8bc5ec282e4873c8ebc9e265d2a08990" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>CTF::Matrix&lt; F &gt;</type>
        <definition>using sisi4s::Matrix = typedef CTF::Matrix&lt;F&gt;</definition>
        <argsstring></argsstring>
        <name>Matrix</name>
        <qualifiedname>sisi4s::Matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Tensor.hpp" line="12" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Tensor.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacesisi4s_1aeeda71beb90d864c4ecd8884ef0047d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AlgorithmType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1Algorithm" kindref="compound">Algorithm</ref> *</type>
        <definition>Algorithm * sisi4s::createAlgorithm</definition>
        <argsstring>(std::vector&lt; Argument &gt; const &amp;arguments)</argsstring>
        <name>createAlgorithm</name>
        <qualifiedname>sisi4s::createAlgorithm</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classsisi4s_1_1Argument" kindref="compound">Argument</ref> &gt; const &amp;</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
<para>template function creating an instance of the given class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/algorithms/Algorithm.hpp" line="154" column="13" bodyfile="/home/runner/work/sisi4s/sisi4s/src/algorithms/Algorithm.hpp" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a3e0e5db8049adce93ba9fc38d7aaeb7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string sisi4s::operator*</definition>
        <argsstring>(const std::string &amp;s, const sisi4s::Permutation&lt; N &gt; &amp;pi)</argsstring>
        <name>operator*</name>
        <qualifiedname>sisi4s::operator*</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1Permutation" kindref="compound">sisi4s::Permutation</ref>&lt; N &gt; &amp;</type>
          <declname>pi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/algorithms/CcsdPerturbativeTriples.cxx" line="26" column="22" bodyfile="/home/runner/work/sisi4s/sisi4s/src/algorithms/CcsdPerturbativeTriples.cxx" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1ab2414ae2ca7d376f6379d91727cd66a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacesisi4s_1ab0457f55e1460236bab6deb9d7635f0a" kindref="member">MatrixColumnMajor</ref></type>
        <definition>MatrixColumnMajor sisi4s::toEigenMatrix</definition>
        <argsstring>(Tensor&lt; double &gt; &amp;ctf)</argsstring>
        <name>toEigenMatrix</name>
        <qualifiedname>sisi4s::toEigenMatrix</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>ctf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/algorithms/HartreeFockFromCoulombIntegrals.hpp" line="27" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/algorithms/HartreeFockFromCoulombIntegrals.cxx" bodystart="20" bodyend="37" declfile="/home/runner/work/sisi4s/sisi4s/src/algorithms/HartreeFockFromCoulombIntegrals.hpp" declline="27" declcolumn="21"/>
        <referencedby refid="HartreeFockFromCoulombIntegrals_8cxx_1ad975fce2e7f66fbfc1fa217992c552c5" compoundref="HartreeFockFromCoulombIntegrals_8cxx" startline="59" endline="67">getFockMatrix</referencedby>
        <referencedby refid="classsisi4s_1_1HartreeFockFromCoulombIntegrals_1a6a4014120ac80decf9affec475f45d03" compoundref="HartreeFockFromCoulombIntegrals_8cxx" startline="69" endline="265">sisi4s::HartreeFockFromCoulombIntegrals::run</referencedby>
        <referencedby refid="classsisi4s_1_1HartreeFockFromGaussian_1a78840a71ffbe05fbccb0a8ef6ec569af" compoundref="HartreeFockFromGaussian_8cxx" startline="219" endline="513">sisi4s::HartreeFockFromGaussian::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a5f1a1c319b7f345b0fbac3d446635845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sisi4s::composeCanonicalPolyadicDecompositionTensors</definition>
        <argsstring>(Tensor&lt; F &gt; &amp;A, Tensor&lt; F &gt; &amp;B, Tensor&lt; F &gt; &amp;C, Tensor&lt; F &gt; &amp;T)</argsstring>
        <name>composeCanonicalPolyadicDecompositionTensors</name>
        <qualifiedname>sisi4s::composeCanonicalPolyadicDecompositionTensors</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>T</declname>
        </param>
        <briefdescription>
<para>Calculates <formula id="49">$T_{ijk}=A_{iR}B_{jR}C_{kR}$</formula> with minimal memory footprint. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/CanonicalPolyadicDecomposition.hpp" line="13" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/CanonicalPolyadicDecomposition.cxx" bodystart="12" bodyend="54" declfile="/home/runner/work/sisi4s/sisi4s/src/math/CanonicalPolyadicDecomposition.hpp" declline="13" declcolumn="8"/>
        <references refid="Exception_8hpp_1aa6490e8f97f5dc90591264a4d94a1c09" compoundref="Exception_8hpp" startline="11">Assert</references>
        <references refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" compoundref="Log_8hpp" startline="113">LOG</references>
        <referencedby refid="classsisi4s_1_1ParticleHoleCoulombVertexDecomposition_1a89e580fcc9544ae668ccda0d37256f35" compoundref="ParticleHoleCoulombVertexDecomposition_8cxx" startline="161" endline="190">sisi4s::ParticleHoleCoulombVertexDecomposition::fit</referencedby>
        <referencedby refid="classsisi4s_1_1CoulombVertexDecomposition_1a6b726a7a86ef6edab94bbd836fd1f246" compoundref="CoulombVertexDecomposition_8cxx" startline="392" endline="400">sisi4s::CoulombVertexDecomposition::getDelta</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1abfc549a8ae34264be9b654324c1ae036" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sisi4s::dryComposeCanonicalPolyadicDecompositionTensors</definition>
        <argsstring>(DryTensor&lt; F &gt; &amp;A, DryTensor&lt; F &gt; &amp;B, DryTensor&lt; F &gt; &amp;C, DryTensor&lt; F &gt; &amp;T)</argsstring>
        <name>dryComposeCanonicalPolyadicDecompositionTensors</name>
        <qualifiedname>sisi4s::dryComposeCanonicalPolyadicDecompositionTensors</qualifiedname>
        <param>
          <type><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor</ref>&lt; F &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor</ref>&lt; F &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor</ref>&lt; F &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor</ref>&lt; F &gt; &amp;</type>
          <declname>T</declname>
        </param>
        <briefdescription>
<para>Performs a dry run of the calculation <formula id="49">$T_{ijk}=A_{iR}B_{jR}C_{kR}$</formula> with minimal memory footprint. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/CanonicalPolyadicDecomposition.hpp" line="22" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/CanonicalPolyadicDecomposition.cxx" bodystart="70" bodyend="102" declfile="/home/runner/work/sisi4s/sisi4s/src/math/CanonicalPolyadicDecomposition.hpp" declline="22" declcolumn="8"/>
        <references refid="Exception_8hpp_1aa6490e8f97f5dc90591264a4d94a1c09" compoundref="Exception_8hpp" startline="11">Assert</references>
        <references refid="classsisi4s_1_1DryTensor_1a6f3b537c168473549d60e5af723a4751" compoundref="DryTensor_8hpp" startline="92">sisi4s::DryTensor&lt; F &gt;::lens</references>
        <references refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" compoundref="Log_8hpp" startline="113">LOG</references>
        <references refid="classsisi4s_1_1DryTensor_1a89f315195d67bfb273eb5e273e7de7ec" compoundref="DryTensor_8hpp" startline="91">sisi4s::DryTensor&lt; F &gt;::order</references>
        <referencedby refid="classsisi4s_1_1ParticleHoleCoulombVertexDecomposition_1a1d7aed53263c884eccb9c64c0cfcfd0a" compoundref="ParticleHoleCoulombVertexDecomposition_8cxx" startline="192" endline="215">sisi4s::ParticleHoleCoulombVertexDecomposition::dryFit</referencedby>
        <referencedby refid="classsisi4s_1_1CoulombVertexDecomposition_1ada47c641a50e19ac728504e718bac626" compoundref="CoulombVertexDecomposition_8cxx" startline="262" endline="283">sisi4s::CoulombVertexDecomposition::dryFit</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1ab14ed3164e19d771549f3af9f21a00d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sisi4s::contractWithCanonicalPolyadicDecompositionTensors</definition>
        <argsstring>(Tensor&lt; F &gt; &amp;T, char const *indicesT, Tensor&lt; F &gt; &amp;B, char const idxB, Tensor&lt; F &gt; &amp;C, char const idxC, Tensor&lt; F &gt; &amp;A, char const idxA)</argsstring>
        <name>contractWithCanonicalPolyadicDecompositionTensors</name>
        <qualifiedname>sisi4s::contractWithCanonicalPolyadicDecompositionTensors</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>T</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indicesT</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxB</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxC</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxA</declname>
        </param>
        <briefdescription>
<para>Calculates <formula id="50">$A_{iR} = T_{ijk}B^{jR}C^{kR}$</formula> using a contraction order with minimal memory footprint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">T</parametername>
</parameternamelist>
<parameterdescription>
<para>the tensor <formula id="51">$T_{ijk}$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indicesT</parametername>
</parameternamelist>
<parameterdescription>
<para>the indices to compose <formula id="52">$T$</formula>, e.g. &quot;ijk&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">B</parametername>
</parameternamelist>
<parameterdescription>
<para>the tensor <formula id="53">$B_{jR}$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idxB</parametername>
</parameternamelist>
<parameterdescription>
<para>the index letter <formula id="54">$B$</formula> has in common with <formula id="52">$T$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">C</parametername>
</parameternamelist>
<parameterdescription>
<para>the tensor <formula id="55">$C_{kR}$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idxC</parametername>
</parameternamelist>
<parameterdescription>
<para>the index letter <formula id="56">$C$</formula> has in common with <formula id="52">$T$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">A</parametername>
</parameternamelist>
<parameterdescription>
<para>the tensor <formula id="57">$A_{iR}$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idxA</parametername>
</parameternamelist>
<parameterdescription>
<para>the index letter <formula id="58">$A$</formula> has in common with <formula id="52">$T$</formula> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/CanonicalPolyadicDecomposition.hpp" line="40" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/CanonicalPolyadicDecomposition.cxx" bodystart="118" bodyend="170" declfile="/home/runner/work/sisi4s/sisi4s/src/math/CanonicalPolyadicDecomposition.hpp" declline="40" declcolumn="8"/>
        <references refid="Exception_8hpp_1aa6490e8f97f5dc90591264a4d94a1c09" compoundref="Exception_8hpp" startline="11">Assert</references>
        <references refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" compoundref="Log_8hpp" startline="113">LOG</references>
        <referencedby refid="namespacesisi4s_1a7aeaa0a35be34eeeb8537d428a75e97d" compoundref="RegularizedAlternatingLeastSquares_8cxx" startline="15" endline="43">fitAlternatingLeastSquaresFactor</referencedby>
        <referencedby refid="namespacesisi4s_1a8ca8aaa549414abe940b2f7ecc1f549d" compoundref="RegularizedAlternatingLeastSquares_8cxx" startline="61" endline="103">fitRegularizedAlternatingLeastSquaresFactor</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a3c57f2c3b6b413ec8c8cbac80a1bbaca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sisi4s::dryContractWithCanonicalPolyadicDecompositionTensors</definition>
        <argsstring>(DryTensor&lt; F &gt; &amp;T, char const *indicesT, DryTensor&lt; F &gt; &amp;B, char const idxB, DryTensor&lt; F &gt; &amp;C, char const idxC, DryTensor&lt; F &gt; &amp;A, char const idxA)</argsstring>
        <name>dryContractWithCanonicalPolyadicDecompositionTensors</name>
        <qualifiedname>sisi4s::dryContractWithCanonicalPolyadicDecompositionTensors</qualifiedname>
        <param>
          <type><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor</ref>&lt; F &gt; &amp;</type>
          <declname>T</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indicesT</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor</ref>&lt; F &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxB</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor</ref>&lt; F &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxC</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor</ref>&lt; F &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxA</declname>
        </param>
        <briefdescription>
<para>Performs a dry run of the calculation <formula id="50">$A_{iR} = T_{ijk}B^{jR}C^{kR}$</formula> using a contraction order with minimal memory footprint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">T</parametername>
</parameternamelist>
<parameterdescription>
<para>the tensor <formula id="51">$T_{ijk}$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indicesT</parametername>
</parameternamelist>
<parameterdescription>
<para>the indices to compose <formula id="52">$T$</formula>, e.g. &quot;ijk&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">B</parametername>
</parameternamelist>
<parameterdescription>
<para>the tensor <formula id="53">$B_{jR}$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idxB</parametername>
</parameternamelist>
<parameterdescription>
<para>the index letter <formula id="54">$B$</formula> has in common with <formula id="52">$T$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">C</parametername>
</parameternamelist>
<parameterdescription>
<para>the tensor <formula id="55">$C_{kR}$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idxC</parametername>
</parameternamelist>
<parameterdescription>
<para>the index letter <formula id="56">$C$</formula> has in common with <formula id="52">$T$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">A</parametername>
</parameternamelist>
<parameterdescription>
<para>the tensor <formula id="57">$A_{iR}$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idxA</parametername>
</parameternamelist>
<parameterdescription>
<para>the index letter <formula id="58">$A$</formula> has in common with <formula id="52">$T$</formula> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/CanonicalPolyadicDecomposition.hpp" line="60" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/CanonicalPolyadicDecomposition.cxx" bodystart="190" bodyend="226" declfile="/home/runner/work/sisi4s/sisi4s/src/math/CanonicalPolyadicDecomposition.hpp" declline="60" declcolumn="8"/>
        <references refid="Exception_8hpp_1aa6490e8f97f5dc90591264a4d94a1c09" compoundref="Exception_8hpp" startline="11">Assert</references>
        <references refid="classsisi4s_1_1DryTensor_1a6f3b537c168473549d60e5af723a4751" compoundref="DryTensor_8hpp" startline="92">sisi4s::DryTensor&lt; F &gt;::lens</references>
        <references refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" compoundref="Log_8hpp" startline="113">LOG</references>
        <references refid="classsisi4s_1_1DryTensor_1a89f315195d67bfb273eb5e273e7de7ec" compoundref="DryTensor_8hpp" startline="91">sisi4s::DryTensor&lt; F &gt;::order</references>
        <referencedby refid="namespacesisi4s_1a7e043fcaaf8e99a86eb9920cf43cc228" compoundref="RegularizedAlternatingLeastSquares_8cxx" startline="123" endline="143">dryFitRegularizedAlternatingLeastSquaresFactor</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1ab40f034e81921db1e3447d2f623c0506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Real</type>
          </param>
        </templateparamlist>
        <type>Real</type>
        <definition>Real sisi4s::absSqr</definition>
        <argsstring>(const Real x)</argsstring>
        <name>absSqr</name>
        <qualifiedname>sisi4s::absSqr</qualifiedname>
        <param>
          <type>const Real</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Complex.hpp" line="21" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Complex.hpp" bodystart="21" bodyend="23"/>
        <referencedby refid="namespacesisi4s_1a10d6d290d14104e30791d37abd5d025a" compoundref="Complex_8hpp" startline="26" endline="28">absSqr</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a10d6d290d14104e30791d37abd5d025a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Real</type>
          </param>
        </templateparamlist>
        <type>Real</type>
        <definition>Real sisi4s::absSqr</definition>
        <argsstring>(const Complex&lt; Real &gt; z)</argsstring>
        <name>absSqr</name>
        <qualifiedname>sisi4s::absSqr</qualifiedname>
        <param>
          <type>const <ref refid="namespacesisi4s_1a9cb34238d074521ecc87514a824265dd" kindref="member">Complex</ref>&lt; Real &gt;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Complex.hpp" line="26" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Complex.hpp" bodystart="26" bodyend="28"/>
        <references refid="namespacesisi4s_1ab40f034e81921db1e3447d2f623c0506" compoundref="Complex_8hpp" startline="21" endline="23">absSqr</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1ad6f7eb8262f28cfa6afcabe5c42c8521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sisi4s::fromComplexTensor</definition>
        <argsstring>(Tensor&lt; complex &gt; &amp;c, Tensor&lt; double &gt; &amp;r, Tensor&lt; double &gt; &amp;i)</argsstring>
        <name>fromComplexTensor</name>
        <qualifiedname>sisi4s::fromComplexTensor</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; <ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Decomposes the tensor of complex elements into two tensors containing the real and imaginary parts, respectively. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" line="13" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.cxx" bodystart="40" bodyend="52" declfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" declline="13" declcolumn="8"/>
        <references refid="ComplexTensor_8cxx_1a6ee41e7aac8595a4a49313301607c7ca" compoundref="ComplexTensor_8cxx" startline="7">AssertCompatibleTensorShapes</references>
        <references refid="namespacesisi4s_1ad6f7eb8262f28cfa6afcabe5c42c8521" compoundref="ComplexTensor_8cxx" startline="40" endline="52">fromComplexTensor</references>
        <references refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ab8ed521c3bf0c49835954ac0e7655425" compoundref="AngularMomentum_8hpp" startline="9">am::I</references>
        <references refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" compoundref="ComplexTensor_8cxx" startline="33">Indices</references>
        <referencedby refid="classsisi4s_1_1FiniteSizeCorrection_1a011bf1004b284365e04ac9bafe86618d" compoundref="FiniteSizeCorrection_8cxx" startline="337" endline="466">sisi4s::FiniteSizeCorrection::calculateComplexStructureFactor</referencedby>
        <referencedby refid="classsisi4s_1_1CoulombIntegralsFromVertex_1a5a8d285e19c8e3dbca1e9107da4c3460" compoundref="CoulombIntegralsFromVertex_8cxx" startline="186" endline="471">sisi4s::CoulombIntegralsFromVertex::calculateRealIntegrals</referencedby>
        <referencedby refid="classsisi4s_1_1FiniteSizeCorrection_1a40817a0c8ab25b2ab9ac7586a00fc792" compoundref="FiniteSizeCorrection_8cxx" startline="124" endline="334">sisi4s::FiniteSizeCorrection::calculateRealStructureFactor</referencedby>
        <referencedby refid="classsisi4s_1_1ParticleHoleCoulombVertexDecomposition_1ae8dc9156a24e3e2cc3499e2b31e1448b" compoundref="ParticleHoleCoulombVertexDecomposition_8cxx" startline="254" endline="296">sisi4s::ParticleHoleCoulombVertexDecomposition::evaluateMp2</referencedby>
        <referencedby refid="classsisi4s_1_1BasisSetExtrapolation_1a3d9834f6a2ed4100e47b32e498914129" compoundref="BasisSetExtrapolation_8cxx" startline="53" endline="265">sisi4s::BasisSetExtrapolation::evaluateQGG</referencedby>
        <referencedby refid="namespacesisi4s_1ad6f7eb8262f28cfa6afcabe5c42c8521" compoundref="ComplexTensor_8cxx" startline="40" endline="52">fromComplexTensor</referencedby>
        <referencedby refid="classsisi4s_1_1CcsdEnergyFromCoulombIntegrals_1a5ec0fe08374df8bf74029a3eee23942c" compoundref="CcsdEnergyFromCoulombIntegrals_8cxx" startline="29" endline="472">sisi4s::CcsdEnergyFromCoulombIntegrals::getResiduum</referencedby>
        <referencedby refid="classsisi4s_1_1CcsdDiagrammaticDecomposition_1a88ea20dff4ea90e58247c8437c9f661f" compoundref="CcsdDiagrammaticDecomposition_8cxx" startline="32" endline="415">sisi4s::CcsdDiagrammaticDecomposition::run</referencedby>
        <referencedby refid="classsisi4s_1_1DoublesAmplitudesFromVertex_1ac84baa2cdf181d22f093b777fe95a23d" compoundref="DoublesAmplitudesFromVertex_8cxx" startline="21" endline="43">sisi4s::DoublesAmplitudesFromVertex::run</referencedby>
        <referencedby refid="classsisi4s_1_1FromComplexTensor_1aaf3fa74437f68d888f812cb739b399b5" compoundref="FromComplexTensor_8cxx" startline="20" endline="31">sisi4s::FromComplexTensor::run</referencedby>
        <referencedby refid="classsisi4s_1_1ParenthesisTriples_1a13c648b58b994e20cb35843b25b23312" compoundref="ParenthesisTriples_8cxx" startline="548" endline="764">sisi4s::ParenthesisTriples::run</referencedby>
        <referencedby refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1aa15c5a3edcb4102f112028ff53f27179" compoundref="ClusterSinglesDoublesAlgorithm_8cxx" startline="564" endline="726">sisi4s::ClusterSinglesDoublesAlgorithm::sliceAmplitudesFromCoupledCoulombFactors</referencedby>
        <referencedby refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a4cc0b4527b8b77bdde36752e3aca89cc" compoundref="ClusterSinglesDoublesAlgorithm_8cxx" startline="407" endline="488">sisi4s::ClusterSinglesDoublesAlgorithm::sliceCoupledCoulombIntegrals</referencedby>
        <referencedby refid="classsisi4s_1_1CcsdPerturbativeTriples_1a91a20736900b7a0c000ff7352ef38301" compoundref="CcsdPerturbativeTriples_8cxx" startline="36" endline="85">sisi4s::CcsdPerturbativeTriples::sliceTensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a41d0ed33fae9ffd4daee5515290bca54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sisi4s::fromComplexTensor</definition>
        <argsstring>(Tensor&lt; double &gt; &amp;c, Tensor&lt; double &gt; &amp;r, Tensor&lt; double &gt; &amp;i)</argsstring>
        <name>fromComplexTensor</name>
        <qualifiedname>sisi4s::fromComplexTensor</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" line="18" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.cxx" bodystart="54" bodyend="62" declfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" declline="18" declcolumn="8"/>
        <references refid="ComplexTensor_8cxx_1a6ee41e7aac8595a4a49313301607c7ca" compoundref="ComplexTensor_8cxx" startline="7">AssertCompatibleTensorShapes</references>
        <references refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ab8ed521c3bf0c49835954ac0e7655425" compoundref="AngularMomentum_8hpp" startline="9">am::I</references>
        <references refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" compoundref="ComplexTensor_8cxx" startline="33">Indices</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a4250fb84afe218d327351f6e6e92bb2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sisi4s::fromComplexTensor</definition>
        <argsstring>(Tensor&lt; complex &gt; &amp;c, Tensor&lt; double &gt; &amp;r)</argsstring>
        <name>fromComplexTensor</name>
        <qualifiedname>sisi4s::fromComplexTensor</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; <ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Discards the real part of a complex tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" line="26" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.cxx" bodystart="64" bodyend="75" declfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" declline="26" declcolumn="8"/>
        <references refid="ComplexTensor_8cxx_1a4fcb60ade2ef95fce940523ea8120f3c" compoundref="ComplexTensor_8cxx" startline="20">AssertCompatibleTensorShape</references>
        <references refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" compoundref="ComplexTensor_8cxx" startline="33">Indices</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a2653420c2b1b1224ad8f6b1d538228f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sisi4s::toComplexTensor</definition>
        <argsstring>(Tensor&lt; double &gt; &amp;r, Tensor&lt; double &gt; &amp;i, Tensor&lt; complex &gt; &amp;c)</argsstring>
        <name>toComplexTensor</name>
        <qualifiedname>sisi4s::toComplexTensor</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; <ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Composes a tensor of complex elements containing of the given tensors of real and imaginary parts. Note that in this overload the imaginary part may be redistributed during reading. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" line="37" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.cxx" bodystart="77" bodyend="97" declfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" declline="37" declcolumn="8"/>
        <references refid="ComplexTensor_8cxx_1a6ee41e7aac8595a4a49313301607c7ca" compoundref="ComplexTensor_8cxx" startline="7">AssertCompatibleTensorShapes</references>
        <references refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ab8ed521c3bf0c49835954ac0e7655425" compoundref="AngularMomentum_8hpp" startline="9">am::I</references>
        <references refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" compoundref="ComplexTensor_8cxx" startline="33">Indices</references>
        <references refid="namespacesisi4s_1a2653420c2b1b1224ad8f6b1d538228f1" compoundref="ComplexTensor_8cxx" startline="77" endline="97">toComplexTensor</references>
        <referencedby refid="classsisi4s_1_1FiniteSizeCorrection_1a011bf1004b284365e04ac9bafe86618d" compoundref="FiniteSizeCorrection_8cxx" startline="337" endline="466">sisi4s::FiniteSizeCorrection::calculateComplexStructureFactor</referencedby>
        <referencedby refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1ae4959c22cc14927799d18483a690b71f" compoundref="ClusterSinglesDoublesAlgorithm_8cxx" startline="353" endline="374">sisi4s::ClusterSinglesDoublesAlgorithm::calculateExcitationEnergies</referencedby>
        <referencedby refid="classsisi4s_1_1FiniteSizeCorrection_1a40817a0c8ab25b2ab9ac7586a00fc792" compoundref="FiniteSizeCorrection_8cxx" startline="124" endline="334">sisi4s::FiniteSizeCorrection::calculateRealStructureFactor</referencedby>
        <referencedby refid="classsisi4s_1_1CcsdEquationOfMotionDavidson_1a418beaea4a3a3fe7cf890ba392a7d6ef" compoundref="CcsdEquationOfMotionDavidson_8cxx" startline="77" endline="495">sisi4s::CcsdEquationOfMotionDavidson::run</referencedby>
        <referencedby refid="classsisi4s_1_1CcsdtEquationOfMotionDavidson_1a12e416e743f23f8ec453a9ee2f9a8aad" compoundref="CcsdtEquationOfMotionDavidson_8cxx" startline="46" endline="361">sisi4s::CcsdtEquationOfMotionDavidson::run</referencedby>
        <referencedby refid="classsisi4s_1_1CoulombVertexReader_1ab7a866749df48712c5b9b02d892be4d9" compoundref="CoulombVertexReader_8cxx" startline="28" endline="107">sisi4s::CoulombVertexReader::run</referencedby>
        <referencedby refid="classsisi4s_1_1ParticleHoleCoulombVertexReader_1a58665fc9e95f299e4daec496b5d64764" compoundref="ParticleHoleCoulombVertexReader_8cxx" startline="102" endline="207">sisi4s::ParticleHoleCoulombVertexReader::run</referencedby>
        <referencedby refid="classsisi4s_1_1UCcsdEAEquationOfMotionDavidson_1ab3fa58fddbd938517fed45a270cbd77e" compoundref="UCcsdEAEquationOfMotionDavidson_8cxx" startline="46" endline="383">sisi4s::UCcsdEAEquationOfMotionDavidson::run</referencedby>
        <referencedby refid="classsisi4s_1_1UCcsdIPEquationOfMotionDavidson_1a6a73d3c0c1a3ea5ad52001e8213bfbaf" compoundref="UCcsdIPEquationOfMotionDavidson_8cxx" startline="46" endline="335">sisi4s::UCcsdIPEquationOfMotionDavidson::run</referencedby>
        <referencedby refid="classsisi4s_1_1UnrestrictedEquationOfMotionSinglesFromRpa_1ade4d95a7d53a8b596e67d584e98d7f02" compoundref="UnrestrictedEquationOfMotionSinglesFromRpa_8cxx" startline="46" endline="241">sisi4s::UnrestrictedEquationOfMotionSinglesFromRpa::run</referencedby>
        <referencedby refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1aa15c5a3edcb4102f112028ff53f27179" compoundref="ClusterSinglesDoublesAlgorithm_8cxx" startline="564" endline="726">sisi4s::ClusterSinglesDoublesAlgorithm::sliceAmplitudesFromCoupledCoulombFactors</referencedby>
        <referencedby refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a4cc0b4527b8b77bdde36752e3aca89cc" compoundref="ClusterSinglesDoublesAlgorithm_8cxx" startline="407" endline="488">sisi4s::ClusterSinglesDoublesAlgorithm::sliceCoupledCoulombIntegrals</referencedby>
        <referencedby refid="classsisi4s_1_1DoublesAmplitudesDecomposition_1aaffeb4b10fc0077f103ac5861dd495e2" compoundref="DoublesAmplitudesDecomposition_8cxx" startline="98" endline="171">sisi4s::DoublesAmplitudesDecomposition::sliceLargestEigenValues</referencedby>
        <referencedby refid="namespacesisi4s_1a2653420c2b1b1224ad8f6b1d538228f1" compoundref="ComplexTensor_8cxx" startline="77" endline="97">toComplexTensor</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1add6f24ee3967bb84399e82f2081681a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sisi4s::toComplexTensor</definition>
        <argsstring>(Tensor&lt; double &gt; &amp;r, Tensor&lt; complex &gt; &amp;c)</argsstring>
        <name>toComplexTensor</name>
        <qualifiedname>sisi4s::toComplexTensor</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; <ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" line="42" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.cxx" bodystart="99" bodyend="119" declfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" declline="42" declcolumn="8"/>
        <references refid="ComplexTensor_8cxx_1a4fcb60ade2ef95fce940523ea8120f3c" compoundref="ComplexTensor_8cxx" startline="20">AssertCompatibleTensorShape</references>
        <references refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" compoundref="ComplexTensor_8cxx" startline="33">Indices</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a014e33dae327f57e5b44d284a6f82219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sisi4s::toComplexTensor</definition>
        <argsstring>(Tensor&lt; double &gt; &amp;r, Tensor&lt; double &gt; &amp;c)</argsstring>
        <name>toComplexTensor</name>
        <qualifiedname>sisi4s::toComplexTensor</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" line="47" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.cxx" bodystart="121" bodyend="128" declfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" declline="47" declcolumn="8"/>
        <references refid="ComplexTensor_8cxx_1a4fcb60ade2ef95fce940523ea8120f3c" compoundref="ComplexTensor_8cxx" startline="20">AssertCompatibleTensorShape</references>
        <references refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" compoundref="ComplexTensor_8cxx" startline="33">Indices</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1ab3f1696a0e7735d418f8996311daa8c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sisi4s::conjugate</definition>
        <argsstring>(Tensor&lt; double &gt; &amp;c)</argsstring>
        <name>conjugate</name>
        <qualifiedname>sisi4s::conjugate</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; double &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" line="52" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.cxx" bodystart="143" bodyend="147" declfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" declline="52" declcolumn="8"/>
        <referencedby refid="classsisi4s_1_1PseudoInverseHermitianSvd_1a802882a537b9187871ab0dda73ae4b29" compoundref="PseudoInverseHermitianSvd_8cxx" startline="17" endline="55">sisi4s::PseudoInverseHermitianSvd&lt; F &gt;::PseudoInverseHermitianSvd</referencedby>
        <referencedby refid="structsisi4s_1_1NaturalTransitionOrbitalsFromRhoAI_1a664dfd859b6247f83ddb5c29c330554e" compoundref="NaturalTransitionOrbitalsFromRhoAI_8cxx" startline="58" endline="110">sisi4s::NaturalTransitionOrbitalsFromRhoAI::buildTransformations</referencedby>
        <referencedby refid="classsisi4s_1_1BasisSetExtrapolation_1a3d9834f6a2ed4100e47b32e498914129" compoundref="BasisSetExtrapolation_8cxx" startline="53" endline="265">sisi4s::BasisSetExtrapolation::evaluateQGG</referencedby>
        <referencedby refid="classsisi4s_1_1IterativePseudoInverse_1a96558b1a79ac7e0bcdeb64127855241e" compoundref="IterativePseudoInverse_8cxx" startline="65" endline="104">sisi4s::IterativePseudoInverse&lt; F &gt;::iterate</referencedby>
        <referencedby refid="classsisi4s_1_1ApproximateCoulombVertex_1ac064920a1f03e21e008998ebd59f485c" compoundref="ApproximateCoulombVertex_8cxx" startline="21" endline="45">sisi4s::ApproximateCoulombVertex::run</referencedby>
        <referencedby refid="classsisi4s_1_1CoulombVertexSingularVectors_1a5de084a1b69bb70516fd835a02f34207" compoundref="CoulombVertexSingularVectors_8cxx" startline="27" endline="84">sisi4s::CoulombVertexSingularVectors::run</referencedby>
        <referencedby refid="structsisi4s_1_1NaturalTransitionOrbitalsFromRhoAI_1ad5b6b43420a088153556e2497bfd1c2f" compoundref="NaturalTransitionOrbitalsFromRhoAI_8cxx" startline="113" endline="133">sisi4s::NaturalTransitionOrbitalsFromRhoAI::run</referencedby>
        <referencedby refid="classsisi4s_1_1ParticleHoleCoulombVertexSingularVectors_1a09b13599f6597caa907c8d7d2f785ac2" compoundref="ParticleHoleCoulombVertexSingularVectors_8cxx" startline="27" endline="72">sisi4s::ParticleHoleCoulombVertexSingularVectors::run</referencedby>
        <referencedby refid="classsisi4s_1_1SimilarityTransformedHamiltonian_1a38e4e848464faa11aabcb3883af74b33" compoundref="SimilarityTransformedHamiltonian_8cxx" startline="2770" endline="4060">sisi4s::SimilarityTransformedHamiltonian&lt; F &gt;::structureFactor</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a900cd067a0e92de9ff85372102f9c596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sisi4s::conjugate</definition>
        <argsstring>(Tensor&lt; complex &gt; &amp;c)</argsstring>
        <name>conjugate</name>
        <qualifiedname>sisi4s::conjugate</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; <ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" line="56" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.cxx" bodystart="130" bodyend="141" declfile="/home/runner/work/sisi4s/sisi4s/src/math/ComplexTensor.hpp" declline="56" declcolumn="8"/>
        <references refid="namespacesisi4s_1abc3ea35f1434b9c5021b9195449d1f9b" compoundref="MathFunctions_8hpp" startline="34" endline="36">conj</references>
        <references refid="ComplexTensor_8cxx_1ac431f9dda53ccf76b2526c6b93fb7f09" compoundref="ComplexTensor_8cxx" startline="33">Indices</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a309771251a73107cf5eedbe665fa5a6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt;</type>
        <definition>FockVector&lt; F &gt; sisi4s::operator+</definition>
        <argsstring>(const FockVector&lt; F &gt; &amp;a, const FockVector&lt; F &gt; &amp;b)</argsstring>
        <name>operator+</name>
        <qualifiedname>sisi4s::operator+</qualifiedname>
        <param>
          <type>const <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the sum of two FockVectors a and b, where neither a nor b are modified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" line="435" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" bodystart="435" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a2de6d6b4552245b03f5b5a240dc68db7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;&amp;</type>
        <definition>FockVector&lt; F &gt; &amp;&amp; sisi4s::operator+</definition>
        <argsstring>(FockVector&lt; F &gt; &amp;&amp;a, const FockVector&lt; F &gt; &amp;b)</argsstring>
        <name>operator+</name>
        <qualifiedname>sisi4s::operator+</qualifiedname>
        <param>
          <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;&amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the sum of two FockVectors a and b, where a is movable and will be used for the result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" line="447" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" bodystart="447" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a8111daf29273a8b26b917a1db4df46a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;&amp;</type>
        <definition>FockVector&lt; F &gt; &amp;&amp; sisi4s::operator+</definition>
        <argsstring>(FockVector&lt; F &gt; &amp;a, const FockVector&lt; F &gt; &amp;&amp;b)</argsstring>
        <name>operator+</name>
        <qualifiedname>sisi4s::operator+</qualifiedname>
        <param>
          <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;&amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the sum of two FockVectors a and b, where b is movable and will be used for the result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" line="458" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" bodystart="458" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a84270509b10f18833241a3aedc483433" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt;</type>
        <definition>FockVector&lt; F &gt; sisi4s::operator-</definition>
        <argsstring>(const FockVector&lt; F &gt; &amp;a, const FockVector&lt; F &gt; &amp;b)</argsstring>
        <name>operator-</name>
        <qualifiedname>sisi4s::operator-</qualifiedname>
        <param>
          <type>const <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the difference between two FockVectors a and b, where neither a nor b are modified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" line="470" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" bodystart="470" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a3b5eceaf1bb9d2bc1502886ca227f3f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;&amp;</type>
        <definition>FockVector&lt; F &gt; &amp;&amp; sisi4s::operator-</definition>
        <argsstring>(FockVector&lt; F &gt; &amp;&amp;a, const FockVector&lt; F &gt; &amp;b)</argsstring>
        <name>operator-</name>
        <qualifiedname>sisi4s::operator-</qualifiedname>
        <param>
          <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;&amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the difference between two FockVectors a and b, where a is movable and will be used for the result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" line="482" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" bodystart="482" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a0ae00bfe773466284d8b353f1bc65e4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;&amp;</type>
        <definition>FockVector&lt; F &gt; &amp;&amp; sisi4s::operator-</definition>
        <argsstring>(const FockVector&lt; F &gt; &amp;a, FockVector&lt; F &gt; &amp;&amp;b)</argsstring>
        <name>operator-</name>
        <qualifiedname>sisi4s::operator-</qualifiedname>
        <param>
          <type>const <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;&amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the difference between two FockVectors a and b, where b is movable and will be used for the result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" line="493" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" bodystart="493" bodyend="500"/>
        <references refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ad9a58ab20a9d26589d9044a920984a3a" compoundref="AngularMomentum_8hpp" startline="8">am::F</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1afb48bee919c9732a2c97e3ba6c1f01ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt;</type>
        <definition>FockVector&lt; F &gt; sisi4s::operator*</definition>
        <argsstring>(const FockVector&lt; F &gt; &amp;a, const F s)</argsstring>
        <name>operator*</name>
        <qualifiedname>sisi4s::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const F</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Returns the scalar multiple of the <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref> a right-multiplied with the scalar s, where a is not modified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" line="507" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" bodystart="507" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a6ae0c41387739cd346754919d568570f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;&amp;</type>
        <definition>FockVector&lt; F &gt; &amp;&amp; sisi4s::operator*</definition>
        <argsstring>(FockVector&lt; F &gt; &amp;&amp;a, const F s)</argsstring>
        <name>operator*</name>
        <qualifiedname>sisi4s::operator*</qualifiedname>
        <param>
          <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;&amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const F</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Returns the scalar multiple of the <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref> a right-multiplied with the scalar s, where a movable and will be used for the result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" line="518" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" bodystart="518" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1abd5ec42d37f4587f3276558019f71814" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt;</type>
        <definition>FockVector&lt; F &gt; sisi4s::operator*</definition>
        <argsstring>(const F s, const FockVector&lt; F &gt; &amp;a)</argsstring>
        <name>operator*</name>
        <qualifiedname>sisi4s::operator*</qualifiedname>
        <param>
          <type>const F</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Returns the scalar multiple of the <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref> a left-multiplied with the scalar s, where a is not modified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" line="528" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" bodystart="528" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1ada3ae1ddf909196b7f113f00f0a864a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;&amp;</type>
        <definition>FockVector&lt; F &gt; &amp;&amp; sisi4s::operator*</definition>
        <argsstring>(const F s, FockVector&lt; F &gt; &amp;&amp;a)</argsstring>
        <name>operator*</name>
        <qualifiedname>sisi4s::operator*</qualifiedname>
        <param>
          <type>const F</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;&amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Returns the scalar multiple of the <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref> a left-multiplied with the scalar s, where a movable and will be used for the result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" line="539" column="21" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" bodystart="539" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a824dfb7d6773baaa4dfc79467ad83a59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; sisi4s::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const FockVector&lt; F &gt; &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>sisi4s::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref>&lt; F &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Writes the <ref refid="classsisi4s_1_1FockVector" kindref="compound">FockVector</ref> a to the given stream and returns it for further stream operations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" line="549" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/FockVector.hpp" bodystart="549" bodyend="558"/>
        <references refid="classsisi4s_1_1FockVector_1a76a336f18f4fc9a70c6b31406b8d6717" compoundref="FockVector_8hpp" startline="30">sisi4s::FockVector&lt; F &gt;::componentTensors</references>
        <references refid="classsisi4s_1_1FockVector_1aebf4e090f20a7bb83c434396b274c89c" compoundref="FockVector_8hpp" startline="101" endline="103">sisi4s::FockVector&lt; F &gt;::get</references>
        <references refid="classsisi4s_1_1FockVector_1a12f7974afa01def06d0fff6b08c06756" compoundref="FockVector_8hpp" startline="115" endline="117">sisi4s::FockVector&lt; F &gt;::getIndices</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1ab52936dd14e46acf16cadc4a7dbd0e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Method</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename Float</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double sisi4s::integrate</definition>
        <argsstring>(F f, Float a, Float b, int steps, Method m)</argsstring>
        <name>integrate</name>
        <qualifiedname>sisi4s::integrate</qualifiedname>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>steps</declname>
        </param>
        <param>
          <type>Method</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Integration.hpp" line="10" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Integration.hpp" bodystart="10" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a60e4277fc0d188844658dd5264190e59" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>constexpr F</type>
        <definition>constexpr F sisi4s::Pi</definition>
        <argsstring>()</argsstring>
        <name>Pi</name>
        <qualifiedname>sisi4s::Pi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="13" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="13" bodyend="15"/>
        <references refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ad9a58ab20a9d26589d9044a920984a3a" compoundref="AngularMomentum_8hpp" startline="8">am::F</references>
        <referencedby refid="classsisi4s_1_1CoulombVertexDecomposition_1a9bad578c327384b5b48a0c98a907cded" compoundref="CoulombVertexDecomposition_8cxx" startline="312" endline="371">sisi4s::CoulombVertexDecomposition::iterateQuadraticFactor</referencedby>
        <referencedby refid="classsisi4s_1_1CoulombVertexDecomposition_1af8f3367c22f6260e0db4b313c0199594" compoundref="CoulombVertexDecomposition_8cxx" startline="285" endline="299">sisi4s::CoulombVertexDecomposition::normalizePi</referencedby>
        <referencedby refid="classsisi4s_1_1ParticleHoleCoulombVertexDecomposition_1a855080c758691aa6da9c3dc594b19aec" compoundref="ParticleHoleCoulombVertexDecomposition_8cxx" startline="218" endline="234">sisi4s::ParticleHoleCoulombVertexDecomposition::normalizePi</referencedby>
        <referencedby refid="classsisi4s_1_1CoulombVertexDecomposition_1a463569751d49f8acd966ef1f028db483" compoundref="CoulombVertexDecomposition_8cxx" startline="301" endline="310">sisi4s::CoulombVertexDecomposition::realizePi</referencedby>
        <referencedby refid="classsisi4s_1_1ParticleHoleCoulombVertexDecomposition_1afc78716f341f73a6cdeba7659184e338" compoundref="ParticleHoleCoulombVertexDecomposition_8cxx" startline="236" endline="245">sisi4s::ParticleHoleCoulombVertexDecomposition::realizePi</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a9b9e76b0c2b3fdfe2be4324883376fda" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>constexpr F</type>
        <definition>constexpr F sisi4s::Tau</definition>
        <argsstring>()</argsstring>
        <name>Tau</name>
        <qualifiedname>sisi4s::Tau</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="18" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a40947d88c4989cacff153a78af67f686" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>F</type>
        <definition>F sisi4s::sqrt</definition>
        <argsstring>(F const x)</argsstring>
        <name>sqrt</name>
        <qualifiedname>sisi4s::sqrt</qualifiedname>
        <param>
          <type>F const</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="24" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="24" bodyend="26"/>
        <references refid="namespacesisi4s_1a40947d88c4989cacff153a78af67f686" compoundref="MathFunctions_8hpp" startline="24" endline="26">sqrt</references>
        <referencedby refid="classsisi4s_1_1BlacsWorld_1a720328f15e7797f099bb8554720a2164" compoundref="BlacsWorld_8cxx" startline="9" endline="22">sisi4s::BlacsWorld::BlacsWorld</referencedby>
        <referencedby refid="classsisi4s_1_1FiniteSizeCorrection_1a011bf1004b284365e04ac9bafe86618d" compoundref="FiniteSizeCorrection_8cxx" startline="337" endline="466">sisi4s::FiniteSizeCorrection::calculateComplexStructureFactor</referencedby>
        <referencedby refid="classsisi4s_1_1FiniteSizeCorrection_1a40817a0c8ab25b2ab9ac7586a00fc792" compoundref="FiniteSizeCorrection_8cxx" startline="124" endline="334">sisi4s::FiniteSizeCorrection::calculateRealStructureFactor</referencedby>
        <referencedby refid="classsisi4s_1_1FiniteSizeCorrection_1abe853aa5dccd41090fc1d8282937d60a" compoundref="FiniteSizeCorrection_8cxx" startline="528" endline="545">sisi4s::FiniteSizeCorrection::constructFibonacciGrid</referencedby>
        <referencedby refid="classsisi4s_1_1DoublesAmplitudesDecomposition_1a95e0f3d1c64b08842dc5c212f054b6c7" compoundref="DoublesAmplitudesDecomposition_8cxx" startline="48" endline="96">sisi4s::DoublesAmplitudesDecomposition::diagonlizeAmplitudes</referencedby>
        <referencedby refid="classsisi4s_1_1UegVertexGenerator_1afa4445fb2a105da1c171a0c77df8292a" compoundref="UegVertexGenerator_8cxx" startline="25" endline="44">sisi4s::UegVertexGenerator::evalMadelung</referencedby>
        <referencedby refid="classsisi4s_1_1BasisSetExtrapolation_1a3d9834f6a2ed4100e47b32e498914129" compoundref="BasisSetExtrapolation_8cxx" startline="53" endline="265">sisi4s::BasisSetExtrapolation::evaluateQGG</referencedby>
        <referencedby refid="classsisi4s_1_1BasisSetExtrapolation_1a4f49cb830f2873a1edd72cefa95785f1" compoundref="BasisSetExtrapolation_8cxx" startline="335" endline="461">sisi4s::BasisSetExtrapolation::fitF12</referencedby>
        <referencedby refid="namespacesisi4s_1aae36a475bbea733a01982cbf5f741cc1" compoundref="MathFunctions_8hpp" startline="68" endline="76">frobeniusNorm</referencedby>
        <referencedby refid="NuclearRepulsionEnergy_8cxx_1aaceb2c1481a73d85f851e6d8b4a2e9da" compoundref="NuclearRepulsionEnergy_8cxx" startline="15" endline="31">getEnergy</referencedby>
        <referencedby refid="classsisi4s_1_1CcsdPreconditioner_1a885a0ffef1ab5a039a69e40e8e8b1c09" compoundref="CcsdPreconditioner_8cxx" startline="162" endline="318">sisi4s::CcsdPreconditioner&lt; F &gt;::getInitialBasis</referencedby>
        <referencedby refid="classsisi4s_1_1IPCcsdPreconditioner_1a2e97db095cdebec9c83d1b60295605ec" compoundref="CcsdPreconditioner_8cxx" startline="605" endline="711">sisi4s::IPCcsdPreconditioner&lt; F &gt;::getInitialBasis</referencedby>
        <referencedby refid="classsisi4s_1_1EACcsdPreconditioner_1a49913544736063c43e265facdc2cc393" compoundref="CcsdPreconditioner_8cxx" startline="424" endline="530">sisi4s::EACcsdPreconditioner&lt; F &gt;::getInitialBasis</referencedby>
        <referencedby refid="HartreeFockFromGaussian_8cxx_1a07b361d629f995b4df9d6b4724e4d68b" compoundref="HartreeFockFromGaussian_8cxx" startline="69" endline="85">getNuclearRepulsionEnergy</referencedby>
        <referencedby refid="classsisi4s_1_1Vector_1a136ec801253ede3aa5c4b20b16951230" compoundref="Vector_8hpp" startline="127" endline="130">sisi4s::Vector&lt; F, D &gt;::length</referencedby>
        <referencedby refid="classsisi4s_1_1UegVertexGenerator_1a7f2b63e4e37a5f74313403b5a41d5cbf" compoundref="UegVertexGenerator_8cxx" startline="65" endline="261">sisi4s::UegVertexGenerator::run</referencedby>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="149" endline="459">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
        <referencedby refid="namespacesisi4s_1a40947d88c4989cacff153a78af67f686" compoundref="MathFunctions_8hpp" startline="24" endline="26">sqrt</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1ab4577a58307bc686ea6f58bc3d0249d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>F</type>
        <definition>F sisi4s::abs</definition>
        <argsstring>(F const x)</argsstring>
        <name>abs</name>
        <qualifiedname>sisi4s::abs</qualifiedname>
        <param>
          <type>F const</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="29" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="29" bodyend="31"/>
        <references refid="namespacesisi4s_1ab4577a58307bc686ea6f58bc3d0249d3" compoundref="MathFunctions_8hpp" startline="29" endline="31">abs</references>
        <referencedby refid="classsisi4s_1_1PseudoInverseHermitianSvd_1a802882a537b9187871ab0dda73ae4b29" compoundref="PseudoInverseHermitianSvd_8cxx" startline="17" endline="55">sisi4s::PseudoInverseHermitianSvd&lt; F &gt;::PseudoInverseHermitianSvd</referencedby>
        <referencedby refid="namespacesisi4s_1ab4577a58307bc686ea6f58bc3d0249d3" compoundref="MathFunctions_8hpp" startline="29" endline="31">abs</referencedby>
        <referencedby refid="classsisi4s_1_1CcsdPreconditioner_1a8aefba0b3f2b4c128f69d6e5eaf5a1fc" compoundref="CcsdPreconditioner_8cxx" startline="350" endline="391">sisi4s::CcsdPreconditioner&lt; F &gt;::getCorrection</referencedby>
        <referencedby refid="classsisi4s_1_1IPCcsdPreconditioner_1a7a64a258bc792326104e2eef5f69933e" compoundref="CcsdPreconditioner_8cxx" startline="715" endline="752">sisi4s::IPCcsdPreconditioner&lt; F &gt;::getCorrection</referencedby>
        <referencedby refid="classsisi4s_1_1EACcsdPreconditioner_1ab7ce4b1e3a15799962eac9943236debd" compoundref="CcsdPreconditioner_8cxx" startline="534" endline="571">sisi4s::EACcsdPreconditioner&lt; F &gt;::getCorrection</referencedby>
        <referencedby refid="classsisi4s_1_1CcsdPreconditioner_1a885a0ffef1ab5a039a69e40e8e8b1c09" compoundref="CcsdPreconditioner_8cxx" startline="162" endline="318">sisi4s::CcsdPreconditioner&lt; F &gt;::getInitialBasis</referencedby>
        <referencedby refid="classsisi4s_1_1IPCcsdPreconditioner_1a2e97db095cdebec9c83d1b60295605ec" compoundref="CcsdPreconditioner_8cxx" startline="605" endline="711">sisi4s::IPCcsdPreconditioner&lt; F &gt;::getInitialBasis</referencedby>
        <referencedby refid="classsisi4s_1_1EACcsdPreconditioner_1a49913544736063c43e265facdc2cc393" compoundref="CcsdPreconditioner_8cxx" startline="424" endline="530">sisi4s::EACcsdPreconditioner&lt; F &gt;::getInitialBasis</referencedby>
        <referencedby refid="classsisi4s_1_1Inter1D_1a09df214d5aab2db417ef87280fe54200" compoundref="Interpolation_8hpp" startline="65" endline="92">sisi4s::Inter1D&lt; F &gt;::getValue</referencedby>
        <referencedby refid="classsisi4s_1_1FiniteSizeCorrection_1a1263e86e1cfbd0547e5198c46c6eac51" compoundref="FiniteSizeCorrection_8cxx" startline="547" endline="907">sisi4s::FiniteSizeCorrection::interpolation3D</referencedby>
        <referencedby refid="classsisi4s_1_1FiniteSizeCorrection_1a5debe508e1f3f2713edc13d922058da1" compoundref="FiniteSizeCorrection_8cxx" startline="917" endline="942">sisi4s::FiniteSizeCorrection::IsInSmallBZ</referencedby>
        <referencedby refid="classsisi4s_1_1IterativePseudoInverse_1a96558b1a79ac7e0bcdeb64127855241e" compoundref="IterativePseudoInverse_8cxx" startline="65" endline="104">sisi4s::IterativePseudoInverse&lt; F &gt;::iterate</referencedby>
        <referencedby refid="classsisi4s_1_1IterativePseudoInverse_1a206b9b605d859aec9f8abbc15e919ed1" compoundref="IterativePseudoInverse_8cxx" startline="107" endline="135">sisi4s::IterativePseudoInverse&lt; F &gt;::iterateQuadratically</referencedby>
        <referencedby refid="classsisi4s_1_1LapackGeneralEigenSystem_3_01complex_01_4_1_1EigenValueComparator_1ae379ae5eb8316d477066172dfcdee9b7" compoundref="LapackGeneralEigenSystem_8hpp" startline="261" endline="279">sisi4s::LapackGeneralEigenSystem&lt; complex &gt;::EigenValueComparator::operator()</referencedby>
        <referencedby refid="classsisi4s_1_1LapackGeneralEigenSystem_3_01double_01_4_1_1EigenValueComparator_1aa0492d44d415b014e40eb7ed0110f248" compoundref="LapackGeneralEigenSystem_8hpp" startline="24" endline="33">sisi4s::LapackGeneralEigenSystem&lt; double &gt;::EigenValueComparator::operator()</referencedby>
        <referencedby refid="classEomDiagonalValueComparator_1afea547026c2f888a54dca308ccaae0bf" compoundref="CcsdPreconditioner_8cxx" startline="63" endline="81">EomDiagonalValueComparator&lt; F &gt;::operator()</referencedby>
        <referencedby refid="namespaceCLI_1_1detail_1a569135c6e266940a5f914698b9deef66" compoundref="CLI11_8hpp" startline="3255" endline="3261">CLI::detail::overflowCheck</referencedby>
        <referencedby refid="classsisi4s_1_1ClusterSinglesDoublesAlgorithm_1a69e386caf7acdf30c11b476d522d7a9d" compoundref="ClusterSinglesDoublesAlgorithm_8cxx" startline="41" endline="140">sisi4s::ClusterSinglesDoublesAlgorithm::run</referencedby>
        <referencedby refid="classsisi4s_1_1ClusterSinglesDoublesTriplesAlgorithm_1aa86fb955293c874f806a98263ab39213" compoundref="ClusterSinglesDoublesTriplesAlgorithm_8cxx" startline="40" endline="107">sisi4s::ClusterSinglesDoublesTriplesAlgorithm::run</referencedby>
        <referencedby refid="classsisi4s_1_1UegVertexGenerator_1a7f2b63e4e37a5f74313403b5a41d5cbf" compoundref="UegVertexGenerator_8cxx" startline="65" endline="261">sisi4s::UegVertexGenerator::run</referencedby>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="149" endline="459">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
        <referencedby refid="classsisi4s_1_1DoublesAmplitudesDecomposition_1aaffeb4b10fc0077f103ac5861dd495e2" compoundref="DoublesAmplitudesDecomposition_8cxx" startline="98" endline="171">sisi4s::DoublesAmplitudesDecomposition::sliceLargestEigenValues</referencedby>
        <referencedby refid="classsisi4s_1_1IterativePseudoInverse_1a1998a3534a76b40320d273d324b2470e" compoundref="IterativePseudoInverse_8cxx" startline="164" endline="197">sisi4s::IterativePseudoInverse&lt; F &gt;::test</referencedby>
        <referencedby refid="classCLI_1_1Option_1a81d7f38453c88d417fb5333b5ef39959" compoundref="CLI11_8hpp" startline="5011" endline="5033">CLI::Option::type_size</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1abc3ea35f1434b9c5021b9195449d1f9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>F</type>
        <definition>F sisi4s::conj</definition>
        <argsstring>(F const x)</argsstring>
        <name>conj</name>
        <qualifiedname>sisi4s::conj</qualifiedname>
        <param>
          <type>F const</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="34" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="34" bodyend="36"/>
        <references refid="namespacesisi4s_1aa8b450b30cd5b37aaf1fe14ba54b6d86" compoundref="MathFunctions_8hpp" startline="39" endline="41">conj</references>
        <referencedby refid="classsisi4s_1_1LapackGeneralEigenSystem_3_01complex_01_4_1ad33b6438b8401c3f6c72cad5230ad801" compoundref="LapackGeneralEigenSystem_8hpp" startline="244" endline="257">sisi4s::LapackGeneralEigenSystem&lt; complex &gt;::biorthogonalError</referencedby>
        <referencedby refid="namespacesisi4s_1a900cd067a0e92de9ff85372102f9c596" compoundref="ComplexTensor_8cxx" startline="130" endline="141">conjugate</referencedby>
        <referencedby refid="namespacesisi4s_1a92d239b67d4a13717f4e7f93ad9591f2" compoundref="MathFunctions_8hpp" startline="45" endline="47">dot</referencedby>
        <referencedby refid="classsisi4s_1_1LapackGeneralEigenSystem_3_01complex_01_4_1a6ff1cce7cf64d7659d0804317f5b62bf" compoundref="LapackGeneralEigenSystem_8hpp" startline="229" endline="242">sisi4s::LapackGeneralEigenSystem&lt; complex &gt;::leftEigenError</referencedby>
        <referencedby refid="NaturalTransitionOrbitalsFromRhoAI_8cxx_1a17a4374cc872225dc976a9c910f9e694" compoundref="NaturalTransitionOrbitalsFromRhoAI_8cxx" startline="42" endline="54">logOverlap</referencedby>
        <referencedby refid="NaturalTransitionOrbitalsFromRhoAI_8cxx_1a66116addded68ea64321206849fd47f4" compoundref="NaturalTransitionOrbitalsFromRhoAI_8cxx" startline="29" endline="39">logVectorNorms</referencedby>
        <referencedby refid="namespacesisi4s_1a9fa5b3be804515448387f0d0a362aee4" compoundref="MathFunctions_8hpp" startline="53" endline="55">realDot</referencedby>
        <referencedby refid="classsisi4s_1_1LapackGeneralEigenSystem_3_01complex_01_4_1ac6d8679f777fa5ce0c872076f7b26b8a" compoundref="LapackGeneralEigenSystem_8hpp" startline="215" endline="228">sisi4s::LapackGeneralEigenSystem&lt; complex &gt;::rightEigenError</referencedby>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="149" endline="459">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1aa8b450b30cd5b37aaf1fe14ba54b6d86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>double</type>
        <definition>double sisi4s::conj</definition>
        <argsstring>(double const x)</argsstring>
        <name>conj</name>
        <qualifiedname>sisi4s::conj</qualifiedname>
        <param>
          <type>double const</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="39" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="39" bodyend="41"/>
        <referencedby refid="namespacesisi4s_1abc3ea35f1434b9c5021b9195449d1f9b" compoundref="MathFunctions_8hpp" startline="34" endline="36">conj</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a92d239b67d4a13717f4e7f93ad9591f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>F</type>
        <definition>F sisi4s::dot</definition>
        <argsstring>(F const x, F const y)</argsstring>
        <name>dot</name>
        <qualifiedname>sisi4s::dot</qualifiedname>
        <param>
          <type>F const</type>
          <declname>x</declname>
        </param>
        <param>
          <type>F const</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="45" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="45" bodyend="47"/>
        <references refid="namespacesisi4s_1abc3ea35f1434b9c5021b9195449d1f9b" compoundref="MathFunctions_8hpp" startline="34" endline="36">conj</references>
        <referencedby refid="classsisi4s_1_1DiisMixer_1aeb57aba18a31947900185a6ca031277a" compoundref="DiisMixer_8cxx" startline="92" endline="164">sisi4s::DiisMixer&lt; F &gt;::append</referencedby>
        <referencedby refid="classsisi4s_1_1Vector_1a8d8a0dd7fa816afad751865285eec6be" compoundref="Vector_8hpp" startline="105" endline="111">sisi4s::Vector&lt; F, D &gt;::dot</referencedby>
        <referencedby refid="classsisi4s_1_1FiniteSizeCorrection_1a1263e86e1cfbd0547e5198c46c6eac51" compoundref="FiniteSizeCorrection_8cxx" startline="547" endline="907">sisi4s::FiniteSizeCorrection::interpolation3D</referencedby>
        <referencedby refid="classsisi4s_1_1FiniteSizeCorrection_1a5debe508e1f3f2713edc13d922058da1" compoundref="FiniteSizeCorrection_8cxx" startline="917" endline="942">sisi4s::FiniteSizeCorrection::IsInSmallBZ</referencedby>
        <referencedby refid="classsisi4s_1_1EigenSystemDavidsonMono_1ae374662234b193df4dbfadedbce69beb" compoundref="EigenSystemDavidson_8hpp" startline="149" endline="459">sisi4s::EigenSystemDavidsonMono&lt; H, P, V &gt;::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a9fa5b3be804515448387f0d0a362aee4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>F</type>
        <definition>F sisi4s::realDot</definition>
        <argsstring>(F const x, F const y)</argsstring>
        <name>realDot</name>
        <qualifiedname>sisi4s::realDot</qualifiedname>
        <param>
          <type>F const</type>
          <declname>x</declname>
        </param>
        <param>
          <type>F const</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Calculates only the real part of x*conj(y). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="53" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="53" bodyend="55"/>
        <references refid="namespacesisi4s_1abc3ea35f1434b9c5021b9195449d1f9b" compoundref="MathFunctions_8hpp" startline="34" endline="36">conj</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a4669111dd0ce1279c5e4c2ef1d764afb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>F</type>
        <definition>F sisi4s::divide</definition>
        <argsstring>(F const x, F const y)</argsstring>
        <name>divide</name>
        <qualifiedname>sisi4s::divide</qualifiedname>
        <param>
          <type>F const</type>
          <declname>x</declname>
        </param>
        <param>
          <type>F const</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="58" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a656f9002a915dfd1122f159f96db10b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>F</type>
        <definition>F sisi4s::multiply</definition>
        <argsstring>(F const x, F const y)</argsstring>
        <name>multiply</name>
        <qualifiedname>sisi4s::multiply</qualifiedname>
        <param>
          <type>F const</type>
          <declname>x</declname>
        </param>
        <param>
          <type>F const</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="63" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1aae36a475bbea733a01982cbf5f741cc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double sisi4s::frobeniusNorm</definition>
        <argsstring>(Tensor&lt; F &gt; &amp;t)</argsstring>
        <name>frobeniusNorm</name>
        <qualifiedname>sisi4s::frobeniusNorm</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="68" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="68" bodyend="76"/>
        <references refid="namespacesisi4s_1a40947d88c4989cacff153a78af67f686" compoundref="MathFunctions_8hpp" startline="24" endline="26">sqrt</references>
        <referencedby refid="classsisi4s_1_1ParticleHoleCoulombVertexDecomposition_1a89e580fcc9544ae668ccda0d37256f35" compoundref="ParticleHoleCoulombVertexDecomposition_8cxx" startline="161" endline="190">sisi4s::ParticleHoleCoulombVertexDecomposition::fit</referencedby>
        <referencedby refid="namespacesisi4s_1a8ca8aaa549414abe940b2f7ecc1f549d" compoundref="RegularizedAlternatingLeastSquares_8cxx" startline="61" endline="103">fitRegularizedAlternatingLeastSquaresFactor</referencedby>
        <referencedby refid="classsisi4s_1_1CoulombVertexDecomposition_1a6b726a7a86ef6edab94bbd836fd1f246" compoundref="CoulombVertexDecomposition_8cxx" startline="392" endline="400">sisi4s::CoulombVertexDecomposition::getDelta</referencedby>
        <referencedby refid="classsisi4s_1_1ParticleHoleCoulombVertexDecomposition_1a855080c758691aa6da9c3dc594b19aec" compoundref="ParticleHoleCoulombVertexDecomposition_8cxx" startline="218" endline="234">sisi4s::ParticleHoleCoulombVertexDecomposition::normalizePi</referencedby>
        <referencedby refid="classsisi4s_1_1ComplexTensorNorm_1a391ff0c1f973a4c3a3591d3bcd2a10c7" compoundref="ComplexTensorNorm_8cxx" startline="23" endline="28">sisi4s::ComplexTensorNorm::run</referencedby>
        <referencedby refid="classsisi4s_1_1TensorNorm_1af5498afcb9dbcadb2ed71069cdc3f106" compoundref="TensorNorm_8cxx" startline="22" endline="27">sisi4s::TensorNorm::run</referencedby>
        <referencedby refid="classsisi4s_1_1DoublesAmplitudesDecomposition_1aaffeb4b10fc0077f103ac5861dd495e2" compoundref="DoublesAmplitudesDecomposition_8cxx" startline="98" endline="171">sisi4s::DoublesAmplitudesDecomposition::sliceLargestEigenValues</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a1e9d78005344619227766a9c62020617" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sisi4s::symmetrize</definition>
        <argsstring>(std::string indices, std::string permuted, Tensor&lt; F &gt; &amp;t, F prefactor=1)</argsstring>
        <name>symmetrize</name>
        <qualifiedname>sisi4s::symmetrize</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>permuted</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>F</type>
          <declname>prefactor</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Apply a permutation operator and antisymmetrize accordingly, e.g. antiSymmetrize(X, &quot;abcd&quot;, &quot;abdc&quot;) is replaced by -1 X[&quot;abcd&quot;] = X[&quot;abcd&quot;] + sign(abcd -&gt; abdc) X[&quot;abdc&quot;]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="85" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a064f1996a620381ea305851bf71b734b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sisi4s::checkAntisymmetry</definition>
        <argsstring>(Tensor&lt; F &gt; &amp;t)</argsstring>
        <name>checkAntisymmetry</name>
        <qualifiedname>sisi4s::checkAntisymmetry</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" line="90" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/MathFunctions.hpp" bodystart="90" bodyend="104"/>
        <references refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ad9a58ab20a9d26589d9044a920984a3a" compoundref="AngularMomentum_8hpp" startline="8">am::F</references>
        <references refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" compoundref="Log_8hpp" startline="113">LOG</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1afd3719c004eaad74f542dc971e045475" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; sisi4s::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const Map&lt; N &gt; &amp;f)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>sisi4s::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1Map" kindref="compound">Map</ref>&lt; N &gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" line="36" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a7824a5f890f5138ceced77a3d8114958" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1Permutation" kindref="compound">Permutation</ref>&lt; N &gt;</type>
        <definition>Permutation&lt; N &gt; sisi4s::operator*</definition>
        <argsstring>(const Permutation&lt; N &gt; &amp;, const Permutation&lt; N &gt; &amp;)</argsstring>
        <name>operator*</name>
        <qualifiedname>sisi4s::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classsisi4s_1_1Permutation" kindref="compound">Permutation</ref>&lt; N &gt; &amp;</type>
          <defname>sigma</defname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1Permutation" kindref="compound">Permutation</ref>&lt; N &gt; &amp;</type>
          <defname>tau</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" line="95" column="22" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" bodystart="95" bodyend="101" declfile="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" declline="48" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a351c85c35185894c78151d022c3747ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1Permutation" kindref="compound">Permutation</ref>&lt; N &gt;</type>
        <definition>Permutation&lt; N &gt; sisi4s::operator/</definition>
        <argsstring>(const Permutation&lt; N &gt; &amp;, const Permutation&lt; N &gt; &amp;)</argsstring>
        <name>operator/</name>
        <qualifiedname>sisi4s::operator/</qualifiedname>
        <param>
          <type>const <ref refid="classsisi4s_1_1Permutation" kindref="compound">Permutation</ref>&lt; N &gt; &amp;</type>
          <defname>sigma</defname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1Permutation" kindref="compound">Permutation</ref>&lt; N &gt; &amp;</type>
          <defname>tau</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" line="121" column="22" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" bodystart="121" bodyend="127" declfile="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" declline="50" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a737b3b1979611e75b12380797140b1d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1Permutation" kindref="compound">Permutation</ref>&lt; N &gt;</type>
        <definition>Permutation&lt; N &gt; sisi4s::operator/</definition>
        <argsstring>(const int, const Permutation&lt; N &gt; &amp;)</argsstring>
        <name>operator/</name>
        <qualifiedname>sisi4s::operator/</qualifiedname>
        <param>
          <type>const int</type>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1Permutation" kindref="compound">Permutation</ref>&lt; N &gt; &amp;</type>
          <defname>tau</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" line="113" column="22" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" bodystart="113" bodyend="117" declfile="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" declline="52" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1af0d408589ec6ad3a0635dea02dffec54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1Map" kindref="compound">Map</ref>&lt; N &gt;</type>
        <definition>Map&lt; N &gt; sisi4s::operator*</definition>
        <argsstring>(const Map&lt; N &gt; &amp;f, const Permutation&lt; N &gt; &amp;tau)</argsstring>
        <name>operator*</name>
        <qualifiedname>sisi4s::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classsisi4s_1_1Map" kindref="compound">Map</ref>&lt; N &gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1Permutation" kindref="compound">Permutation</ref>&lt; N &gt; &amp;</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" line="105" column="14" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Permutation.hpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a2e93670459c4d5d087e89f55952bbe62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Distribution</type>
          </param>
          <param>
            <type>typename RandomEngine</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sisi4s::setRandom</definition>
        <argsstring>(double &amp;value, Distribution &amp;distribution, RandomEngine &amp;randomEngine)</argsstring>
        <name>setRandom</name>
        <qualifiedname>sisi4s::setRandom</qualifiedname>
        <param>
          <type>double &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>Distribution &amp;</type>
          <declname>distribution</declname>
        </param>
        <param>
          <type>RandomEngine &amp;</type>
          <declname>randomEngine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/RandomTensor.hpp" line="14" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/RandomTensor.hpp" bodystart="14" bodyend="23"/>
        <referencedby refid="namespacesisi4s_1adb5622106d23e3d14c736c4793512e5c" compoundref="RandomTensor_8hpp" startline="53" endline="64">setRandomTensor</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a2261732db2670a035671ccf20c24fde5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Distribution</type>
          </param>
          <param>
            <type>typename RandomEngine</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sisi4s::setRandom</definition>
        <argsstring>(complex &amp;value, Distribution &amp;distribution, RandomEngine &amp;randomEngine)</argsstring>
        <name>setRandom</name>
        <qualifiedname>sisi4s::setRandom</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1ad0bccf74d238a6fc69868a9439dd9e7f" kindref="member">complex</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>Distribution &amp;</type>
          <declname>distribution</declname>
        </param>
        <param>
          <type>RandomEngine &amp;</type>
          <declname>randomEngine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/RandomTensor.hpp" line="28" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/RandomTensor.hpp" bodystart="28" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1adb5622106d23e3d14c736c4793512e5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename Distribution</type>
          </param>
          <param>
            <type>typename RandomEngine</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sisi4s::setRandomTensor</definition>
        <argsstring>(Tensor&lt; F &gt; &amp;t, Distribution &amp;distribution, RandomEngine &amp;randomEngine)</argsstring>
        <name>setRandomTensor</name>
        <qualifiedname>sisi4s::setRandomTensor</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Distribution &amp;</type>
          <declname>distribution</declname>
        </param>
        <param>
          <type>RandomEngine &amp;</type>
          <declname>randomEngine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/RandomTensor.hpp" line="53" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/RandomTensor.hpp" bodystart="53" bodyend="64"/>
        <references refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408ad9a58ab20a9d26589d9044a920984a3a" compoundref="AngularMomentum_8hpp" startline="8">am::F</references>
        <references refid="namespacesisi4s_1a2e93670459c4d5d087e89f55952bbe62" compoundref="RandomTensor_8hpp" startline="14" endline="23">setRandom</references>
        <referencedby refid="classsisi4s_1_1CcsdPreconditioner_1a885a0ffef1ab5a039a69e40e8e8b1c09" compoundref="CcsdPreconditioner_8cxx" startline="162" endline="318">sisi4s::CcsdPreconditioner&lt; F &gt;::getInitialBasis</referencedby>
        <referencedby refid="classsisi4s_1_1CoulombVertexDecomposition_1accb34639975cd2eed1188f32d3f239ff" compoundref="CoulombVertexDecomposition_8cxx" startline="40" endline="145">sisi4s::CoulombVertexDecomposition::run</referencedby>
        <referencedby refid="classsisi4s_1_1GenerateRandomComplexMatrix_1a336f654cde6a8de4a1ea6d21e2e2f792" compoundref="GenerateRandomComplexMatrix_8cxx" startline="22" endline="34">sisi4s::GenerateRandomComplexMatrix::run</referencedby>
        <referencedby refid="classsisi4s_1_1GenerateRandomMatrix_1ab9d29a0b8d1df8d3d5610ff71e1096d3" compoundref="GenerateRandomMatrix_8cxx" startline="23" endline="39">sisi4s::GenerateRandomMatrix::run</referencedby>
        <referencedby refid="classsisi4s_1_1GenerateRandomTensor_1a61e87f5bb5703da14b559f7ce43f68e2" compoundref="GenerateRandomTensor_8cxx" startline="22" endline="33">sisi4s::GenerateRandomTensor::run</referencedby>
        <referencedby refid="classsisi4s_1_1ParticleHoleCoulombVertexDecomposition_1a14cd82062611a0e443aff732ae0db121" compoundref="ParticleHoleCoulombVertexDecomposition_8cxx" startline="30" endline="110">sisi4s::ParticleHoleCoulombVertexDecomposition::run</referencedby>
        <referencedby refid="classsisi4s_1_1IterativePseudoInverse_1a1998a3534a76b40320d273d324b2470e" compoundref="IterativePseudoInverse_8cxx" startline="164" endline="197">sisi4s::IterativePseudoInverse&lt; F &gt;::test</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a7aeaa0a35be34eeeb8537d428a75e97d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sisi4s::fitAlternatingLeastSquaresFactor</definition>
        <argsstring>(Tensor&lt; F &gt; &amp;T, char const *indicesT, Tensor&lt; F &gt; &amp;B, char const idxB, Tensor&lt; F &gt; &amp;C, char const idxC, Tensor&lt; F &gt; &amp;A, char const idxA)</argsstring>
        <name>fitAlternatingLeastSquaresFactor</name>
        <qualifiedname>sisi4s::fitAlternatingLeastSquaresFactor</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>T</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indicesT</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxB</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxC</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/RegularizedAlternatingLeastSquares.hpp" line="57" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/RegularizedAlternatingLeastSquares.cxx" bodystart="15" bodyend="43" declfile="/home/runner/work/sisi4s/sisi4s/src/math/RegularizedAlternatingLeastSquares.hpp" declline="57" declcolumn="8"/>
        <references refid="namespacesisi4s_1ab14ed3164e19d771549f3af9f21a00d8" compoundref="CanonicalPolyadicDecomposition_8cxx" startline="118" endline="170">contractWithCanonicalPolyadicDecompositionTensors</references>
        <references refid="classsisi4s_1_1PseudoInverseSvd_1a2533006daf67fb34b871189a4e450a0f" compoundref="PseudoInverseSvd_8cxx" startline="63" endline="65">sisi4s::PseudoInverseSvd&lt; F &gt;::get</references>
        <references refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" compoundref="Log_8hpp" startline="113">LOG</references>
        <referencedby refid="classsisi4s_1_1CoulombVertexDecomposition_1a9bad578c327384b5b48a0c98a907cded" compoundref="CoulombVertexDecomposition_8cxx" startline="312" endline="371">sisi4s::CoulombVertexDecomposition::iterateQuadraticFactor</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a8ca8aaa549414abe940b2f7ecc1f549d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sisi4s::fitRegularizedAlternatingLeastSquaresFactor</definition>
        <argsstring>(Tensor&lt; F &gt; &amp;T, char const *indicesT, Tensor&lt; F &gt; &amp;B, char const idxB, Tensor&lt; F &gt; &amp;C, char const idxC, Tensor&lt; F &gt; &amp;A, char const idxA, AlternatingLeastSquaresRegularizationEstimator *regularizationEstimatorA)</argsstring>
        <name>fitRegularizedAlternatingLeastSquaresFactor</name>
        <qualifiedname>sisi4s::fitRegularizedAlternatingLeastSquaresFactor</qualifiedname>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>T</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indicesT</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxB</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxC</declname>
        </param>
        <param>
          <type><ref refid="namespacesisi4s_1a1695e67f99e3219626943923a40886a1" kindref="member">Tensor</ref>&lt; F &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxA</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1AlternatingLeastSquaresRegularizationEstimator" kindref="compound">AlternatingLeastSquaresRegularizationEstimator</ref> *</type>
          <declname>regularizationEstimatorA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/RegularizedAlternatingLeastSquares.hpp" line="65" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/RegularizedAlternatingLeastSquares.cxx" bodystart="61" bodyend="103" declfile="/home/runner/work/sisi4s/sisi4s/src/math/RegularizedAlternatingLeastSquares.hpp" declline="65" declcolumn="8"/>
        <references refid="namespacesisi4s_1ab14ed3164e19d771549f3af9f21a00d8" compoundref="CanonicalPolyadicDecomposition_8cxx" startline="118" endline="170">contractWithCanonicalPolyadicDecompositionTensors</references>
        <references refid="namespacesisi4s_1aae36a475bbea733a01982cbf5f741cc1" compoundref="MathFunctions_8hpp" startline="68" endline="76">frobeniusNorm</references>
        <references refid="classsisi4s_1_1PseudoInverseSvd_1a2533006daf67fb34b871189a4e450a0f" compoundref="PseudoInverseSvd_8cxx" startline="63" endline="65">sisi4s::PseudoInverseSvd&lt; F &gt;::get</references>
        <references refid="classsisi4s_1_1AlternatingLeastSquaresRegularizationEstimator_1a4de4c9986a0c2c2fa70c8a0f43f1c81d" compoundref="RegularizedAlternatingLeastSquares_8hpp" startline="28" endline="30">sisi4s::AlternatingLeastSquaresRegularizationEstimator::getLambda</references>
        <references refid="classsisi4s_1_1AlternatingLeastSquaresRegularizationEstimator_1ae14a008ede1f4ed000518ed1035550ce" compoundref="RegularizedAlternatingLeastSquares_8hpp" startline="25" endline="27">sisi4s::AlternatingLeastSquaresRegularizationEstimator::getSwampingThreshold</references>
        <references refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" compoundref="Log_8hpp" startline="113">LOG</references>
        <references refid="classsisi4s_1_1AlternatingLeastSquaresRegularizationEstimator_1a503f0a701b0bdef3377c47bb5dae6456" compoundref="RegularizedAlternatingLeastSquares_8hpp" startline="31" endline="37">sisi4s::AlternatingLeastSquaresRegularizationEstimator::update</references>
        <referencedby refid="classsisi4s_1_1CoulombVertexDecomposition_1acd985462c04c09ccd03c9b85aeff652a" compoundref="CoulombVertexDecomposition_8cxx" startline="234" endline="260">sisi4s::CoulombVertexDecomposition::fit</referencedby>
        <referencedby refid="classsisi4s_1_1ParticleHoleCoulombVertexDecomposition_1a89e580fcc9544ae668ccda0d37256f35" compoundref="ParticleHoleCoulombVertexDecomposition_8cxx" startline="161" endline="190">sisi4s::ParticleHoleCoulombVertexDecomposition::fit</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a7e043fcaaf8e99a86eb9920cf43cc228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sisi4s::dryFitRegularizedAlternatingLeastSquaresFactor</definition>
        <argsstring>(DryTensor&lt; F &gt; &amp;T, char const *indicesT, DryTensor&lt; F &gt; &amp;B, char const idxB, DryTensor&lt; F &gt; &amp;C, char const idxC, DryTensor&lt; F &gt; &amp;A, char const idxA)</argsstring>
        <name>dryFitRegularizedAlternatingLeastSquaresFactor</name>
        <qualifiedname>sisi4s::dryFitRegularizedAlternatingLeastSquaresFactor</qualifiedname>
        <param>
          <type><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor</ref>&lt; F &gt; &amp;</type>
          <declname>T</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>indicesT</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor</ref>&lt; F &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxB</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor</ref>&lt; F &gt; &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxC</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1DryTensor" kindref="compound">DryTensor</ref>&lt; F &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>idxA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/RegularizedAlternatingLeastSquares.hpp" line="74" column="8" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/RegularizedAlternatingLeastSquares.cxx" bodystart="123" bodyend="143" declfile="/home/runner/work/sisi4s/sisi4s/src/math/RegularizedAlternatingLeastSquares.hpp" declline="74" declcolumn="8"/>
        <references refid="namespacesisi4s_1a3c57f2c3b6b413ec8c8cbac80a1bbaca" compoundref="CanonicalPolyadicDecomposition_8cxx" startline="190" endline="226">dryContractWithCanonicalPolyadicDecompositionTensors</references>
        <references refid="classsisi4s_1_1DryPseudoInverseSvd_1afe11a03ae59bab6dc745c070a6cc9569" compoundref="PseudoInverseSvd_8cxx" startline="92" endline="94">sisi4s::DryPseudoInverseSvd&lt; F &gt;::get</references>
        <references refid="classsisi4s_1_1DryTensor_1a6f3b537c168473549d60e5af723a4751" compoundref="DryTensor_8hpp" startline="92">sisi4s::DryTensor&lt; F &gt;::lens</references>
        <references refid="Log_8hpp_1a3577749fb48d57a158b8ac1a0b3ab57e" compoundref="Log_8hpp" startline="113">LOG</references>
        <referencedby refid="classsisi4s_1_1ParticleHoleCoulombVertexDecomposition_1a1d7aed53263c884eccb9c64c0cfcfd0a" compoundref="ParticleHoleCoulombVertexDecomposition_8cxx" startline="192" endline="215">sisi4s::ParticleHoleCoulombVertexDecomposition::dryFit</referencedby>
        <referencedby refid="classsisi4s_1_1CoulombVertexDecomposition_1ada47c641a50e19ac728504e718bac626" compoundref="CoulombVertexDecomposition_8cxx" startline="262" endline="283">sisi4s::CoulombVertexDecomposition::dryFit</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1ad3b5418af64290ecb2464ece549aa176" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
            <defval>3</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1Vector" kindref="compound">Vector</ref>&lt; F, D &gt;</type>
        <definition>Vector&lt; F, D &gt; sisi4s::operator*</definition>
        <argsstring>(const F f, const Vector&lt; F, D &gt; &amp;v)</argsstring>
        <name>operator*</name>
        <qualifiedname>sisi4s::operator*</qualifiedname>
        <param>
          <type>const F</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1Vector" kindref="compound">Vector</ref>&lt; F, D &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Vector.hpp" line="168" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Vector.hpp" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a8e3e212c8ea97d5daf20fa653fb1d5d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
            <defval>3</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1Vector" kindref="compound">Vector</ref>&lt; F, D &gt; &amp;&amp;</type>
        <definition>Vector&lt; F, D &gt; &amp;&amp; sisi4s::operator*</definition>
        <argsstring>(const F f, Vector&lt; F, D &gt; &amp;&amp;v)</argsstring>
        <name>operator*</name>
        <qualifiedname>sisi4s::operator*</qualifiedname>
        <param>
          <type>const F</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1Vector" kindref="compound">Vector</ref>&lt; F, D &gt; &amp;&amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Vector.hpp" line="173" column="17" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Vector.hpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a043634fcbcc26b88f92f8693a5dedb22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>double</defval>
          </param>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
            <defval>3</defval>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; sisi4s::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, sisi4s::Vector&lt; F, D &gt; const &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>sisi4s::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1Vector" kindref="compound">sisi4s::Vector</ref>&lt; F, D &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/math/Vector.hpp" line="179" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/math/Vector.hpp" bodystart="179" bodyend="185"/>
        <references refid="classsisi4s_1_1Vector_1a38a4c1a5874413fef7eea4f50ac5a3de" compoundref="Vector_8hpp" startline="164">sisi4s::Vector&lt; F, D &gt;::coordinate</references>
        <references refid="namespaceam_1a28c180222fe17a6f2cec62efac96b408a63b52edf34a3f352a74a7e8ccc95750d" compoundref="AngularMomentum_8hpp" startline="8">am::D</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a750057c17f439eace42ddea0b53206d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename MixerType</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; <ref refid="classsisi4s_1_1Mixer" kindref="compound">Mixer</ref>&lt; F &gt; &gt;</type>
        <definition>std::shared_ptr&lt; Mixer&lt; F &gt; &gt; sisi4s::createMixer</definition>
        <argsstring>(Algorithm *algorithm)</argsstring>
        <name>createMixer</name>
        <qualifiedname>sisi4s::createMixer</qualifiedname>
        <param>
          <type><ref refid="classsisi4s_1_1Algorithm" kindref="compound">Algorithm</ref> *</type>
          <declname>algorithm</declname>
        </param>
        <briefdescription>
<para>template function creating an instance of the given class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/mixers/Mixer.hpp" line="107" column="19" bodyfile="/home/runner/work/sisi4s/sisi4s/src/mixers/Mixer.hpp" bodystart="107" bodyend="109"/>
        <references refid="SharedPointer_8hpp_1a106f61c342cfd013eb570c37328070ae" compoundref="SharedPointer_8hpp" startline="11">NEW</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a23086047930a61869e747cae447dfe65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>A</type>
        <definition>A sisi4s::permuteIndices</definition>
        <argsstring>(const A &amp;a, size_t i, size_t j)</argsstring>
        <name>permuteIndices</name>
        <qualifiedname>sisi4s::permuteIndices</qualifiedname>
        <param>
          <type>const A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" line="11" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" bodystart="11" bodyend="13"/>
        <referencedby refid="structIntegralParser_1ab75cbe9ea6d2495a9bc3675e73e90d2a" compoundref="FcidumpReader_8cxx" startline="82" endline="118">IntegralParser::IntegralParser</referencedby>
        <referencedby refid="namespacesisi4s_1af13987c51f965d40686aa1e90bfb1ae6" compoundref="Integrals_8hpp" startline="36" endline="36">downTr</referencedby>
        <referencedby refid="namespacesisi4s_1aa2084d9ca7be260b06a38f5ecb7944ed" compoundref="Integrals_8hpp" startline="23" endline="23">hSym</referencedby>
        <referencedby refid="structIntegralParser_1ab63ba0ca24350293941b29288d5f0864" compoundref="FcidumpReader_8cxx" startline="120" endline="171">IntegralParser::match</referencedby>
        <referencedby refid="namespacesisi4s_1ac001193dbf37e00b3e13c84c73cba7a5" compoundref="Integrals_8hpp" startline="32" endline="32">upTr</referencedby>
        <referencedby refid="namespacesisi4s_1a04f5b6c5c05cef2378df065b900bbf36" compoundref="Integrals_8hpp" startline="28" endline="28">vlSym</referencedby>
        <referencedby refid="namespacesisi4s_1a9470205752d79fe671dd8fa4e07003ae" compoundref="Integrals_8hpp" startline="18" endline="18">vSym</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a9470205752d79fe671dd8fa4e07003ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>A</type>
        <definition>A sisi4s::vSym</definition>
        <argsstring>(const A &amp;a)</argsstring>
        <name>vSym</name>
        <qualifiedname>sisi4s::vSym</qualifiedname>
        <param>
          <type>const A &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" line="18" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" bodystart="18" bodyend="18"/>
        <references refid="namespacesisi4s_1a23086047930a61869e747cae447dfe65" compoundref="Integrals_8hpp" startline="11" endline="13">permuteIndices</references>
        <referencedby refid="structsisi4s_1_1IntegralInfo_1a243d2bc78b8a39c37eef509f0ca7565a" compoundref="Integrals_8hpp" startline="48" endline="68">sisi4s::IntegralInfo::getAntisymmetrizers</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1aa2084d9ca7be260b06a38f5ecb7944ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>A</type>
        <definition>A sisi4s::hSym</definition>
        <argsstring>(const A &amp;a)</argsstring>
        <name>hSym</name>
        <qualifiedname>sisi4s::hSym</qualifiedname>
        <param>
          <type>const A &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" line="23" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" bodystart="23" bodyend="23"/>
        <references refid="namespacesisi4s_1a23086047930a61869e747cae447dfe65" compoundref="Integrals_8hpp" startline="11" endline="13">permuteIndices</references>
        <referencedby refid="structsisi4s_1_1IntegralInfo_1a243d2bc78b8a39c37eef509f0ca7565a" compoundref="Integrals_8hpp" startline="48" endline="68">sisi4s::IntegralInfo::getAntisymmetrizers</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a04f5b6c5c05cef2378df065b900bbf36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>A</type>
        <definition>A sisi4s::vlSym</definition>
        <argsstring>(const A &amp;a)</argsstring>
        <name>vlSym</name>
        <qualifiedname>sisi4s::vlSym</qualifiedname>
        <param>
          <type>const A &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" line="28" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" bodystart="28" bodyend="28"/>
        <references refid="namespacesisi4s_1a23086047930a61869e747cae447dfe65" compoundref="Integrals_8hpp" startline="11" endline="13">permuteIndices</references>
        <referencedby refid="structsisi4s_1_1IntegralInfo_1a243d2bc78b8a39c37eef509f0ca7565a" compoundref="Integrals_8hpp" startline="48" endline="68">sisi4s::IntegralInfo::getAntisymmetrizers</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1ac001193dbf37e00b3e13c84c73cba7a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>A</type>
        <definition>A sisi4s::upTr</definition>
        <argsstring>(const A &amp;a)</argsstring>
        <name>upTr</name>
        <qualifiedname>sisi4s::upTr</qualifiedname>
        <param>
          <type>const A &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" line="32" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" bodystart="32" bodyend="32"/>
        <references refid="namespacesisi4s_1a23086047930a61869e747cae447dfe65" compoundref="Integrals_8hpp" startline="11" endline="13">permuteIndices</references>
        <referencedby refid="structsisi4s_1_1IntegralInfo_1a243d2bc78b8a39c37eef509f0ca7565a" compoundref="Integrals_8hpp" startline="48" endline="68">sisi4s::IntegralInfo::getAntisymmetrizers</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1af13987c51f965d40686aa1e90bfb1ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>A</type>
        <definition>A sisi4s::downTr</definition>
        <argsstring>(const A &amp;a)</argsstring>
        <name>downTr</name>
        <qualifiedname>sisi4s::downTr</qualifiedname>
        <param>
          <type>const A &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" line="36" column="3" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Integrals.hpp" bodystart="36" bodyend="36"/>
        <references refid="namespacesisi4s_1a23086047930a61869e747cae447dfe65" compoundref="Integrals_8hpp" startline="11" endline="13">permuteIndices</references>
        <referencedby refid="structsisi4s_1_1IntegralInfo_1a243d2bc78b8a39c37eef509f0ca7565a" compoundref="Integrals_8hpp" startline="48" endline="68">sisi4s::IntegralInfo::getAntisymmetrizers</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1ad8f97234396d606aceaefe0bb5473fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>real</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classsisi4s_1_1LapackMatrix" kindref="compound">LapackMatrix</ref>&lt; F &gt;</type>
        <definition>LapackMatrix&lt; F &gt; sisi4s::operator*</definition>
        <argsstring>(const LapackMatrix&lt; F &gt; &amp;A, const LapackMatrix&lt; F &gt; &amp;B)</argsstring>
        <name>operator*</name>
        <qualifiedname>sisi4s::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classsisi4s_1_1LapackMatrix" kindref="compound">LapackMatrix</ref>&lt; F &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1LapackMatrix" kindref="compound">LapackMatrix</ref>&lt; F &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/LapackMatrix.hpp" line="130" column="16" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/LapackMatrix.hpp" bodystart="130" bodyend="150"/>
        <references refid="Exception_8hpp_1aa49c727f91093a79c46ee6ecd83548bb" compoundref="Exception_8hpp" startline="9">EXCEPTION</references>
        <references refid="classsisi4s_1_1LapackMatrix_1a5b733258c657d65b923dd8831dcf65f1" compoundref="LapackMatrix_8hpp" startline="77" endline="77">sisi4s::LapackMatrix&lt; F &gt;::getColumns</references>
        <references refid="classsisi4s_1_1LapackMatrix_1af17845e3e518413996316885e56e0367" compoundref="LapackMatrix_8hpp" startline="76" endline="76">sisi4s::LapackMatrix&lt; F &gt;::getRows</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1aba780556b3986877ef9eed5b576fab06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; sisi4s::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const RangeParser &amp;parser)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>sisi4s::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classsisi4s_1_1RangeParser" kindref="compound">RangeParser</ref> &amp;</type>
          <declname>parser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/RangeParser.hpp" line="89" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/RangeParser.hpp" bodystart="90" bodyend="93"/>
        <references refid="classsisi4s_1_1RangeParser_1a0841413f2d569e23dd4f47ab9fc46889" compoundref="RangeParser_8hpp" startline="22" endline="24">sisi4s::RangeParser::getRange</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a1144543bd0254bc080bc5eb82c7fa087" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; sisi4s::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, SourceLocation const &amp;l)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>sisi4s::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1SourceLocation" kindref="compound">SourceLocation</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/SourceLocation.hpp" line="39" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/SourceLocation.hpp" bodystart="39" bodyend="43" declfile="/home/runner/work/sisi4s/sisi4s/src/util/SourceLocation.hpp" declline="11" declcolumn="3"/>
        <references refid="classsisi4s_1_1SourceLocation_1a12d3414060a42cc145109c13954e06a3" compoundref="SourceLocation_8hpp" startline="28" endline="30">sisi4s::SourceLocation::getFile</references>
        <references refid="classsisi4s_1_1SourceLocation_1ae3fa7f4644a8702a1c33d2a97e7feee4" compoundref="SourceLocation_8hpp" startline="31" endline="33">sisi4s::SourceLocation::getLine</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1abb2a741481172f62f7345c12f61ad1b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsisi4s_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time sisi4s::operator+</definition>
        <argsstring>(Time const &amp;t1, Time const &amp;t2)</argsstring>
        <name>operator+</name>
        <qualifiedname>sisi4s::operator+</qualifiedname>
        <param>
          <type><ref refid="classsisi4s_1_1Time" kindref="compound">Time</ref> const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1Time" kindref="compound">Time</ref> const &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Time.hpp" line="72" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Time.hpp" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1a81473a06bad398711cfa0119c06e86cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsisi4s_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time sisi4s::operator-</definition>
        <argsstring>(Time const &amp;t1, Time const &amp;t2)</argsstring>
        <name>operator-</name>
        <qualifiedname>sisi4s::operator-</qualifiedname>
        <param>
          <type><ref refid="classsisi4s_1_1Time" kindref="compound">Time</ref> const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1Time" kindref="compound">Time</ref> const &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Time.hpp" line="78" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Time.hpp" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1af367ad2673f0d194941471c8c23d70a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsisi4s_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time sisi4s::operator*</definition>
        <argsstring>(const Time &amp;difference, const double factor)</argsstring>
        <name>operator*</name>
        <qualifiedname>sisi4s::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classsisi4s_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>difference</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Time.hpp" line="84" column="15" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Time.hpp" bodystart="84" bodyend="87"/>
        <references refid="classsisi4s_1_1Time_1a6b3ecbe8696ec375e96e37004abfde45" compoundref="Time_8hpp" startline="19">sisi4s::Time::FRACTIONS</references>
        <references refid="classsisi4s_1_1Time_1acde8b004fc350d2767365a72a31e3c47" compoundref="Time_8hpp" startline="39" endline="41">sisi4s::Time::getFractionalSeconds</references>
      </memberdef>
      <memberdef kind="function" id="namespacesisi4s_1af0b04a8d66de62bc764d8bec46070280" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; sisi4s::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, Time const &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>sisi4s::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classsisi4s_1_1Time" kindref="compound">Time</ref> const &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/util/Time.hpp" line="89" column="10" bodyfile="/home/runner/work/sisi4s/sisi4s/src/util/Time.hpp" bodystart="89" bodyend="95"/>
        <references refid="classsisi4s_1_1Time_1a6cf1cef47e10cc59c5da149659b32a5e" compoundref="Time_8hpp" startline="20">sisi4s::Time::FRACTION_DIGITS</references>
        <references refid="classsisi4s_1_1Time_1a1dd6ec8247d71c7dc892e7e262ac104f" compoundref="Time_8hpp" startline="36" endline="38">sisi4s::Time::getFractions</references>
        <references refid="classsisi4s_1_1Time_1a8b0e7f1e475a376cf6c0436a05639de1" compoundref="Time_8hpp" startline="33" endline="35">sisi4s::Time::getSeconds</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provides a random number generator based on the mzran algorithm marsaglia, g. and a. zaman. 1994. some portable very-long period random number generators. computers in physics. 8(1): 117-121. </para>
    </detaileddescription>
    <location file="/home/runner/work/sisi4s/sisi4s/src/algorithms/Algorithm.hpp" line="11" column="1"/>
  </compounddef>
</doxygen>
