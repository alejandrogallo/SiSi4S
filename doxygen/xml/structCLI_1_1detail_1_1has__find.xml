<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structCLI_1_1detail_1_1has__find" kind="struct" language="C++" prot="public">
    <compoundname>CLI::detail::has_find</compoundname>
    <includes refid="CLI11_8hpp" local="no">CLI11.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename C</type>
      </param>
      <param>
        <type>typename V</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structCLI_1_1detail_1_1has__find_1a453fd5f3c5816cc70946495654204d3c" prot="public" static="no">
        <type>std::integral_constant&lt; bool, <ref refid="structCLI_1_1detail_1_1has__find_1a22add4e672034bd326b73ef63e62207c" kindref="member">value</ref> &gt;</type>
        <definition>using CLI::detail::has_find&lt; C, V &gt;::type =  std::integral_constant&lt;bool, value&gt;</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>CLI::detail::has_find::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="3208" column="5" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="3208" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structCLI_1_1detail_1_1has__find_1a22add4e672034bd326b73ef63e62207c" prot="public" static="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto CLI::detail::has_find&lt; C, V &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>CLI::detail::has_find::value</qualifiedname>
        <initializer>= decltype(<ref refid="structCLI_1_1detail_1_1has__find_1a62e84140bfe93fad60da822a970cce47" kindref="member">test</ref>&lt;C, V&gt;(0))::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="3207" column="23" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="3207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structCLI_1_1detail_1_1has__find_1a62e84140bfe93fad60da822a970cce47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CC</type>
          </param>
          <param>
            <type>typename VV</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto CLI::detail::has_find&lt; C, V &gt;::test</definition>
        <argsstring>(int) -&gt; decltype(std::declval&lt; CC &gt;().find(std::declval&lt; VV &gt;()), std::true_type())</argsstring>
        <name>test</name>
        <qualifiedname>CLI::detail::has_find::test</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="3204" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structCLI_1_1detail_1_1has__find_1aff116fc3bdbae044461d782682f7177a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto CLI::detail::has_find&lt; C, V &gt;::test</definition>
        <argsstring>(...) -&gt; decltype(std::false_type())</argsstring>
        <name>test</name>
        <qualifiedname>CLI::detail::has_find::test</qualifiedname>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="3205" column="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>CLI::detail::has_find&lt; C, V &gt;</label>
        <link refid="structCLI_1_1detail_1_1has__find"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="3202" column="14" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="3202" bodyend="3209"/>
    <listofallmembers>
      <member refid="structCLI_1_1detail_1_1has__find_1a62e84140bfe93fad60da822a970cce47" prot="public" virt="non-virtual"><scope>CLI::detail::has_find</scope><name>test</name></member>
      <member refid="structCLI_1_1detail_1_1has__find_1aff116fc3bdbae044461d782682f7177a" prot="public" virt="non-virtual"><scope>CLI::detail::has_find</scope><name>test</name></member>
      <member refid="structCLI_1_1detail_1_1has__find_1a453fd5f3c5816cc70946495654204d3c" prot="public" virt="non-virtual"><scope>CLI::detail::has_find</scope><name>type</name></member>
      <member refid="structCLI_1_1detail_1_1has__find_1a22add4e672034bd326b73ef63e62207c" prot="public" virt="non-virtual"><scope>CLI::detail::has_find</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
