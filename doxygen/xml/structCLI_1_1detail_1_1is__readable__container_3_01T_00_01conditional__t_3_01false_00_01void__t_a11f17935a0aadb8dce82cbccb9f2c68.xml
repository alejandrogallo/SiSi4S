<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structCLI_1_1detail_1_1is__readable__container_3_01T_00_01conditional__t_3_01false_00_01void__t_a11f17935a0aadb8dce82cbccb9f2c68" kind="struct" language="C++" prot="public">
    <compoundname>CLI::detail::is_readable_container&lt; T, conditional_t&lt; false, void_t&lt; decltype(std::declval&lt; T &gt;().end()), decltype(std::declval&lt; T &gt;().begin())&gt;, void &gt; &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::true_type</basecompoundref>
    <includes refid="CLI11_8hpp" local="no">CLI11.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>type trait to test if a type is a container meaning it has a value_type, it has an iterator, a clear, and an end methods and an insert function. And for our purposes we exclude std::string and types that can be constructed from a std::string </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CLI::detail::is_readable_container&lt; T, conditional_t&lt; false, void_t&lt; decltype(std::declval&lt; T &gt;().end()), decltype(std::declval&lt; T &gt;().begin())&gt;, void &gt; &gt;</label>
        <link refid="structCLI_1_1detail_1_1is__readable__container_3_01T_00_01conditional__t_3_01false_00_01void__t_a11f17935a0aadb8dce82cbccb9f2c68"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::true_type</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CLI::detail::is_readable_container&lt; T, conditional_t&lt; false, void_t&lt; decltype(std::declval&lt; T &gt;().end()), decltype(std::declval&lt; T &gt;().begin())&gt;, void &gt; &gt;</label>
        <link refid="structCLI_1_1detail_1_1is__readable__container_3_01T_00_01conditional__t_3_01false_00_01void__t_a11f17935a0aadb8dce82cbccb9f2c68"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::true_type</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/SiSi4S/SiSi4S/src/extern/CLI11.hpp" line="1098" column="1" bodyfile="/home/runner/work/SiSi4S/SiSi4S/src/extern/CLI11.hpp" bodystart="1101" bodyend="1101"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
