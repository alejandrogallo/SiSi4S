<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90" kind="struct" language="C++" prot="public">
    <compoundname>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::true_type</basecompoundref>
    <includes refid="CLI11_8hpp" local="no">CLI11.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90_1a61174c6fee6a788f6bc8385ba39477e0" prot="public" static="no">
        <type>typename T::value_type</type>
        <definition>using CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;::value_type =  typename T::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="974" column="5" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="974" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90_1a0a49df2a80091b7be7df2213a0d1385b" prot="public" static="no">
        <type>typename std::remove_const&lt; typename value_type::first_type &gt;::type</type>
        <definition>using CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;::first_type =  typename std::remove_const&lt;typename value_type::first_type&gt;::type</definition>
        <argsstring></argsstring>
        <name>first_type</name>
        <qualifiedname>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;::first_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="975" column="5" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="975" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90_1aaed4768da6bb83654140126447f507f9" prot="public" static="no">
        <type>typename std::remove_const&lt; typename value_type::second_type &gt;::type</type>
        <definition>using CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;::second_type =  typename std::remove_const&lt;typename value_type::second_type&gt;::type</definition>
        <argsstring></argsstring>
        <name>second_type</name>
        <qualifiedname>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;::second_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="976" column="5" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="976" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90_1a305e9696d1b794a8e46221babab3ef4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Q</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;::first</definition>
        <argsstring>(Q &amp;&amp;pair_value) -&gt; decltype(std::get&lt; 0 &gt;(std::forward&lt; Q &gt;(pair_value)))</argsstring>
        <name>first</name>
        <qualifiedname>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;::first</qualifiedname>
        <param>
          <type>Q &amp;&amp;</type>
          <declname>pair_value</declname>
        </param>
        <briefdescription>
<para>Get the first value (really just the underlying value) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="979" column="29" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="979" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90_1a5cb5e4d48ab28379b28c310daea1c2fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Q</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;::second</definition>
        <argsstring>(Q &amp;&amp;pair_value) -&gt; decltype(std::get&lt; 1 &gt;(std::forward&lt; Q &gt;(pair_value)))</argsstring>
        <name>second</name>
        <qualifiedname>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;::second</qualifiedname>
        <param>
          <type>Q &amp;&amp;</type>
          <declname>pair_value</declname>
        </param>
        <briefdescription>
<para>Get the second value (really just the underlying value) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="983" column="29" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="983" bodyend="985"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Adaptor for map-like structure (true version, must have key_type and mapped_type). This wraps a mapped container in a few utilities access it in a general way. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;</label>
        <link refid="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::true_type</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;</label>
        <link refid="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::true_type</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" line="970" column="1" bodyfile="/home/runner/work/sisi4s/sisi4s/src/vendor/CLI11.hpp" bodystart="973" bodyend="986"/>
    <listofallmembers>
      <member refid="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90_1a305e9696d1b794a8e46221babab3ef4c" prot="public" virt="non-virtual"><scope>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;</scope><name>first</name></member>
      <member refid="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90_1a0a49df2a80091b7be7df2213a0d1385b" prot="public" virt="non-virtual"><scope>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;</scope><name>first_type</name></member>
      <member refid="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90_1a5cb5e4d48ab28379b28c310daea1c2fc" prot="public" virt="non-virtual"><scope>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;</scope><name>second</name></member>
      <member refid="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90_1aaed4768da6bb83654140126447f507f9" prot="public" virt="non-virtual"><scope>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;</scope><name>second_type</name></member>
      <member refid="structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90_1a61174c6fee6a788f6bc8385ba39477e0" prot="public" virt="non-virtual"><scope>CLI::detail::pair_adaptor&lt; T, conditional_t&lt; false, void_t&lt; typename T::value_type::first_type, typename T::value_type::second_type &gt;, void &gt; &gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
