<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="structCLI_1_1detail_1_1type__count_3_01T_00_01typename_01std_1_1enable__if_3_01is__mutable__contb2a5be46bc2085412bb046a9416235bc" kind="struct" language="C++" prot="public">
    <compoundname>CLI::detail::type_count&lt; T, typename std::enable_if&lt; is_mutable_container&lt; T &gt;::value &gt;::type &gt;</compoundname>
    <includes refid="CLI11_8hpp" local="no">CLI11.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structCLI_1_1detail_1_1type__count_3_01T_00_01typename_01std_1_1enable__if_3_01is__mutable__contb2a5be46bc2085412bb046a9416235bc_1a8c275e5d75062a454c4e04c18ceea34d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int CLI::detail::type_count&lt; T, typename std::enable_if&lt; is_mutable_container&lt; T &gt;::value &gt;::type &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>CLI::detail::type_count&lt; T, typename std::enable_if&lt; is_mutable_container&lt; T &gt;::value &gt;::type &gt;::value</qualifiedname>
        <initializer>{<ref refid="structCLI_1_1detail_1_1subtype__count" kindref="compound">subtype_count</ref>&lt;typename T::value_type&gt;::value}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="1262" column="26" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="1262" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Type size of types that are wrappers,except complex and tuples(which can also be wrappers sometimes) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>CLI::detail::type_count&lt; T, typename std::enable_if&lt; is_mutable_container&lt; T &gt;::value &gt;::type &gt;</label>
        <link refid="structCLI_1_1detail_1_1type__count_3_01T_00_01typename_01std_1_1enable__if_3_01is__mutable__contb2a5be46bc2085412bb046a9416235bc"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" line="1261" column="12" bodyfile="/home/runner/work/sisi4s/sisi4s/src/extern/CLI11.hpp" bodystart="1261" bodyend="1263"/>
    <listofallmembers>
      <member refid="structCLI_1_1detail_1_1type__count_3_01T_00_01typename_01std_1_1enable__if_3_01is__mutable__contb2a5be46bc2085412bb046a9416235bc_1a8c275e5d75062a454c4e04c18ceea34d" prot="public" virt="non-virtual"><scope>CLI::detail::type_count&lt; T, typename std::enable_if&lt; is_mutable_container&lt; T &gt;::value &gt;::type &gt;</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
